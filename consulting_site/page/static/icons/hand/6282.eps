%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Cartoon character hands gestures set.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Виталий Викторович
%%CreationDate: 6/30/2020
%%BoundingBox: 0 0 2000 2200
%%HiResBoundingBox: 0 0 2000 2200
%%CropBox: 0 0 2000 2200
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Cartoon character hands gestures set</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Cartoon character hands gestures set. Gloves, pointing finger, hand stop sign, like, peace, victory, fist. Vector illustration for communication, greeting, emotion expression concepts</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>hand</rdf:li>
               <rdf:li>pointing</rdf:li>
               <rdf:li>glove</rdf:li>
               <rdf:li>cartoon</rdf:li>
               <rdf:li>character</rdf:li>
               <rdf:li>finger</rdf:li>
               <rdf:li>gesture</rdf:li>
               <rdf:li>comic</rdf:li>
               <rdf:li>mascot</rdf:li>
               <rdf:li>arm</rdf:li>
               <rdf:li>human</rdf:li>
               <rdf:li>white</rdf:li>
               <rdf:li>showing</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>motion</rdf:li>
               <rdf:li>collection</rdf:li>
               <rdf:li>set</rdf:li>
               <rdf:li>flat</rdf:li>
               <rdf:li>isolated</rdf:li>
               <rdf:li>background</rdf:li>
               <rdf:li>concept</rdf:li>
               <rdf:li>stop</rdf:li>
               <rdf:li>sign</rdf:li>
               <rdf:li>like</rdf:li>
               <rdf:li>thumb up</rdf:li>
               <rdf:li>peace</rdf:li>
               <rdf:li>victory</rdf:li>
               <rdf:li>fist</rdf:li>
               <rdf:li>communication</rdf:li>
               <rdf:li>hold</rdf:li>
               <rdf:li>greeting</rdf:li>
               <rdf:li>direction</rdf:li>
               <rdf:li>pointer</rdf:li>
               <rdf:li>forefinger</rdf:li>
               <rdf:li>body</rdf:li>
               <rdf:li>ok</rdf:li>
               <rdf:li>palm</rdf:li>
               <rdf:li>expression</rdf:li>
               <rdf:li>grip</rdf:li>
               <rdf:li>knuckle</rdf:li>
               <rdf:li>element</rdf:li>
               <rdf:li>symbol</rdf:li>
               <rdf:li>style</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2020-06-30T21:58:26+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2020-06-30T21:58:27+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2020-06-30T21:58:27+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>236</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADsAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYqlUmryza6NJsQrG2RZ9TuGBKxK9fShXpWWTiW/yVFT9paqprirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdiq2WWKGJ5ZXWOKNS8kjkKqqoqSSdgAMVYDefm1Hcuy+V&#xA;tJk1mEfZ1OeUWVg//GKUpNNKP8tISh7McmIEraE0788/LsWqHTPNLWmhzMxWO7S+jubMOBX05pmS&#xA;3eCSm/7yMKezE7YJRpWVL+Y35esAV8z6SQdwRfWx/wCN8iqyf8xPI5hkFr5l0d7oqRAj39uEMlPh&#xA;DFXJpXrQYqttvMeu2M0CeY7K3jsrkokGsafM0tsJJKBFnSREeEOxojAupOxZSQCqybFXYqwPVLS+&#xA;stK82NeI1vHf6vayQ3CvUT28qWUFDuSB8DQspA2Hga5KA3VBeXre1sfM+lrp6RWq3LyRXKRKF9SN&#xA;LaV1UhaV4uqkeGW5BsgMu826zd6ZZW31Pgt1e3C20Ukil1T928rNxBWp4REDfr49DVEWUoTydruq&#xA;31zqFjqbxTTWYhliuIYzFWOcyAK6l5AWUwn4hQEEbbVLONKyCzu4Ly2juYCTFIKrUUOxoQfkRkVV&#xA;sVSvWNUngurPTLJA+oagXKFvswwQ8fWnYdwnqIoUdWZRsKkKsQ8w/mTqF3qVzofkuKG5uLNzFqeu&#xA;3QZrG1lBo0EaIUa6nX9pVZUT9puXwZKMbVj8tp5xiYXSedNTbU6fbdLNrYnjShtFgWPh8qN/lV3y&#xA;3wwi2VeTfzEnvtTXy75kgisfMDqz2M0HL6nfxxjk7W/MsySoN3gclgPiVnWpFUokJZzkVdirsVdi&#xA;rsVdirsVdirsVdirsVSHz15kl8ueV7vU7eJbi+Bit9Pt3JCSXV1KsECvTfh6kgL06LU4QFeLzSeZ&#xA;de8yNoWt6/datpVpbpeazaOlvFbTzyyH6tF6cMaMIlMTsULmtF5cq5eMYBRbMAKbDpliFlzfxWNr&#xA;JcywyTpHQlIY2mkNSB8MaBmbr2GAqx+88+eUHuY7OW0uvr8xb6vbS6fcpNIV3YxRyRK8lAKniDtg&#xA;sKio/NCmH6qfLOuPGRx9M6JqIQjwPK340wcUe9LO/wAsPL91ZeSPqGq2X1W3vJruWLRpQrC3tLmV&#xA;jHbsoqoHBqlOi8uPbMeXNLMYYlhhjiQsVjUIpZizUUUFWYkk+5wKvxVKPN1jLfeXL6GFDLcIgnt4&#xA;l6vLbsJo0/2TxgYQaKvFB5o/L3R9Vi1SyksRqmmuJPVto0MgU/3kLSopCerGWU8ztWuXyohDKNe8&#xA;yad53ltbzQ9Tf9EWDcrS7tHUGW4ZaSMyurjiikoA69Sxp9k5HHHqpZR5G0m7/Q17fC4aK71KkVte&#xA;Mis4gh5LHJx/u2LO8kiGlCrLtkJmykMq02wg0/T7axt+RhtY0ijLnk5CClWbux6k9zkFRGKvOvzh&#xA;N5p+jT69aamdOVYYtHvbhCqvBFqOoWkb3CSk/unjhL0PYsrbcdyOaseubqx8vaLb2WnWhSJeNpp1&#xA;jbgcnkIPBFJ2GwLMzdACxzJqmKX6XoF+Gt5/MV+2oX8R5W8FVSCNl3DcEWMTSL/vxl91VMQO9U01&#xA;bS4NStRFITHNDIlxZ3KU9SC4hbnFNGT0ZGFfA9DsSMJFqyPyL+a9prtzDo2rWkmm69yktzUBrWe4&#xA;tg3rLBICWG0bOqyBSU3XkATmNKJDJn+RV2KuxV2KuxV2KuxV2KuxV2KsH/OJWj8npfmpg03ULG7u&#xA;6dBAlwiyyN/kxK/qHw417ZKJ3V5V5f1KC0866vb3JCPqKQ3FvKTtIkfKNgP9Ruv+sMyyN2LN8CqN&#xA;5fXdlAZrWze+kBANvE0aOQTuQZWjTb3bAVSvQdU1DzX520mys9IvLCXQLuPUNUuLxFQQQtFNGvB0&#xA;d0kM55RDgxFOZ7ZVkIqkh7hlKXYq7FXYqwf8ztf1OCG08u6PK1tqOsCQ3F+mzWtlFxE8qH/frmRY&#xA;4/Akv+xkoRsqwtNc8reWLe30VUeD0YS1tZ21tPMxijpyZVhSQtxr8R99+uZB2YsPu7Xyz5q8x2nm&#xA;C706K20y4t/qun3k6RfWL64nkRonjjAaULCiN8TcWox2CiuAVdq9f/JjULufyrcadcytP+hL19Pt&#xA;5nJZmgEUVxCrMdz6cdwI6+C+OU5I0aZBnuQV2KvFPzksLv8AxNpB1NHPlya6lnW4arWiXstvBbWv&#xA;r7FUK+jKqFti0y8anlSzEQDugsZl0nUPL9zpd2JpTo2nXaO1mxWSGFJVe2aRGb95GkazlivLiANg&#xA;MyJAdEMk/Maw0288p3kt1HHLJaL9asi6q9LmL4oaKQa8novH9oEr3yB5Kr2Z0K1luYrRbe2kthyu&#xA;kRViKqRXmwovwkL9rpt7ZJWM+XWbUNZs7yBSs2q6/ZXFitCG9KCZHZwNqc7K1kdvYmvfI5PpSH0Z&#xA;mMl2KuxV2KuxV2KuxV2KuxV2KrZoYponhmRZIZFKSRuAysrChVgdiCMVYWPyW/LACQLoUalxSNhL&#xA;OGg3r/orCStt/wA8eO23TDxFUBL+T8luG/QvmbULRf8AddvdrBfQJ4U5JHOfpmOTGUopRH5eefYy&#xA;R+nNMnFNnNhPEa/6ou5P14fFK0n/AJK8kXehXd7qep6iuparfRxQM0MP1aCKCAuyRxxl5mJLSsWZ&#xA;nNdqAdMhKVpZZkVdirsVdirBPzQ0q7RbHzNZxvO2kCWLULaMFnexuChldFH2nheJJKdePMDc5OEq&#xA;Kl5rqGu6ZrSWlxY6fqF9HZ3KXNnqFpHHGpaIkN6T3Dxc45E5RkqCGVjQ9Dl92xWjWfJemSXt82mp&#xA;o+rehLcSNNapbzzIi1cpKo4zU/aCuSO+IpXr/wCWvlx9B8n2NvcIU1O7QXurcjVvrk6hpV+Ue0a/&#xA;5KjMaRs2yZRgV2KpD568pW3m7ypqHl+5l9BLxUMc/ASBJYZFmhdo2oJFWWNSyEjkNqiuIV4de+Q/&#xA;N9lB9S1TQNXvQQ0T/o++e9sJlApVI5LqORUIP2JYRToK0rl4yR6hFJj5f/K3z89+upy6aILGyQLZ&#xA;aRq+pSyyNKSrfWFEbX8ERiC8YlrX4jUrQYDkF7BaRPmr8tPP+s3llLeaLp13Y2paSK2juleb1SKA&#xA;zNPDEvD/ACUJ3oT0AwjIL3Wmbfl9+XV9pF82t6/LDLqnBorK0tyzwWiPT1CJGVDLLJxALlRxA4qN&#xA;2LQyZOIqAz/K0uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV45qP5S+bNPnMOiS&#xA;Wmo6Uu1st3PJb3UUdaLESIp0lCLsHLKadQTub4Z6FFFN6X+UfmW/1XTZfMK2NvpOn3UV8baOR7qa&#xA;WWA8o0o8UUcalvtNViVqtBWoGTLxDkoD2LKUuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxVaZIxIIywEjAlUqKkDqQPpxVdirsVdirsVdirsVdiqWaj5g0K2uP0dPq9rZajNRYYZJoV&#xA;m5P9njG5q1flvirtB1Wa+guIrpFj1DT52tL+NK8PUVVkV0rX4ZYpEkUVJAah3BxVM8VdirsVdirs&#xA;VdirsVSK28xq+spZupEVxJJbIGAWSC7hj9UwSKCf72AGaNv5fYriqe4q7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq85/M38y20X19I0mVIL+NA2oarLxMVkki1QKrbSXDChVSOKghmrVVecIX7kPJ7Lypd6yWng0&#xA;iLjMecmrawrSXMz/AO/TGwM7n3ldD4bZkbdAh6D5X1X8w/K1j9VuZIvNNkrckR2e1u4kPWOKSV7o&#xA;TAdVErg9udKUplj7k29B8uec9B1/nFZzNDqEKhrnTLlfRu4q03aJuq1NA6ckPZjlZFJTzArsVdir&#xA;sVdirxyxjS4sGN0vqyXhke/EgrzlkJEwcHqK1Wnht0zKiNmKaad5m1HTtNsbPTY4BqVzCZ9Wv7v1&#xA;J/VktSNPVvTV4izSLaVZuY40Gx5bUxhZKbZj5R8w3GsWlyLuNI72ym9CYx1EcgKLIsiBiSoYPShJ&#xA;oQdz1yMo0Up9kVdirsVYj5k86XEF7NpeipG93b8RdXk4Lwwsw5CMIjI0j8aEjkoWo3J+HJxhaLeb&#xA;3Xm+41vVdQttU1FNT0LTLf1roqqpaxThmLxyBPglKIoajE8PmctjABbSfyzaLJrF3rS2b2NtqHox&#xA;aNYwosd1yjUn1IhDxdZJOrANsqjkRuFJAqyh7Jpujam3mDTb/VI+dymmQm+nRuMf1+EPGCAhVT8F&#xA;1P2p08FzGZMqxV2KuxV2KuxV2KuxV2KuxV2KuxV47538rWcH5pW2pPOLlNStbi/axkQMILu2FlaJ&#xA;OrVp8UQ4rVag8qHeguxHogo9JXQUU7eGXIQOsatq9nHHPZ2X1+FWP1qKNgs4Sn2olYcZCO68gadK&#xA;nYgqxS+81WOoyfW7ixluLG3cm11fTnkF5aOoo/qRqIrm3dTUNw5AD7fHpgIB9yvSPy58/wBxqFym&#xA;i6tdJdyzxmbRtVAVDdxKOTxyKgEfrxqedU2dKsFHFspnDhSC9EytLsVdiqC1LW9F0sRnU7+2sRNU&#xA;Qm5mjh5lacuPMrWld6Yq8W0ubRNZ05FS/MrSepO0dtdvHIguGMvBjA6N8Aem/TMmPJil2lavr4t9&#xA;Cnuvq76dOk9rDJGkonhkvJBPEbkPLIJhzUqWXgat0puERo+9L078rYbmOLWBcTtdSLcoklwUWMF/&#xA;SWTiFUAURZFA6mlKkmpyrJzUM5ytLsVYD58/MK/0o3tpoqQG5sVjSe4uA0i/WZ+Po26xoyGp9RSz&#xA;lqLUbN8XGcYWi2GappVxL5auNMQG5ub5WiuJpCBykuSfXnkO1d3ZyO52zIrakKGs6DbPpdnodtAI&#xA;bCSWM3npj04lt4PjdWp8NHIVOHcE9gcJV6X5A0OKKwTWZogtzexj6oGB5RWh3jUct1Mm0j7A/ZVv&#xA;sDMacrLIMtyCuxV2KuxV2KuxV2KuxV2KuxV2KpH5w8yny/pS3ENuby/upVtdOtOXASXDqzgO5B4I&#xA;qIzu1CeKmgJoCQLV5/FZXQurjU9Uuvrut33AXNwF4RpHHX04II6twij5MVBJJJLEkk5kQjTF2lW3&#xA;mjWrU32j6ZDNpruyWt1cXPoesEPEyqojlPplgeLftD4hsRUHKAmlK/0vzPpGsafJrb20Vrfxz28N&#xA;vaPJLGtwnCVQ0siQl3eJZCo9MUCN1rjGdlaSnzjpVpYKnmmyQQ3NmyNqTrUerafZcybhf3NRJyNS&#xA;FVlHXJg0UJFdaeNL1WG3tpWtNN1J/rWjXMYHKyvo6ylUB2oN5UXpQSIfhoMSL2V715M16bXvLVnq&#xA;dxCILt/UhvIVNVW5tpWt5wh7p6sTcT3FMxSKZJ1gV2KvLdRne78yarfSblZzaWxPVYbUcCg9vW9R&#xA;vpzIxjZBSDU/NPkyVpLLXXtIHidl9HVEWFWKmnOL6wFWRT/MhIyWyGPaXdW+o6nYWumq8eiyXr31&#xA;or8gHt7OHi0sIYkrC11NFwFANiRsRgu1e0flvbquhXF5TjJf31zJIvgYH+pr98dspyiZ3ZMqyKux&#xA;V8+21vcar5y16G4kYW1nq15+56c3Wd3R2PUhVlUKO1K9eNMvH9LEspvpVszEZQTHK6xeoBVVZzxT&#xA;lvX4mIA98bVTuYre9tbi0Z6pKjwy8CKjmvEj2NDhVkNr598xfV4VfRoJJERVuJPrbR8pFFHZEWCU&#xA;BSd1q1adaZj+EU2yby75ktNbhm9OKS2urZgtzaTceachVWBUsrI9DxYHxBowIECKSm2BXYq7FXYq&#xA;7FXYq7FXYq7FXYqlvmLy9p2v6Y2n34cRlllimiYpLFLGapLG46Mp+g9CCCRiCrFIvyoWaQR6vrt3&#xA;qGnDZrJUhtvWXf4biSJQ7A9xH6YPQ1FRkzkJWmdQwwwQxwQRrFDEoSKJAFVVUUVVUbAAdBkFYz5x&#xA;043EUiX9nLqvl+4Cm7t7cMbq1miPKO5thH+9alBVYzzBAKA1bFWHN5H/AMVaPqOmaR5ruBaNG0E7&#xA;XWnFZwJVI9ORnFsp22bhGrAdwaHLPEKKWWn5Xeab76jpWvw2C6Ra3Mc9xc21xM7yRwnmscUZiiKG&#xA;Q/CxL/CpNKnfJSy2tPU9L0vTtKsItP063S1s4ARFBGKKORLMfcsxJJO5O5ylKKxV2KvLtXt2sfM2&#xA;qWbjis0gvbQEk8op1BkIrttcCSoHTavUZkYjsgpdrGlW+q6bNYTs6JLxKyxkB0dGDxyISCOSOoYV&#xA;FNt8sQhdF0GKwnmuZLqW+vpUSF55uA4RR1KRIkaoqD4uR7kmp7UFK9H/AC4Rl8oWrkEJPNeXMJO/&#xA;KK4vJZonH+S8bqy+xzGlzZMlyKuxV5j568p6xaa/P5g0a3e5gvQj30cA5ypNGgj5+mPidHjjQUQE&#xA;hhXvtdiyAbFBDFNauPNN/bW1lLoF/JZzTob6X6jcikMREhUo0dW9QqEO1KE77ZYZR70Mg0m4vbwJ&#xA;aaTot0eIoGaE21sg/wAqWQInzVOTf5JyMpAJTaTyv5wtYROsNpdH/d1pBK4cD/itpURJD/rcP4ZH&#xA;xVpNPImn3q3Wqapc28lql2ILaCKZWjdltvUYylGAZQzzlQGH7NehGQnKyoZfkEuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2Kpfq+t2+lG2e6hl+qTyCKS8QK0UDOwWMzfFzVXZqcgpVf2io3xVMMVdirsVdi&#xA;rsVYx+YXlt9b0B/qcRbVrRkmsZomEc6hZEaaOKRiqgyxKUox4E05bYYmirySa81e3lEMuv28BUUe&#xA;G+hS3uxWu7o/p8T848ygR3sU18g+U7jWdXkivtVudY0Awyy3xX0BBLcGSMRxNPDBEzgp6nJEfYBV&#xA;PwmhqyS7ikPbFVVUKoCqooqjYADsMpS3irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;diqVeYddGk28Rji+sXlw3C2g5cASByZnYBuKKOpp1oOpwxFqlmka2vmK11fSdUtVVooglwkLNIst&#xA;vdLIgoCoIY+m6ld+xrvQGUaVPtOmY28NvcSK2oRwRPdRAjmC4I5Fa1AZkah70PhkVRWKuxV2KuxV&#xA;2KuxV2KuxV2KuxV2Kqd1cRW1tLczGkUCNJIQKkKg5Hb5DFXlGk+d/wAy9Ysf0x6WlW9jeqJbPQ7i&#xA;Cd5BbuOSJPdLMAJGU/GRCVX+U5YMeyLTvyjd2MC2WqaJHJY6PeTtp+s6C78o7C9rxR4VqRGDIBGU&#xA;jARxIsgA35QIpL0DArsVdirsVdirsVdirsVdirsVdirsVQurX6adpd5qEg5JZwSXDr0qIkLkb/LF&#xA;XgVnc6w/muC6sYWvJ100yarJdvLa1luZh+94SRO5dzasKEKAoAqABmQBSE80jXtatdY1vU7Sf0LW&#xA;we1t7i14RsZ/Qi+tSK7sHIHC64rwIo1dzgnG7V6dqVokHmvR9UjAEtyk+mXHbnG0ZuoyfH02tmC1&#xA;6c28coSnuKuxV2KuxV2Kpdq3mPQNIXlqupW1j8JcC4mSMlVFSVDEE/RirDZ/Pfme8T67p8Nppmmk&#xA;coBfxSz3EkZFQ7oktssB/wAglzTrxNVFscdotMPJPne71W/m0jVTbtqCxG6tbm0V44p4VYJIPSd5&#xA;mjeJnTkC5qGBHcCM4cKWZ5BXYq7FWnRHRkdQyMCGUioIOxBBxV435ef9GabNpbkyjRZ7jT1YVd2j&#xA;tJGihZgtSWeFUYjxOZMdwhk35Qrc3Om+YL+7gEaX+tSS28TUYhbe2trXcjbkJLZq0rQ7V2yifNIZ&#xA;/kVdirsVdirsVdirsVdirsVdirsVdiqTedYjL5N16IdZNOu1G9PtQOOvbFXicesa4PNkZs9L4Nqm&#xA;nBp4L6dYGjis5jxb9ytzV2+uEcDTp1zJ6sXWk2tx2fmflbQvp0c943rCZzcGT0VZR6XpcePEqmzk&#xA;7Vpvsnql7w1m1xqkF6zq1tbwt9XQb1klI5SHt8KLRafzNmMlG4q7FXYq7FWD/mZCs50qC5iE9hK0&#xA;4aBwGje4CBogwbYn01lIrlmPmgvN4Nc0qDTnht9EubG5n+CezawnSFZH+EmaaKNoWjWtWdGb4a0r&#xA;l10EJFdzT38/1V9ZutW0BJHtNLitFSC91aS3bhNK0kbD07dHHEyBkDfaJUEc4xkSEovS5bbyv5s0&#xA;jXWsdN02LSWkfW7TT7pmuFsLiJoWmmhEUYlELukruRUBTStcjMbKH0llKXYq7FUJq+qWek6Veape&#xA;vws7GGS4uHAqQkSlmoO5oNhirwuPV9chkisoLOOfzBqTT6pqCTTGOC2FxMZGRpFSRjwMgjSib0r4&#xA;nMqIoMUv0Hzf5v8ALFdGbWTZ3Fs7TJYXqWk9rMLmV5XlSSOG0uJQ8rPU+orA9R4x8MH3pt7F5A8/&#xA;Q+aIJ7e4gFlrNiEN3aq3ON45K8J4HoC0b8SNxVSCD2JplExKWW5FXYq7FXYq7FXYq7FXYq7FXYq0&#xA;zKqlmIVVFWY7AAdzirBvN3nvyxd+Vdatba4lleeyuoYZVtLtoHZ4WCkTrEYihr9sNx98lwlWKS6d&#xA;6us2mqxSgCK3mt5Epy9RJmjdSCCKFWi677E/MZNMW9N0+exu9Sk9cS2uozC4FuUIMT+lHEwV+W6n&#xA;0uX2epxpXoH5f3xn8uR2kjcp9LdrGTueMQDQcj3Zrd42b3JzGkKLJkmRV2KuxV2KsN/MYkvoqsfg&#xA;FzK4Hb1Bbuo/4VmyzFzQWJahqVhp9v8AWL+4S2gqEMsjcVBPSrHpmRaHntxPDY31xLY3K22ka3fJ&#xA;bx+Y4p4ZLa1smga4ljik5kxSS3ZkVSV4gyLTcKuVpXa3ovlHVvI+qReXrIs8Mr2em3trQyXV5cqs&#xA;FUnBZ5llkn9GVmPxHl4A4mqV9P5jpdiq2SSOKNpJGCRoCzuxAVVAqSSegGKvnvzJ5417zprGnRRT&#xA;SWflu5uo57XS0VVaa0tGFx9ZvGYF6SFE4xCgHJQ1TUi+OPYEotAW2qa0vma78wC2M+jQk6ddQ26m&#xA;S4AASX1wg3YRs/DgBWnJtzRctPNDMLLUPKWvR8Ybq1vmAo8JMbstRUq8bfEp9mFcjat+XND0jR/z&#xA;I0KXRIIrS4u0vIdQgt1VFezMBkaRkSijjcxQDnTuB3yvIBSQ9kylLsVdirsVdirsVdirsVdirsVS&#xA;/wAw6W2raFqGmLIImvbeSAOw5KC6lfiUEcl3+IV3GIV5tfJ5psV9K90G5Kp1lsx9bRz4oIQ0lPDm&#xA;in2zJE4opdps1tfQevE1UNVp3DKSrKw7FWBBHjkiUITQJJbrUNYmmJMdvcraW8ZPwhIoUdm49OTS&#xA;Svv3AXBapp5U8xnTfN95pzQA6bffVVa6V947yQyooZKUIdViWoaoJXahqKskeqQ9OypLsVdirsVe&#xA;W/mx5fGo61aPdvLBC8CJpV7G5HoXsTyOxSvwpI6OtP5wpB2FDbipBYfD5q1bSpGtPMFlJOIthqdg&#xA;hlVl7NJbLWZWP/FauD/k/Zy+ihOtMW212Ez6PpE2oLfqA8ptHgikQVH7ya5SKMhe61LeCnIGYTTP&#xA;fLPkaOwkhv8AVHW51GLe3hj2tbWo40hUhSzBdvUcV68QgJXKJTJSyvIq7FUk886bfap5J8waZp+1&#xA;/fabeW1pvT99NA6R7/6zDFXgkl76c1h5j0yAywCJxJZBaSG1uCpmhVf2ZYniX4fFCm1ds3mAQxQ/&#xA;l2OWe5u73QtUNvq11NLcS2c49S2urUP6dvJHGSlQsKojMjKwYEPv8OQG6phqUyXI4eYvKS3kg2El&#xA;s0Eyn3/0k2xHjT4vmclRVln5IaBp02san5nsNKj0e1t1k0iGALGJZnJhnnkkaEtHxRlWNArN8Qev&#xA;hmPkO9JD2LK0uxV2KuxV2KuxV2KuxV2KuxV2KuxVgvmvylrUeqS6z5ejSc3QBv8ATmYIzyqAoliZ&#xA;yqcmUAMrMo2r1rWyE62KCHnV15nv7C9vrBdKmg1MSK17A4Ao7IoDFywjoUUbqxqOlcyI0eSE+8ka&#xA;LLf6naQSEXDx3Caprdwu6JLHxkt4lJH2g6RcRQHghJoSK1ZDtSQ9hyhLsVdirsVUL6wsr+0ks72F&#xA;Li1mFJIZByU0NR9xFQexxVh91+U2iXFwJDqWopCtAluJIXUIP2fUkhedvm0hb3ywZZBFMwsLG1sL&#xA;K3sbSMRWtrGsMEYJPFEHFRUkk7DqcrSr4q7FXYq7FXmHnb8sNT+uT6v5UETNdO09/oszekkkzU5z&#xA;20tGEcj0+NGHBz8VUbkWsx5OFBDB7T8sPP15fu/+HEs7EsZrq21G8gQtMFI9axksXungnatC/JAw&#xA;6775OWQHktMz8t/lV5gnS4fzFrV7a2UhVbXSbaaGSRYwDz9a89ATcmrsI3qtPttXaByHotPStL0v&#xA;TtK0+DTtOt0tbK2XhDBGKKo6/SSTUk7k7nK0orFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUBqfl/Q&#xA;NVeN9U021v3iBETXMEcxUHqFLq1MVRFjYWNhbJa2NtFaW0deEECLHGtdzRVAAxVXxV2KuxVp3SNG&#xA;kkYIiAs7saAAbkknFUosfN3l6+uha293WVzxiLxyxpKaE0hkkVUl2BPwE7b4SCqazzw28Ek88ixQ&#xA;RKXllchVVFFWZidgAMCpVpfm7QNTuRbWtw4navpxzwzW7PQEn0/XSPnQCp412wmJCpxgV2KuxV2K&#xA;uxV2KqEF9bT3E9sj/wCkWxUTxHZlDiqNQ/stQ0bpsR1BxVXxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;pT5i81aJ5dtop9UnaM3D+lawRRyTzzSULcYoold2oBU0FANzQYgKl+lfmT5K1K2uZ01SK0Fk4ju4&#xA;76tnJEXqULLcemeL8TxYfCaGh2OEgjmqtb/mF5BuX9O38zaVNJUrwjvrZjyHUUDnfAqI1e88zFIJ&#xA;fLltp9/CwZpmu7qWAGlOIjaGC5G+9SengcVXaF5gXUnns7m2fT9XswpvdPlIYqHrwkjkX4ZYn4ni&#xA;6+BDBWDKFU2xV2KqF/ZQX1jcWVwC1vdRPDMo2JSRSrfgcVeVz3FrBpUsGs3EcD27PbXMzuIF9aFi&#xA;vqIxIK1ZOaEGo2OZINhCfXXmdNZ/LfT7uO4WaTV2jtTOgpHP6ch+slR2SWKCWnscpiPUlKNK1Gw1&#xA;LX9N0yzmU38Fyks8PSWGOCsjs6GjhXCcA1KHkOxyyZ2QHqmUJdirsVdiqG1TUINN0y71G4NLeyhk&#xA;uJj0+CJC7dfZcVeO6h5j86WHlybzXda3JHqMUBvJtPdYm09QFLm29PgrcF+zz5CTvy7Zd4YpFs38&#xA;vwX/APi9kb91FZWKyiGQkyrbaiwaG3YgUY289nOFJ+yjADucpSzTFXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq8b846g935t1u8Y1XTBFpGn+C8okurl18C7yqjf8Yh4ZkYI9UFjX5d+XdL1SOXzPqFtHd3l9&#xA;NL9SlmUSejZxSGKBIuVeAcJ6rcepbftkjvuhm99YWMtuI5YI3QfCqMoK0IpShFOmEKxTVvLT2kn1&#xA;3y5Y29vcgM862skum3MzChXjc2rLvtSkikHuQMiYhWc/lDrzeavL0V/fSTy6toF5c6ZNdToIZ3HB&#xA;H9O4VQByCSx+pTYyJyGY5G7J6JgV2KuxV5v5ut4rfzLf/AXjubeC7lH2iXIeAqF8OFsn01y/EdkF&#xA;JP0zfXFraWD2npNaSXV1FZO6c1DeksbsYzInKRpbjj8X3diB6rVOfIOt6RJrdx9dcWGoRqtpbW1z&#xA;JEsjtOyu6gI7qSeEfHep3yOUqHpWUpdirsVdirGvzOmEH5bebJiKiLRtQcgd+NrIcVeY+aLvTnut&#xA;D0rU7mC10291CEXst1IkUPoQk3MiO7lVpKkDJ175lT2ixD2m1j06aU6pa+nK93DEn1uMhhJDGXeI&#xA;BgSCoMzkU8cxWSKxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvBPMkkttpuvzEf6TBqmpyyDv/fzNFX5x&#xA;GOntmViOzEo/yGqWflPSLYAhYLSGEjuDGgX+GGlTYXsN2DJBIssSs8fJGDAPGxSRSR+0rqVYdiKY&#xA;hUkl0fWLKAnR9Rkd0H7q01Em4hbepUzH/SQT0DGRqdeLdMaVkn5LanHqEvmeVbV7ST65B9ahkADL&#xA;OtskciNTYlfTHxDYrxI2zHyc2Qem5BXYq7FXmPnWW6vPNs8dnIsUEFtBb3VzTk4lVpZPTjVvhqEm&#xA;Ri5qO1Ca8bsQQUls11eS3juLKWHUIXqrfWWEEysjFXDvCjoSrArxEYp45ZaEkf65b2Otm7dDdRq0&#xA;VY3LL9YnAaJVLBSvxSKFr02yR3FK9k8ma9e6xp1w98sa3dpP9XlaJWRGrFHMCFZnIoswU/EdxXbo&#xA;MWcaNMk/yKpP5vt9eufLd9BoEgi1WRFWBy/pniXX1AknF+DmPkEaho1DiFePx6FZQaiLG+0m90PX&#xA;mia4hvHmP1uVEZUeWPULeaZpOLOvINJy3HJd8yI8JQmetecNSv8AyRqnkzVUmuPMF8n6OgvVgf0b&#xA;qyuj6cl07xr6UbRQM/rKSvxD4RR1GVnGbpbW3Ojx3Ot2moTBXSyjkECHciaT4fUHgVjLL/sjmQhJ&#xA;zr2ueTtT1nUdEuFTR7OG3vbvQyifVp5GM31kqwXnDK8ccdGRqcviZWrlcsdpt7/mOl2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KsH82/lZaa9e3V3balPph1JVTVIY0jljm4KIxIqyA8JfTUJyFQQBVTTJRmQr&#xA;z7RbfUvLGoJ5S1sBbqKMfUbobRXkMYC+tD79PUj6o3ipVmyYzEh5sUj0q71e28y66llNAtw140su&#xA;gXJMStEVVUuYJQHZGmC8mqpRmqPhYMcAHcrNLO/kltPXvbZ9OcEhorh4idv2g0TyLxPapB8QMkFZ&#xA;F+UUMc1prmuRIRbavqAeym6CaC2tobcSjbo0scnFv2lCkbHMaZssgz/IK7FXYq8wihaHU9Vt5jWa&#xA;O+umdTvRZ5muIx/yKlQ/TmRA7IYt5j0SW1lM+lXcmn3N9cxKyQn4JGkJSVzGeScuB5lgtfgrkkJd&#xA;LaazY8RdWgmsLANc1t32kkCktJO8zeox67AN3PxHjSXJXunlrRf0RpawSFXu5WM15KooGmcAGnsq&#xA;gItd+KiuYhNlkmuBXYqwn81tPb9C23mCFS03l+b61OFFWaydTHdj5JG3rUHUxgZKBoqlEUMMkSur&#xA;clcAhgQQQfDMm2LZtE7E42rFfMVimqXtj5Zt0rLr13HFecNj9XC1uXJ9rWJ6e/Ed8EzUVe7ZisnY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FUm81eU9H8z6YbDUozVGEtpdxELPbTqCFmgeh4utfkRswKkjC&#xA;DSvN9S/KXzhqSx2mpNouoJCf3GsSrcxXCdi628e6t48Lla+2WeKimS+XvyV8kaZYQQ6jbNr94igT&#xA;3eqyzXayODWogneWJB4AD5knfIGRKWdxxxxxrHGoSNAFRFFAANgAB0AyKt4q7FXYq88/NRrjTLjR&#xA;tWs0jBu7sadftIWVCskUjwMzKrcT6qCNTTcuFoduNmM70gscnvpXmSa502etvzKTlrcqoI+JlAl5&#xA;bjb7NcvQjfJjw+a9Wkit45E0/SpYn1GSReHKSgljt1BrWvwtJX9g0/a2rySrZIes5Ql2KuxVplVl&#xA;KsAysKMp3BB7HFXh1xcah5Q80aj5YgsJr/RLSOG60v0WjM8FrcBgsfB2j9SKOSJ40K1YAAEftZdA&#xA;2EFvUfP1nb25P1DURKTxSI2VzuSK/b4emB/sstCE+/JrRp9T5+fNQQo2oRNBotu9OUdoXrJM1CV5&#xA;XDItKE0RVofibKMk7KQ9TytLsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVQ2pab&#xA;p+p2M1hqNtHd2VypSe2mUPG6nsynbFWIz/k95PdDHBJqVrESKxRaleMlARsElllVRt0UDJCZCsk8&#xA;u+W9G8u6aum6Rb/V7UM0jVZ5HeRzVpJJJCzu7d2Yk5ElUzxV2KuxV2KpJ5l8meXvMfoNqcDm4teX&#xA;1W8t5pba4jD05Ks0DRvxag5KTxNNxhBpWM3P5K6BdSj63q+r3Fn+3YPcoImU9VLrEs9D3pJXJeIV&#xA;pnttbW9rbRWttEkFtAixQQxqFREQcVVVGwCgUAGQVUxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:8FCF48A703BBEA11B497B0D6C2CC4BDD</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:8FCF48A703BBEA11B497B0D6C2CC4BDD</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:f7fc1942-b3bd-104e-abee-f0da70b779fb</stRef:instanceID>
            <stRef:documentID>xmp.did:77038ED3649CEA118AD4809FAF8EEF1B</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:662bf9bd-ec65-f54e-9802-e58f7a4d437b</stEvt:instanceID>
                  <stEvt:when>2019-06-12T11:15:13+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:febd3856-62e8-cd41-b24e-4503786f9a4c</stEvt:instanceID>
                  <stEvt:when>2019-06-17T11:46:07+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c6eece0d-2db0-c84d-b2f6-38a3b3272b0b</stEvt:instanceID>
                  <stEvt:when>2019-06-17T11:47:18+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:603d61cc-3483-0b40-bdc2-1d4731f0db38</stEvt:instanceID>
                  <stEvt:when>2020-05-13T20:43:50+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:90dc4d69-2dfa-ec4c-bf22-5b67073a6376</stEvt:instanceID>
                  <stEvt:when>2020-05-18T13:58:37+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:75038ED3649CEA118AD4809FAF8EEF1B</stEvt:instanceID>
                  <stEvt:when>2020-05-22T23:03:49+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:77038ED3649CEA118AD4809FAF8EEF1B</stEvt:instanceID>
                  <stEvt:when>2020-05-22T23:04:38+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f7fc1942-b3bd-104e-abee-f0da70b779fb</stEvt:instanceID>
                  <stEvt:when>2020-06-01T23:03:23+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8FCF48A703BBEA11B497B0D6C2CC4BDD</stEvt:instanceID>
                  <stEvt:when>2020-06-30T21:58:27+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>2000.000000</stDim:w>
            <stDim:h>2200.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2200 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2200 li
2000 2200 li
2000 0 li
cp
clp
2000 2200 mo
0 2200 li
0 0 li
2000 0 li
2000 2200 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
413.295 392.413 mo
413.295 392.413 397.947 353.808 359.575 363.771 cv
321.203 373.734 311.995 482.077 359.575 492.04 cv
407.156 502.003 425.318 410.015 413.295 392.413 cv
.737255 .737255 .819608 rgb
f
365.645 489.611 mo
359.945 489.611 354.357 487.845 349.366 484.218 cv
346.381 454.517 346.922 428.306 371.027 373.909 cv
372.416 370.774 373.765 367.897 375.073 365.261 cv
379.317 365.665 383.529 366.847 387.537 368.737 cv
385.028 372.746 382.885 376.909 381.166 381.206 cv
379.338 385.776 377.262 391.191 375.313 397.155 cv
375.313 397.155 375.313 397.155 375.313 397.155 cv
375.051 397.955 374.792 398.765 374.536 399.584 cv
374.535 399.586 li
374.485 399.747 374.436 399.905 374.386 400.066 cv
374.384 400.073 374.381 400.082 374.379 400.089 cv
374.368 400.124 374.357 400.16 374.346 400.195 cv
374.345 400.198 li
374.326 400.259 374.308 400.319 374.289 400.38 cv
374.282 400.403 374.275 400.425 374.268 400.448 cv
374.265 400.459 374.262 400.468 374.258 400.479 cv
374.253 400.497 374.246 400.52 374.24 400.537 cv
374.236 400.553 374.231 400.568 374.226 400.583 cv
374.219 400.606 374.213 400.628 374.206 400.651 cv
374.203 400.659 374.2 400.669 374.198 400.677 cv
374.19 400.703 374.182 400.728 374.174 400.753 cv
374.17 400.767 374.166 400.779 374.162 400.792 cv
374.155 400.818 374.146 400.846 374.138 400.872 cv
374.136 400.878 374.135 400.882 374.133 400.889 cv
374.125 400.915 374.117 400.942 374.109 400.968 cv
374.106 400.977 374.103 400.986 374.101 400.995 cv
374.092 401.023 374.083 401.053 374.075 401.081 cv
374.073 401.088 374.071 401.092 374.069 401.098 cv
374.061 401.127 374.053 401.152 374.044 401.18 cv
374.04 401.194 374.036 401.209 374.032 401.223 cv
374.025 401.243 374.021 401.258 374.014 401.279 cv
374.012 401.288 374.009 401.296 374.007 401.305 cv
373.998 401.333 373.99 401.361 373.981 401.389 cv
373.979 401.396 373.976 401.408 373.974 401.414 cv
373.965 401.443 373.957 401.468 373.949 401.497 cv
373.946 401.508 373.943 401.517 373.939 401.528 cv
373.931 401.557 373.922 401.585 373.914 401.613 cv
373.913 401.617 373.912 401.618 373.911 401.622 cv
373.891 401.69 373.871 401.757 373.85 401.825 cv
373.849 401.829 373.849 401.829 373.848 401.833 cv
373.808 401.968 373.767 402.104 373.727 402.239 cv
373.724 402.25 373.721 402.26 373.717 402.271 cv
366.273 427.408 362.535 460.138 386.722 481.406 cv
380.168 486.813 372.817 489.611 365.645 489.611 cv
.580392 .580392 .701961 rgb
f
396.37 470.578 mo
374.594 503.171 331.767 495.458 330.334 435.359 cv
327.373 310.983 463.454 370.164 396.37 470.578 cv
324.234 435.505 mo
325.841 503.002 377.017 510.532 401.444 473.968 cv
474.491 364.631 321.005 299.898 324.234 435.505 cv
0 0 0 rgb
f
536.629 338.175 mo
536.629 338.175 503.665 312.524 492.458 312.519 cv
450.565 312.5 397.257 340.981 381.166 381.206 cv
368.713 412.338 344.8 482.614 427.067 499.512 cv
463.275 506.95 554.091 525.664 574.017 505.739 cv
593.942 485.813 574.017 467.133 574.017 467.133 cv
574.017 467.133 592.834 469.486 600.305 448.315 cv
607.778 427.146 591.451 406.112 591.451 406.112 cv
604.673 402.565 618.364 400.164 631.971 398.743 cv
638.31 398.082 645.53 398.579 652.919 399.077 cv
673.141 400.44 694.633 401.803 702.831 379.403 cv
714.27 348.141 681.157 338.555 657.454 340.109 cv
581.488 345.09 536.629 338.175 536.629 338.175 cv
.737255 .737255 .819608 rgb
f
426.871 499.471 mo
426.867 499.47 426.86 499.469 426.856 499.468 cv
426.861 499.469 426.866 499.47 426.871 499.471 cv
426.665 499.428 mo
426.656 499.427 426.655 499.426 426.647 499.425 cv
426.652 499.426 426.66 499.427 426.665 499.428 cv
.788235 .788235 .854902 rgb
f
373.717 402.271 mo
373.721 402.26 373.724 402.25 373.727 402.239 cv
373.723 402.252 373.721 402.259 373.717 402.271 cv
373.848 401.833 mo
373.849 401.829 373.849 401.829 373.85 401.825 cv
373.85 401.827 373.849 401.83 373.848 401.833 cv
373.911 401.622 mo
373.912 401.618 373.913 401.617 373.914 401.613 cv
373.913 401.616 373.912 401.62 373.911 401.622 cv
373.939 401.528 mo
373.943 401.517 373.946 401.508 373.949 401.497 cv
373.946 401.507 373.942 401.518 373.939 401.528 cv
373.974 401.414 mo
373.976 401.408 373.979 401.396 373.981 401.389 cv
373.979 401.397 373.976 401.407 373.974 401.414 cv
374.007 401.305 mo
374.009 401.296 374.012 401.288 374.014 401.279 cv
374.012 401.287 374.009 401.297 374.007 401.305 cv
374.032 401.223 mo
374.036 401.209 374.04 401.194 374.044 401.18 cv
374.04 401.193 374.035 401.21 374.032 401.223 cv
374.069 401.098 mo
374.071 401.092 374.073 401.088 374.075 401.081 cv
374.073 401.086 374.071 401.093 374.069 401.098 cv
374.101 400.995 mo
374.103 400.986 374.106 400.977 374.109 400.968 cv
374.106 400.978 374.104 400.985 374.101 400.995 cv
374.133 400.889 mo
374.135 400.882 374.136 400.878 374.138 400.872 cv
374.137 400.877 374.134 400.884 374.133 400.889 cv
374.162 400.792 mo
374.166 400.779 374.17 400.767 374.174 400.753 cv
374.17 400.766 374.166 400.779 374.162 400.792 cv
374.198 400.677 mo
374.2 400.669 374.203 400.659 374.206 400.651 cv
374.203 400.661 374.201 400.667 374.198 400.677 cv
374.226 400.583 mo
374.231 400.568 374.236 400.553 374.24 400.537 cv
374.236 400.553 374.231 400.568 374.226 400.583 cv
374.258 400.479 mo
374.262 400.468 374.265 400.459 374.268 400.448 cv
374.265 400.458 374.262 400.469 374.258 400.479 cv
374.289 400.38 mo
374.308 400.319 374.326 400.259 374.345 400.198 cv
374.326 400.259 374.308 400.319 374.289 400.38 cv
374.346 400.195 mo
374.357 400.16 374.368 400.124 374.379 400.089 cv
374.368 400.125 374.357 400.159 374.346 400.195 cv
374.386 400.066 mo
374.436 399.905 374.485 399.747 374.535 399.586 cv
374.485 399.746 374.436 399.905 374.386 400.066 cv
374.536 399.584 mo
374.792 398.765 375.051 397.955 375.313 397.155 cv
375.313 397.155 li
375.051 397.956 374.792 398.764 374.536 399.584 cv
.458824 .458824 .6 rgb
f
536.144 514.636 mo
500.561 514.636 451.44 504.519 427.067 499.512 cv
427.067 499.512 li
427.003 499.498 426.935 499.484 426.871 499.471 cv
426.866 499.47 426.861 499.469 426.856 499.468 cv
426.792 499.455 426.729 499.442 426.665 499.428 cv
426.66 499.427 426.652 499.426 426.647 499.425 cv
360.266 485.579 363.499 436.775 373.717 402.271 cv
373.721 402.259 373.723 402.252 373.727 402.239 cv
373.767 402.104 373.808 401.968 373.848 401.833 cv
373.849 401.83 373.85 401.827 373.85 401.825 cv
373.87 401.758 373.891 401.688 373.911 401.622 cv
373.912 401.62 373.913 401.616 373.914 401.613 cv
373.922 401.586 373.931 401.555 373.939 401.528 cv
373.942 401.518 373.946 401.507 373.949 401.497 cv
373.957 401.468 373.965 401.443 373.974 401.414 cv
373.976 401.407 373.979 401.397 373.981 401.389 cv
373.99 401.36 373.998 401.333 374.007 401.305 cv
374.009 401.297 374.012 401.287 374.014 401.279 cv
374.02 401.259 374.026 401.242 374.032 401.223 cv
374.035 401.21 374.04 401.193 374.044 401.18 cv
374.052 401.154 374.061 401.125 374.069 401.098 cv
374.071 401.093 374.073 401.086 374.075 401.081 cv
374.083 401.052 374.092 401.024 374.101 400.995 cv
374.104 400.985 374.106 400.978 374.109 400.968 cv
374.117 400.942 374.125 400.915 374.133 400.889 cv
374.134 400.884 374.137 400.877 374.138 400.872 cv
374.146 400.845 374.154 400.818 374.162 400.792 cv
374.166 400.779 374.17 400.766 374.174 400.753 cv
374.182 400.727 374.189 400.704 374.198 400.677 cv
374.201 400.667 374.203 400.661 374.206 400.651 cv
374.212 400.629 374.22 400.605 374.226 400.583 cv
374.231 400.568 374.236 400.553 374.24 400.537 cv
374.246 400.518 374.252 400.498 374.258 400.479 cv
374.262 400.469 374.265 400.458 374.268 400.448 cv
374.275 400.426 374.282 400.402 374.289 400.38 cv
374.308 400.319 374.326 400.259 374.345 400.198 cv
374.346 400.195 li
374.357 400.159 374.368 400.125 374.379 400.089 cv
374.381 400.081 374.383 400.074 374.386 400.066 cv
374.436 399.905 374.485 399.746 374.535 399.586 cv
374.536 399.584 li
374.792 398.764 375.051 397.956 375.313 397.155 cv
375.352 413.958 378.23 449.807 400.445 469.866 cv
424.325 491.428 477.036 507.505 535.681 507.504 cv
548.463 507.504 561.531 506.74 574.639 505.103 cv
574.436 505.314 574.229 505.526 574.017 505.739 cv
574.017 505.739 li
567.504 512.251 553.42 514.636 536.144 514.636 cv
.580392 .580392 .701961 rgb
f
575.703 467.211 mo
574.64 467.211 574.017 467.133 574.017 467.133 cv
574.017 467.133 574.017 467.133 574.017 467.133 cv
574.017 467.133 574.017 467.133 574.017 467.133 cv
574.017 467.133 574.64 467.211 575.703 467.211 cv
580.485 467.211 594.192 465.637 600.305 448.315 cv
600.319 448.278 600.332 448.239 600.345 448.201 cv
600.332 448.239 600.319 448.277 600.305 448.315 cv
594.192 465.637 580.485 467.211 575.703 467.211 cv
600.352 448.181 mo
600.379 448.103 600.407 448.023 600.434 447.945 cv
600.407 448.024 600.38 448.102 600.352 448.181 cv
600.435 447.941 mo
601.418 445.049 601.961 442.16 602.166 439.331 cv
601.961 442.161 601.418 445.048 600.435 447.941 cv
602.167 439.326 mo
602.17 439.287 602.172 439.248 602.175 439.208 cv
602.172 439.247 602.17 439.287 602.167 439.326 cv
602.175 439.208 mo
602.178 439.17 602.18 439.131 602.183 439.093 cv
602.18 439.131 602.178 439.169 602.175 439.208 cv
602.184 439.077 mo
602.186 439.044 602.188 439.009 602.19 438.976 cv
602.188 439.01 602.186 439.043 602.184 439.077 cv
602.191 438.961 mo
602.194 438.926 602.196 438.89 602.198 438.855 cv
602.196 438.89 602.193 438.926 602.191 438.961 cv
602.2 438.823 mo
602.201 438.8 602.203 438.774 602.204 438.75 cv
602.202 438.774 602.201 438.799 602.2 438.823 cv
602.206 438.709 mo
602.208 438.679 602.21 438.647 602.211 438.617 cv
602.209 438.648 602.208 438.678 602.206 438.709 cv
602.214 438.566 mo
602.215 438.551 602.215 438.535 602.216 438.52 cv
602.215 438.535 602.215 438.551 602.214 438.566 cv
602.219 438.458 mo
602.219 438.454 602.22 438.451 602.22 438.447 cv
602.22 438.451 602.219 438.454 602.219 438.458 cv
602.226 438.309 mo
602.227 438.301 602.227 438.291 602.227 438.282 cv
602.227 438.291 602.227 438.3 602.226 438.309 cv
.788235 .788235 .854902 rgb
f
574.707 467.839 mo
529.105 455.895 li
537.368 457.097 544.68 457.626 551.159 457.626 cv
599.914 457.626 601.248 427.592 601.248 427.592 cv
601.252 427.599 li
601.986 430.965 602.39 434.568 602.227 438.282 cv
602.227 438.291 602.227 438.301 602.226 438.309 cv
602.224 438.355 602.222 438.401 602.22 438.447 cv
602.22 438.451 602.219 438.454 602.219 438.458 cv
602.218 438.479 602.217 438.499 602.216 438.52 cv
602.215 438.535 602.215 438.551 602.214 438.566 cv
602.213 438.583 602.212 438.6 602.211 438.617 cv
602.21 438.647 602.208 438.679 602.206 438.709 cv
602.205 438.723 602.205 438.736 602.204 438.75 cv
602.203 438.774 602.201 438.8 602.2 438.823 cv
602.199 438.834 602.198 438.844 602.198 438.855 cv
602.196 438.89 602.194 438.926 602.191 438.961 cv
602.191 438.966 602.191 438.971 602.19 438.976 cv
602.188 439.009 602.186 439.044 602.184 439.077 cv
602.184 439.082 602.183 439.087 602.183 439.093 cv
602.18 439.131 602.178 439.17 602.175 439.208 cv
602.175 439.208 602.175 439.208 602.175 439.208 cv
602.172 439.248 602.17 439.287 602.167 439.326 cv
602.167 439.328 602.166 439.33 602.166 439.331 cv
601.961 442.16 601.418 445.049 600.435 447.941 cv
600.435 447.942 600.434 447.944 600.434 447.945 cv
600.407 448.023 600.379 448.103 600.352 448.181 cv
600.35 448.188 600.348 448.194 600.345 448.201 cv
600.332 448.239 600.319 448.278 600.305 448.315 cv
594.192 465.637 580.485 467.211 575.703 467.211 cv
574.64 467.211 574.017 467.133 574.017 467.133 cv
574.017 467.133 574.017 467.133 574.017 467.133 cv
574.025 467.141 574.283 467.385 574.707 467.839 cv
.580392 .580392 .701961 rgb
f
592.085 406.982 mo
592.085 406.982 li
591.685 406.414 591.451 406.112 591.451 406.112 cv
591.451 406.112 591.686 406.414 592.085 406.982 cv
703.315 378.014 mo
703.316 378.013 703.315 378.014 703.316 378.012 cv
703.316 378.013 703.315 378.014 703.315 378.014 cv
703.347 377.916 mo
703.405 377.741 703.461 377.566 703.516 377.392 cv
703.516 377.392 703.516 377.392 703.516 377.392 cv
703.461 377.566 703.405 377.741 703.347 377.916 cv
.788235 .788235 .854902 rgb
f
592.085 406.982 mo
533.908 397.155 li
618.712 386.736 li
631.703 386.107 642.226 385.916 650.867 385.916 cv
657.576 385.916 663.151 386.031 667.86 386.146 cv
672.572 386.262 676.419 386.377 679.673 386.377 cv
690.959 386.377 695.118 384.988 703.516 377.392 cv
703.461 377.566 703.405 377.741 703.347 377.916 cv
703.337 377.948 703.326 377.98 703.316 378.012 cv
703.315 378.014 703.316 378.013 703.315 378.014 cv
703.164 378.472 703.002 378.935 702.831 379.403 cv
702.831 379.403 li
696.596 396.44 682.673 399.73 667.466 399.73 cv
662.678 399.73 657.761 399.404 652.919 399.077 cv
648.077 398.751 643.307 398.425 638.811 398.425 cv
636.446 398.425 634.156 398.515 631.971 398.743 cv
618.364 400.164 604.673 402.565 591.451 406.112 cv
591.451 406.112 li
591.451 406.112 li
591.451 406.112 li
591.451 406.112 591.685 406.414 592.084 406.982 cv
.580392 .580392 .701961 rgb
f
700.25 378.458 mo
687.973 412.008 659.512 385.006 590.738 403.457 cv
586.754 404.529 li
596.357 417.135 602.898 432.713 597.714 447.401 cv
591.115 466.096 578.148 464.703 566.039 463.369 cv
571.268 468.358 579.963 475.113 580.122 486.605 cv
580.721 530.05 478.294 507.229 427.62 496.819 cv
366.345 484.231 360.112 441.244 383.719 382.226 cv
399.743 342.164 452.85 315.268 492.417 315.268 cv
492.456 315.268 li
502.263 315.272 534.452 340.028 535.504 340.782 cv
536.209 340.891 li
617.925 353.519 678.967 329.543 698.645 355.822 cv
703.053 361.708 703.593 369.324 700.25 378.458 cv
cp
703.046 352.527 mo
681.211 323.367 626.522 347.842 537.737 335.556 cv
529.317 329.061 503.145 309.77 492.417 309.77 cv
451.053 309.77 395.465 338.057 378.614 380.184 cv
368.853 404.586 357.608 440.246 372.58 468.056 cv
387.299 495.398 418.881 499.272 426.78 502.259 cv
486.893 514.607 586.408 535.562 585.618 486.472 cv
585.503 479.33 582.362 473.397 579.68 469.613 cv
600.868 466.409 615.279 438.46 595.932 407.79 cv
659.273 391.942 691.899 417.274 705.414 380.348 cv
709.436 369.356 708.639 359.996 703.046 352.527 cv
cp
0 0 0 rgb
f
761.839 362.528 mo
717.942 294.03 681.089 317.678 680.003 310.869 cv
679.195 305.811 729.273 295.552 761.839 362.528 cv
cp
f
526.774 337.069 mo
530.967 336.731 535.154 336.411 539.413 336.228 cv
543.048 336.071 543.289 341.568 539.65 341.725 cv
538.196 341.788 539.452 341.553 526.947 341.506 cv
504.566 341.44 452.894 343.077 526.774 337.069 cv
cp
f
528.773 458.871 mo
525.178 458.434 525.809 452.996 529.437 453.414 cv
538.339 454.498 581.107 460.904 576.353 468.582 cv
573.48 473.214 572.979 464.229 528.773 458.871 cv
cp
f
536.492 400.134 mo
532.86 399.963 533.111 394.479 536.747 394.642 cv
546.773 395.11 600.938 398.716 596.119 407.628 cv
593.522 412.431 592.844 402.727 536.492 400.134 cv
cp
f
529.105 414.323 mo
532.925 414.148 583.037 405.576 583.037 421.854 cv
583.037 438.132 577.102 450.365 551.548 444.248 cv
525.994 438.132 506.906 415.335 529.105 414.323 cv
cp
.788235 .788235 .854902 rgb
f
526.375 354.417 mo
526.375 354.417 579.702 341.993 592.125 354.417 cv
604.549 366.839 611.41 381.557 583.037 383.851 cv
554.664 386.144 474.768 367.413 526.375 354.417 cv
cp
f
635.703 352.505 mo
635.703 352.505 631.499 373.225 654.817 377.392 cv
678.134 381.557 693.043 375.479 693.043 364.948 cv
693.043 354.417 660.933 340.655 635.703 352.505 cv
cp
f
373.508 742.101 mo
373.508 742.101 355.938 762.035 369.297 780.859 cv
382.655 799.682 405.127 768.327 443.381 746.468 cv
481.61 724.622 538.911 738.439 491.408 701.705 cv
470.143 685.261 433.515 684.534 415.21 704.22 cv
373.508 742.101 li
.737255 .737255 .819608 rgb
f
369.258 780.803 mo
368.742 780.073 368.273 779.342 367.848 778.611 cv
367.848 778.611 li
368.273 779.342 368.742 780.073 369.258 780.803 cv
491.408 701.705 mo
491.37 701.676 491.332 701.646 491.294 701.617 cv
491.332 701.647 491.37 701.676 491.408 701.705 cv
491.258 701.59 mo
491.231 701.569 491.207 701.55 491.179 701.529 cv
491.206 701.55 491.232 701.57 491.258 701.59 cv
491.138 701.498 mo
491.113 701.479 491.089 701.46 491.064 701.441 cv
491.088 701.46 491.113 701.479 491.138 701.498 cv
491.021 701.409 mo
490.996 701.39 490.971 701.371 490.946 701.352 cv
490.971 701.371 490.996 701.39 491.021 701.409 cv
490.905 701.321 mo
490.876 701.3 490.85 701.28 490.821 701.258 cv
490.849 701.279 490.877 701.3 490.905 701.321 cv
490.79 701.235 mo
490.712 701.177 490.635 701.119 490.557 701.061 cv
490.635 701.119 490.712 701.177 490.79 701.235 cv
490.525 701.038 mo
490.496 701.017 490.469 700.996 490.44 700.975 cv
490.468 700.996 490.497 701.017 490.525 701.038 cv
490.402 700.947 mo
490.376 700.928 490.349 700.909 490.322 700.889 cv
490.349 700.909 490.376 700.928 490.402 700.947 cv
490.282 700.859 mo
490.255 700.84 490.227 700.82 490.201 700.8 cv
490.228 700.82 490.254 700.839 490.282 700.859 cv
490.165 700.774 mo
490.133 700.751 490.102 700.729 490.07 700.705 cv
490.101 700.728 490.133 700.751 490.165 700.774 cv
490.047 700.689 mo
490.007 700.661 489.967 700.631 489.926 700.602 cv
489.967 700.631 490.007 700.661 490.047 700.689 cv
489.923 700.6 mo
489.884 700.572 489.848 700.546 489.809 700.518 cv
489.847 700.546 489.885 700.573 489.923 700.6 cv
489.776 700.496 mo
489.748 700.475 489.718 700.454 489.69 700.434 cv
489.719 700.455 489.747 700.475 489.776 700.496 cv
489.652 700.407 mo
489.624 700.387 489.598 700.369 489.569 700.349 cv
489.597 700.368 489.624 700.388 489.652 700.407 cv
489.531 700.322 mo
489.501 700.301 489.474 700.282 489.445 700.262 cv
489.473 700.282 489.503 700.302 489.531 700.322 cv
489.412 700.239 mo
489.38 700.216 489.344 700.192 489.312 700.169 cv
489.345 700.192 489.379 700.216 489.412 700.239 cv
489.292 700.155 mo
489.251 700.127 489.21 700.098 489.169 700.07 cv
489.21 700.098 489.251 700.127 489.292 700.155 cv
489.161 700.065 mo
489.123 700.038 489.087 700.014 489.049 699.988 cv
489.086 700.013 489.124 700.039 489.161 700.065 cv
489.017 699.966 mo
488.989 699.947 488.957 699.925 488.929 699.905 cv
488.958 699.926 488.988 699.946 489.017 699.966 cv
488.891 699.88 mo
488.862 699.86 488.835 699.842 488.807 699.823 cv
488.835 699.842 488.863 699.861 488.891 699.88 cv
488.768 699.796 mo
488.738 699.776 488.709 699.757 488.679 699.736 cv
488.708 699.756 488.738 699.776 488.768 699.796 cv
488.647 699.715 mo
488.612 699.691 488.575 699.666 488.539 699.643 cv
488.576 699.667 488.611 699.691 488.647 699.715 cv
488.526 699.634 mo
488.484 699.606 488.442 699.578 488.401 699.551 cv
488.443 699.578 488.484 699.606 488.526 699.634 cv
488.385 699.54 mo
488.349 699.516 488.316 699.494 488.28 699.471 cv
488.315 699.494 488.35 699.517 488.385 699.54 cv
488.244 699.447 mo
488.215 699.428 488.186 699.409 488.157 699.39 cv
488.186 699.409 488.215 699.428 488.244 699.447 cv
488.118 699.364 mo
488.09 699.346 488.061 699.327 488.034 699.309 cv
488.061 699.327 488.09 699.346 488.118 699.364 cv
487.993 699.282 mo
487.965 699.264 487.934 699.244 487.906 699.226 cv
487.935 699.245 487.964 699.263 487.993 699.282 cv
487.87 699.203 mo
487.834 699.18 487.799 699.157 487.763 699.134 cv
487.799 699.157 487.834 699.18 487.87 699.203 cv
487.747 699.124 mo
487.705 699.097 487.665 699.071 487.624 699.044 cv
487.665 699.071 487.706 699.097 487.747 699.124 cv
487.593 699.025 mo
487.562 699.005 487.532 698.986 487.502 698.967 cv
487.532 698.986 487.563 699.005 487.593 699.025 cv
487.457 698.939 mo
487.429 698.921 487.405 698.905 487.377 698.888 cv
487.403 698.905 487.431 698.922 487.457 698.939 cv
487.333 698.86 mo
487.305 698.842 487.279 698.826 487.251 698.808 cv
487.278 698.825 487.306 698.843 487.333 698.86 cv
487.207 698.781 mo
487.179 698.764 487.151 698.746 487.122 698.728 cv
487.151 698.746 487.179 698.764 487.207 698.781 cv
487.083 698.703 mo
487.043 698.679 487.005 698.655 486.965 698.631 cv
487.004 698.655 487.044 698.679 487.083 698.703 cv
486.96 698.627 mo
486.917 698.601 486.878 698.576 486.835 698.55 cv
486.876 698.576 486.918 698.602 486.96 698.627 cv
486.796 698.527 mo
486.768 698.509 486.74 698.492 486.711 698.474 cv
486.74 698.492 486.768 698.509 486.796 698.527 cv
486.663 698.445 mo
486.637 698.429 486.612 698.414 486.586 698.398 cv
486.612 698.414 486.638 698.429 486.663 698.445 cv
486.536 698.367 mo
486.511 698.353 486.486 698.337 486.462 698.323 cv
486.486 698.337 486.511 698.353 486.536 698.367 cv
486.409 698.291 mo
486.384 698.276 486.358 698.26 486.334 698.246 cv
486.359 698.261 486.384 698.276 486.409 698.291 cv
486.284 698.216 mo
486.254 698.198 486.223 698.18 486.193 698.162 cv
486.223 698.18 486.253 698.198 486.284 698.216 cv
486.123 698.12 mo
486.095 698.103 486.068 698.087 486.039 698.07 cv
486.067 698.087 486.095 698.104 486.123 698.12 cv
485.981 698.036 mo
485.958 698.022 485.937 698.01 485.914 697.997 cv
485.937 698.01 485.958 698.023 485.981 698.036 cv
485.853 697.961 mo
485.831 697.948 485.811 697.936 485.789 697.923 cv
485.81 697.936 485.832 697.948 485.853 697.961 cv
485.726 697.886 mo
485.704 697.874 485.686 697.863 485.665 697.851 cv
485.685 697.863 485.705 697.874 485.726 697.886 cv
485.6 697.813 mo
485.58 697.802 485.561 697.79 485.54 697.779 cv
485.56 697.79 485.58 697.802 485.6 697.813 cv
485.473 697.74 mo
485.457 697.731 485.439 697.72 485.423 697.711 cv
485.44 697.721 485.456 697.73 485.473 697.74 cv
485.282 697.63 mo
485.266 697.621 485.249 697.612 485.233 697.603 cv
485.25 697.612 485.265 697.621 485.282 697.63 cv
485.159 697.56 mo
485.142 697.551 485.125 697.541 485.108 697.531 cv
485.125 697.541 485.142 697.551 485.159 697.56 cv
485.033 697.489 mo
485.017 697.48 484.999 697.47 484.983 697.461 cv
485 697.47 485.017 697.48 485.033 697.489 cv
484.908 697.419 mo
484.89 697.409 484.877 697.401 484.859 697.392 cv
484.875 697.4 484.892 697.41 484.908 697.419 cv
484.781 697.348 mo
484.769 697.341 484.753 697.333 484.742 697.326 cv
484.755 697.334 484.767 697.34 484.781 697.348 cv
484.432 697.155 mo
484.427 697.153 484.424 697.151 484.419 697.148 cv
484.424 697.151 484.427 697.153 484.432 697.155 cv
484.322 697.095 mo
484.313 697.09 484.304 697.086 484.296 697.081 cv
484.304 697.085 484.314 697.09 484.322 697.095 cv
484.201 697.03 mo
484.191 697.024 484.182 697.019 484.171 697.013 cv
484.182 697.019 484.191 697.024 484.201 697.03 cv
484.078 696.963 mo
484.069 696.958 484.059 696.952 484.05 696.948 cv
484.06 696.953 484.068 696.958 484.078 696.963 cv
483.951 696.895 mo
483.949 696.894 483.946 696.892 483.944 696.891 cv
483.947 696.892 483.948 696.893 483.951 696.895 cv
483.481 696.646 mo
483.478 696.644 483.476 696.643 483.473 696.642 cv
483.475 696.643 483.478 696.645 483.481 696.646 cv
483.361 696.583 mo
483.358 696.582 483.355 696.58 483.352 696.579 cv
483.355 696.58 483.358 696.582 483.361 696.583 cv
.788235 .788235 .854902 rgb
f
379.247 786.634 mo
375.465 786.634 372.17 784.906 369.297 780.859 cv
369.297 780.859 li
369.284 780.84 369.271 780.822 369.258 780.803 cv
368.742 780.073 368.273 779.342 367.848 778.61 cv
371.778 766.068 378.267 751.534 388.792 741.009 cv
406.272 723.529 422.453 694.673 459.276 689.678 cv
467.722 690.437 476.048 692.779 483.352 696.579 cv
483.355 696.58 483.358 696.582 483.361 696.583 cv
483.398 696.603 483.435 696.622 483.473 696.642 cv
483.476 696.643 483.478 696.644 483.481 696.646 cv
483.636 696.727 483.79 696.809 483.944 696.891 cv
483.946 696.892 483.949 696.894 483.951 696.895 cv
483.984 696.912 484.017 696.93 484.05 696.948 cv
484.059 696.952 484.069 696.958 484.078 696.963 cv
484.109 696.979 484.141 696.997 484.171 697.013 cv
484.182 697.019 484.191 697.024 484.201 697.03 cv
484.233 697.047 484.264 697.064 484.296 697.081 cv
484.304 697.086 484.313 697.09 484.322 697.095 cv
484.355 697.113 484.387 697.13 484.419 697.148 cv
484.424 697.151 484.427 697.153 484.432 697.155 cv
484.535 697.212 484.639 697.269 484.742 697.326 cv
484.753 697.333 484.769 697.341 484.781 697.348 cv
484.807 697.362 484.833 697.377 484.859 697.392 cv
484.877 697.401 484.89 697.409 484.908 697.419 cv
484.933 697.433 484.958 697.447 484.983 697.461 cv
484.999 697.47 485.017 697.48 485.033 697.489 cv
485.058 697.503 485.083 697.517 485.108 697.531 cv
485.125 697.541 485.142 697.551 485.159 697.56 cv
485.184 697.575 485.209 697.589 485.233 697.603 cv
485.249 697.612 485.266 697.621 485.282 697.63 cv
485.329 697.657 485.376 697.684 485.423 697.711 cv
485.439 697.72 485.457 697.731 485.473 697.74 cv
485.495 697.753 485.518 697.766 485.54 697.779 cv
485.561 697.79 485.58 697.802 485.6 697.813 cv
485.622 697.826 485.643 697.838 485.665 697.851 cv
485.686 697.863 485.704 697.874 485.726 697.886 cv
485.747 697.898 485.768 697.911 485.789 697.923 cv
485.811 697.936 485.831 697.948 485.853 697.961 cv
485.874 697.973 485.893 697.984 485.914 697.997 cv
485.937 698.01 485.958 698.022 485.981 698.036 cv
486 698.047 486.02 698.059 486.039 698.07 cv
486.068 698.087 486.095 698.103 486.123 698.12 cv
486.147 698.134 486.17 698.148 486.193 698.162 cv
486.223 698.18 486.254 698.198 486.284 698.216 cv
486.3 698.226 486.317 698.236 486.334 698.246 cv
486.358 698.26 486.384 698.276 486.409 698.291 cv
486.426 698.302 486.444 698.312 486.462 698.323 cv
486.486 698.337 486.511 698.353 486.536 698.367 cv
486.553 698.378 486.569 698.388 486.586 698.398 cv
486.612 698.414 486.637 698.429 486.663 698.445 cv
486.679 698.455 486.695 698.465 486.711 698.474 cv
486.74 698.492 486.768 698.509 486.796 698.527 cv
486.809 698.534 486.822 698.542 486.835 698.55 cv
486.878 698.576 486.917 698.601 486.96 698.627 cv
486.962 698.628 486.963 698.629 486.965 698.631 cv
487.005 698.655 487.043 698.679 487.083 698.703 cv
487.096 698.712 487.109 698.72 487.122 698.728 cv
487.151 698.746 487.179 698.764 487.207 698.781 cv
487.222 698.79 487.236 698.799 487.251 698.808 cv
487.279 698.826 487.305 698.842 487.333 698.86 cv
487.347 698.869 487.362 698.878 487.377 698.888 cv
487.405 698.905 487.429 698.921 487.457 698.939 cv
487.473 698.948 487.486 698.957 487.502 698.967 cv
487.532 698.986 487.562 699.005 487.593 699.025 cv
487.603 699.031 487.614 699.038 487.624 699.044 cv
487.665 699.071 487.705 699.097 487.747 699.124 cv
487.752 699.127 487.757 699.13 487.763 699.134 cv
487.799 699.157 487.834 699.18 487.87 699.203 cv
487.882 699.211 487.894 699.219 487.906 699.226 cv
487.934 699.244 487.965 699.264 487.993 699.282 cv
488.006 699.291 488.02 699.3 488.034 699.309 cv
488.061 699.327 488.09 699.346 488.118 699.364 cv
488.131 699.373 488.144 699.381 488.157 699.39 cv
488.186 699.409 488.215 699.428 488.244 699.447 cv
488.256 699.455 488.268 699.463 488.28 699.471 cv
488.316 699.494 488.349 699.516 488.385 699.54 cv
488.39 699.543 488.396 699.547 488.401 699.551 cv
488.442 699.578 488.484 699.606 488.526 699.634 cv
488.53 699.636 488.535 699.64 488.539 699.643 cv
488.575 699.666 488.612 699.691 488.647 699.715 cv
488.658 699.722 488.668 699.729 488.679 699.736 cv
488.709 699.757 488.738 699.776 488.768 699.796 cv
488.781 699.805 488.794 699.814 488.807 699.823 cv
488.835 699.842 488.862 699.86 488.891 699.88 cv
488.903 699.888 488.916 699.897 488.929 699.905 cv
488.957 699.925 488.989 699.947 489.017 699.966 cv
489.028 699.974 489.039 699.981 489.049 699.988 cv
489.087 700.014 489.123 700.038 489.161 700.065 cv
489.164 700.067 489.166 700.068 489.169 700.07 cv
489.21 700.098 489.251 700.127 489.292 700.155 cv
489.298 700.16 489.305 700.164 489.312 700.169 cv
489.344 700.192 489.38 700.216 489.412 700.239 cv
489.423 700.247 489.433 700.254 489.445 700.262 cv
489.474 700.282 489.501 700.301 489.531 700.322 cv
489.544 700.331 489.556 700.34 489.569 700.349 cv
489.598 700.369 489.624 700.387 489.652 700.407 cv
489.664 700.416 489.678 700.426 489.69 700.434 cv
489.718 700.454 489.748 700.475 489.776 700.496 cv
489.787 700.503 489.798 700.511 489.809 700.518 cv
489.848 700.546 489.884 700.572 489.923 700.6 cv
489.924 700.601 489.925 700.602 489.926 700.602 cv
489.967 700.631 490.007 700.661 490.047 700.689 cv
490.055 700.695 490.062 700.7 490.07 700.705 cv
490.102 700.729 490.133 700.751 490.165 700.774 cv
490.176 700.783 490.189 700.792 490.201 700.8 cv
490.227 700.82 490.255 700.84 490.282 700.859 cv
490.295 700.869 490.309 700.879 490.322 700.889 cv
490.349 700.909 490.376 700.928 490.402 700.947 cv
490.414 700.956 490.427 700.966 490.44 700.975 cv
490.469 700.996 490.496 701.017 490.525 701.038 cv
490.536 701.046 490.546 701.054 490.557 701.061 cv
490.635 701.119 490.712 701.177 490.79 701.235 cv
490.8 701.242 490.811 701.251 490.821 701.258 cv
490.85 701.28 490.876 701.3 490.905 701.321 cv
490.919 701.332 490.932 701.342 490.946 701.352 cv
490.971 701.371 490.996 701.39 491.021 701.409 cv
491.035 701.42 491.049 701.43 491.064 701.441 cv
491.089 701.46 491.113 701.479 491.138 701.498 cv
491.151 701.508 491.166 701.519 491.179 701.529 cv
491.207 701.55 491.231 701.569 491.258 701.59 cv
491.27 701.599 491.282 701.608 491.294 701.617 cv
491.332 701.646 491.37 701.676 491.408 701.705 cv
491.408 701.705 li
499.886 708.261 505.024 713.205 507.53 717.03 cv
497.122 715.377 489.806 715.621 487.721 715.359 cv
448.057 719.021 387.116 757.823 380.215 769.96 cv
377.674 774.43 378.649 779.951 379.811 786.622 cv
379.622 786.63 379.433 786.634 379.247 786.634 cv
.580392 .580392 .701961 rgb
f
442.297 744.572 mo
411.698 762.057 390.276 786.248 377.828 784.346 cv
368.388 782.891 359.362 761.948 375.072 743.629 cv
378.104 740.875 362.079 755.435 416.81 705.706 cv
435.053 686.087 470.535 688.325 490.072 703.433 cv
534.313 737.646 483.232 721.18 442.297 744.572 cv
cp
413.675 702.664 mo
410.668 705.396 426.623 690.897 371.869 740.657 cv
353.408 761.59 364.429 788.821 379.287 788.821 cv
394.131 788.821 414.087 765.724 444.464 748.364 cv
472.053 732.599 508.509 736.139 511.407 723.666 cv
515.556 705.814 448.804 665.054 413.675 702.664 cv
cp
0 0 0 rgb
f
487.922 717.534 mo
507.74 717.534 527.231 722.475 544.661 731.906 cv
580.091 751.076 638.654 783.916 645.795 795.256 cv
656.117 811.65 691.596 856.708 699.037 875.928 cv
707.453 897.664 693.942 909.142 669.475 902.731 cv
645.864 896.543 606.327 876.014 603.291 832.902 cv
602.949 828.056 577.789 845.653 538.927 845.653 cv
538.927 845.653 492.78 872.371 433.881 866.906 cv
433.881 866.906 406.706 920.137 369.297 920.137 cv
331.888 920.137 311.531 890.889 331.264 871.156 cv
350.999 851.422 361.017 851.726 376.804 825.009 cv
392.592 798.292 375.895 781.977 382.114 771.04 cv
388.332 760.102 448.454 721.177 487.922 717.534 cv
.737255 .737255 .819608 rgb
f
681.967 902.317 mo
678.594 902.317 674.835 901.819 670.779 900.81 cv
661.039 872.65 626.511 828.518 618.375 818.345 cv
618.367 818.231 618.221 818.053 617.953 817.818 cv
617.111 816.769 616.649 816.204 616.649 816.204 cv
615.736 816.247 li
605.247 809.522 567.061 789.98 567.061 789.98 cv
635.351 804.695 li
635.351 804.695 688.302 872.769 688.411 901.598 cv
686.471 902.076 684.313 902.317 681.967 902.317 cv
.580392 .580392 .701961 rgb
f
670.029 900.618 mo
604.698 883.5 607.083 832.331 604.127 830.416 cv
602.162 829.141 599.317 830.182 592.443 832.694 cv
556.861 845.697 542.537 842.813 538.341 843.47 cv
537.833 843.764 li
498.201 866.735 451.336 865.839 436.995 864.942 cv
434.189 864.767 432.628 864.591 432.61 864.595 cv
431.937 865.912 li
393.706 940.687 336.918 919.136 327.411 896.187 cv
320.751 880.107 334.784 869.599 350.723 857.269 cv
406.748 813.939 377.281 783.955 384.012 772.119 cv
389.592 762.304 448.517 723.421 488.024 719.717 cv
507.37 719.734 526.592 724.612 543.622 733.827 cv
649.637 791.188 640.232 791.924 660.191 819.67 cv
674.396 839.416 692.073 863.99 697.001 876.716 cv
705.125 897.698 691.605 906.271 670.029 900.618 cv
663.736 817.12 mo
643.485 788.968 652.694 787.876 545.7 729.986 cv
516.877 714.39 491.881 715.881 487.721 715.359 cv
448.057 719.021 387.116 757.823 380.215 769.96 cv
371.713 784.914 402.578 811.642 348.052 853.814 cv
331.689 866.471 315.465 878.759 323.376 897.859 cv
333.698 922.774 392.645 947.756 435.134 869.209 cv
490.021 873.818 534.213 850.727 539.496 847.836 cv
571.192 847.696 594.344 835.898 601.216 834.357 cv
606.276 891.623 682.016 919.628 699.378 900.179 cv
714.269 883.501 688.357 851.346 663.736 817.12 cv
0 0 0 rgb
f
558.358 818.937 mo
558.358 818.937 551.678 863.87 592.361 904.553 cv
633.043 945.235 663.362 941.678 672.471 918.605 cv
681.579 895.529 616.649 816.204 616.649 816.204 cv
558.358 818.937 li
.737255 .737255 .819608 rgb
f
592.605 904.796 mo
592.6 904.791 592.592 904.783 592.587 904.778 cv
592.595 904.786 592.598 904.789 592.605 904.796 cv
592.484 904.675 mo
592.443 904.635 592.402 904.593 592.361 904.553 cv
576.286 888.477 561.648 867.218 549.82 847.38 cv
553.362 847.085 556.77 846.658 560.031 846.138 cv
563.397 862.5 571.873 884.065 592.361 904.553 cv
592.401 904.593 592.444 904.635 592.484 904.675 cv
.788235 .788235 .854902 rgb
f
547.373 843.229 mo
530.684 814.592 520.198 789.98 520.198 789.98 cv
576.343 812.029 li
580.422 813.63 584.397 815.469 588.251 817.535 cv
558.358 818.937 li
558.358 818.937 556.994 828.106 559.251 841.913 cv
554.382 842.727 550.472 843.077 547.373 843.229 cv
.580392 .580392 .701961 rgb
f
549.82 847.38 mo
548.991 845.989 548.174 844.604 547.373 843.229 cv
550.472 843.077 554.382 842.727 559.251 841.913 cv
559.474 843.276 559.732 844.688 560.031 846.138 cv
556.77 846.658 553.362 847.085 549.82 847.38 cv
0 0 0 rgb
f
645.001 935.549 mo
631.148 934.511 613.213 925.334 592.605 904.796 cv
592.598 904.789 592.595 904.786 592.587 904.778 cv
592.552 904.743 592.519 904.71 592.484 904.675 cv
592.444 904.635 592.401 904.593 592.361 904.553 cv
571.873 884.065 563.397 862.5 560.031 846.138 cv
559.732 844.688 559.474 843.276 559.251 841.913 cv
556.994 828.106 558.358 818.937 558.358 818.937 cv
588.251 817.535 li
593.051 820.109 597.66 823.035 602.04 826.291 cv
606.464 829.579 li
645.001 935.549 li
.580392 .580392 .701961 rgb
f
618.041 814.457 mo
568.21 790.774 566.185 786.515 564.324 790.26 cv
563.788 791.341 564.23 792.651 565.31 793.187 cv
615.257 817.951 li
633.285 840.04 677.486 899.951 670.439 917.802 cv
658.216 948.771 619.844 928.947 593.905 903.008 cv
593.053 902.155 591.67 902.155 590.817 903.008 cv
585.18 908.643 655.978 966.331 674.501 919.405 cv
683.081 897.669 632.508 832.175 618.041 814.457 cv
cp
0 0 0 rgb
f
516.754 838.367 mo
516.754 838.367 508.567 878.442 545 908.195 cv
569.824 928.469 595.495 923.508 609.332 915.146 cv
615.351 911.51 617.318 898.782 613.704 892.75 cv
591.862 840.634 li
521.988 791.776 li
516.754 838.367 li
cp
.737255 .737255 .819608 rgb
f
617.644 893.056 mo
617.221 891.829 592.993 838.068 592.944 837.959 cv
527.401 792.028 576.279 826.258 523.238 789.44 cv
522.25 788.75 520.889 788.992 520.198 789.98 cv
517.792 793.428 521.553 792.45 589.355 840.916 cv
611.4 889.664 622.11 904.586 608.555 912.725 cv
560.851 939.278 510.423 885.806 518.903 838.751 cv
519.034 838.025 518.555 837.329 517.829 837.193 cv
514.29 836.532 509.558 876.269 539.044 904.798 cv
571.389 936.069 628.189 925.489 617.644 893.056 cv
cp
0 0 0 rgb
f
503.051 906.357 mo
531.078 945.631 549.69 948.066 548.976 947.809 cv
560.836 951.397 571.374 951.941 580.562 949.981 cv
594.928 952.722 542.057 977.266 503.051 906.357 cv
cp
f
375.574 847.241 mo
375.574 847.241 335.436 877.75 335.436 884.63 cv
335.436 891.511 356.365 898.678 375.574 879.47 cv
394.783 860.261 392.202 844.253 375.574 847.241 cv
cp
.788235 .788235 .854902 rgb
f
546.732 857.1 mo
546.732 857.1 568.691 900.53 592.361 904.553 cv
616.03 908.574 592.57 847.048 582.6 843.764 cv
572.63 840.479 546.732 843.564 546.732 857.1 cv
cp
f
509.403 738.02 mo
509.403 738.02 438.625 743.384 438.625 763.262 cv
438.625 783.14 588.183 778.13 573.314 763.262 cv
558.446 748.394 509.403 738.02 509.403 738.02 cv
cp
f
669.364 1604.68 mo
640.372 1559.54 619.835 1555.82 620.611 1556.15 cv
607.605 1551.51 595.94 1550.34 585.648 1552.01 cv
570.503 1548.35 629.713 1523.42 669.364 1604.68 cv
cp
0 0 0 rgb
f
449.366 1592.37 mo
449.366 1592.37 441.799 1559.32 406.84 1566.27 cv
378.939 1571.82 368.834 1611.46 363.946 1634.73 cv
357.58 1665.05 348.753 1707.97 371.729 1733.86 cv
393.744 1758.66 422.381 1739.5 434.869 1716.08 cv
458.065 1672.59 449.366 1592.37 449.366 1592.37 cv
.737255 .737255 .819608 rgb
f
399.002 1742.86 mo
388.415 1708.57 382.28 1665.07 392.59 1626.98 cv
400.391 1598.14 413.14 1580.19 425.568 1569.08 cv
437.37 1572.64 443.046 1582.44 445.463 1588.32 cv
439.947 1590.82 435.956 1594.03 433.958 1598.05 cv
433.957 1598.05 433.956 1598.06 433.954 1598.06 cv
433.947 1598.08 433.939 1598.09 433.931 1598.11 cv
433.921 1598.13 433.911 1598.15 433.902 1598.17 cv
433.902 1598.17 li
418.438 1630.06 412.447 1696.75 412.447 1696.75 cv
412.447 1696.75 412.286 1700.09 412.286 1705.19 cv
412.287 1713.2 412.686 1725.56 414.727 1736.27 cv
409.592 1740.05 404.256 1742.22 399.002 1742.86 cv
.580392 .580392 .701961 rgb
f
373.544 1732.25 mo
351.231 1707.11 360.312 1663.85 366.323 1635.23 cv
372.929 1603.77 384.085 1567.74 416.061 1567.74 cv
440.183 1567.74 446.415 1590.54 446.968 1592.78 cv
460.577 1725.85 402.339 1764.69 373.544 1732.25 cv
451.733 1591.83 mo
451.652 1591.47 443.216 1556.58 406.366 1563.89 cv
378.282 1569.48 367.349 1606.71 361.57 1634.24 cv
334.571 1762.81 409.086 1769.58 437.011 1717.22 cv
454.465 1684.5 455.504 1627.85 451.733 1591.83 cv
0 0 0 rgb
f
412.447 1696.75 mo
412.447 1696.75 410.223 1742.66 422.304 1754.74 cv
434.385 1766.82 463.182 1793.5 482.417 1812.73 cv
501.652 1831.97 554.715 1827.23 563.414 1802.1 cv
563.414 1802.1 563.414 1802.1 592.409 1796.3 cv
621.405 1790.5 629.136 1784.7 637.834 1765.37 cv
646.533 1746.04 651.365 1610.73 620.437 1598.17 cv
589.509 1585.6 449.366 1566.27 433.902 1598.17 cv
418.438 1630.06 412.447 1696.75 412.447 1696.75 cv
.737255 .737255 .819608 rgb
f
511.681 1824.27 mo
500.018 1823.26 489.147 1819.46 482.417 1812.73 cv
482.379 1812.69 482.342 1812.66 482.304 1812.62 cv
482.342 1812.66 482.379 1812.69 482.417 1812.73 cv
489.146 1819.46 500.019 1823.26 511.681 1824.27 cv
.788235 .788235 .854902 rgb
f
433.902 1598.17 mo
433.911 1598.15 433.921 1598.13 433.931 1598.11 cv
433.922 1598.13 433.911 1598.15 433.902 1598.17 cv
433.954 1598.06 mo
433.956 1598.06 433.957 1598.05 433.958 1598.05 cv
433.956 1598.06 433.956 1598.06 433.954 1598.06 cv
.458824 .458824 .6 rgb
f
518.15 1824.55 mo
515.981 1824.55 513.818 1824.46 511.681 1824.27 cv
500.019 1823.26 489.146 1819.46 482.417 1812.73 cv
482.379 1812.69 482.342 1812.66 482.304 1812.62 cv
464.011 1794.33 437.148 1769.38 424.19 1756.61 cv
423.524 1755.95 422.894 1755.33 422.304 1754.74 cv
419.367 1751.8 417.276 1746.87 415.792 1741.08 cv
415.395 1739.53 415.041 1737.92 414.727 1736.27 cv
412.686 1725.56 412.287 1713.2 412.286 1705.19 cv
412.286 1700.09 412.447 1696.75 412.447 1696.75 cv
412.447 1696.75 418.438 1630.06 433.902 1598.17 cv
433.902 1598.17 li
433.911 1598.15 433.922 1598.13 433.931 1598.11 cv
433.939 1598.09 433.947 1598.08 433.954 1598.06 cv
433.956 1598.06 433.956 1598.06 433.958 1598.05 cv
434.234 1597.5 434.549 1596.96 434.9 1596.43 cv
426.224 1628.69 414.504 1693.26 439.128 1733.69 cv
472.716 1788.85 480.289 1819.64 529.719 1823.67 cv
529.724 1823.67 li
525.925 1824.25 522.028 1824.55 518.15 1824.55 cv
.580392 .580392 .701961 rgb
f
640.61 1731.28 mo
640.61 1710.84 611.748 1688.51 604.546 1681.3 cv
599.586 1676.34 569.78 1669.05 550.956 1665.35 cv
547.808 1664.73 548.732 1659.97 551.892 1660.59 cv
556.833 1661.55 600.391 1670.28 607.979 1677.87 cv
615.823 1685.71 645.466 1708.21 645.466 1731.28 cv
645.466 1734.49 640.61 1734.5 640.61 1731.28 cv
cp
0 0 0 rgb
f
640.331 1655.13 mo
634.25 1646.95 616.834 1625.04 609.375 1621.93 cv
591.246 1614.38 582.046 1616.82 583.028 1612.04 cv
583.298 1610.72 584.582 1609.87 585.895 1610.15 cv
611.258 1615.36 617.838 1616.73 644.228 1652.24 cv
645.027 1653.31 644.804 1654.83 643.728 1655.63 cv
642.651 1656.43 641.133 1656.21 640.331 1655.13 cv
cp
f
569.242 1769.16 mo
507.182 1757.33 484.852 1713.45 492.8 1711.24 cv
494.092 1710.88 495.426 1711.63 495.788 1712.92 cv
495.9 1713.32 507.673 1752.48 570.151 1764.39 cv
571.468 1764.64 572.332 1765.91 572.081 1767.23 cv
571.836 1768.52 570.591 1769.41 569.242 1769.16 cv
f
613.08 1790.82 mo
617.888 1789 621.692 1786.9 624.886 1784.29 cv
621.337 1788.95 li
613.08 1790.82 li
.788235 .788235 .854902 rgb
f
563.414 1802.1 mo
563.414 1802.1 521.661 1790.35 509.905 1782.27 cv
506.698 1780.07 499.628 1770.58 499.628 1770.58 cv
495.379 1757.99 li
503.269 1743.42 li
508.135 1739.88 li
508.888 1740.58 509.665 1741.28 510.471 1741.98 cv
510.702 1744.74 510.763 1749.32 509.947 1756.17 cv
508.43 1768.92 548.19 1788.95 556.688 1791.07 cv
557.299 1791.23 558.2 1791.3 559.348 1791.3 cv
573.71 1791.3 626.783 1779.93 634.703 1771.41 cv
624.886 1784.29 li
621.692 1786.9 617.888 1789 613.08 1790.82 cv
563.414 1802.1 li
563.414 1802.1 li
563.414 1802.1 li
634.703 1771.41 mo
635.331 1770.58 li
635.172 1770.86 634.962 1771.13 634.703 1771.41 cv
.580392 .580392 .701961 rgb
f
510.471 1741.98 mo
509.665 1741.28 508.888 1740.58 508.135 1739.88 cv
509.947 1738.57 li
509.947 1738.57 510.272 1739.6 510.471 1741.98 cv
0 0 0 rgb
f
562.974 1804.49 mo
450.861 1783.82 507.259 1727.34 511.587 1737.96 cv
513.448 1742.52 501.893 1741.36 498.787 1756.74 cv
493.634 1782.25 538.812 1795.06 563.854 1799.71 cv
565.173 1799.96 566.044 1801.22 565.801 1802.54 cv
565.558 1803.86 564.292 1804.73 562.974 1804.49 cv
cp
f
621.352 1595.92 mo
590.59 1583.42 456.529 1554.64 431.718 1597.11 cv
414.67 1626.29 396.991 1732.86 420.587 1756.46 cv
432.624 1768.49 461.561 1795.31 480.701 1814.45 cv
500.85 1834.6 554.515 1830.03 565.205 1804.22 cv
601.274 1794.65 624.68 1800.52 640.049 1766.37 cv
648.59 1747.39 654.645 1609.44 621.352 1595.92 cv
cp
635.62 1764.38 mo
621.077 1796.69 598.386 1790.15 561.574 1799.99 cv
561.119 1801.3 li
553.025 1824.69 502.077 1828.96 484.134 1811.01 cv
465.034 1791.91 435.98 1764.98 424.021 1753.02 cv
403.106 1732.11 420.391 1628.78 437.824 1600.96 cv
461.688 1562.88 587.92 1587.58 619.523 1600.42 cv
624.021 1602.24 627.997 1607.4 631.341 1615.75 cv
647.043 1654.95 642.738 1748.56 635.62 1764.38 cv
cp
f
471.004 1596.43 mo
471.004 1596.43 438.843 1641.7 453.517 1673.72 cv
468.191 1705.74 492.436 1695.92 519.042 1650.71 cv
545.647 1605.51 518.242 1581.66 471.004 1596.43 cv
cp
.788235 .788235 .854902 rgb
f
1078.17 484.131 mo
1078.17 484.131 1082.62 452.874 1096.05 431.238 cv
1096.05 431.238 1111.14 401.592 1124.24 370.848 cv
1137.33 340.103 1136.76 299.679 1106.59 299.679 cv
1076.41 299.679 1081.54 313.344 1076.41 342.95 cv
1071.29 372.556 1038.73 407.856 1038.73 407.856 cv
1038.73 407.856 1013.22 366.292 1009.8 342.95 cv
1006.38 319.606 1015.21 296.548 1004.11 285.446 cv
993.005 274.344 961.405 267.226 948.88 292.278 cv
936.355 317.329 959.103 422.983 988.379 452.26 cv
1017.66 481.536 1048.52 493.258 1048.52 493.258 cv
1078.17 484.131 li
0 0 0 rgb
f
1048.67 489.609 mo
1043.05 487.256 1016.17 475.187 990.813 449.826 cv
978.102 437.115 964.878 406.489 956.304 369.899 cv
948.213 335.374 946.466 304.798 951.957 293.817 cv
958.186 281.359 968.958 278.744 976.9 278.744 cv
987.646 278.744 997.274 283.478 1001.67 287.878 cv
1007.36 293.567 1006.75 304.106 1006.04 316.308 cv
1005.56 324.608 1005.02 334.014 1006.4 343.447 cv
1009.88 367.217 1034.74 407.933 1035.8 409.656 cv
1038.18 413.53 li
1041.26 410.188 li
1042.62 408.715 1074.57 373.794 1079.8 343.536 cv
1080.76 338.015 1081.36 333.043 1081.9 328.658 cv
1084.28 309.04 1085 303.12 1106.59 303.12 cv
1114.18 303.12 1119.94 306.011 1123.71 311.715 cv
1131.58 323.621 1130.49 347.383 1121.07 369.499 cv
1108.61 398.766 1094.14 427.404 1093.05 429.551 cv
1081.36 448.465 1076.39 473.9 1075.11 481.472 cv
1048.67 489.609 li
.737255 .737255 .819608 rgb
f
973.345 417.039 mo
964.322 422.722 933.264 461.156 929.714 474.469 cv
925.159 491.549 940.34 512.18 951.157 530.331 cv
961.974 548.484 981.333 554.747 988.735 571.827 cv
996.136 588.908 1050.77 597.182 1078.17 569.778 cv
1105.57 542.373 1101.46 509.769 1112.85 498.382 cv
1124.24 486.995 1124.49 451.216 1110.8 431.11 cv
1084.7 392.773 982.575 411.225 973.345 417.039 cv
f
1112.91 498.327 mo
1124.24 486.881 1124.46 451.184 1110.8 431.11 cv
1127.97 448.281 1124.25 486.872 1112.91 498.327 cv
.788235 .788235 .854902 rgb
f
1084.18 563.093 mo
1083.53 560.081 1082.28 557.03 1080.49 554.073 cv
1097.77 518.181 1104.83 466.098 1101.82 452.26 cv
1099.28 440.52 1092.81 437.178 1086.26 437.178 cv
1077.6 437.178 1068.82 443.028 1068.82 443.028 cv
1068.82 427.44 1067.97 422.138 1062.67 416.836 cv
1067.06 416.331 1071.02 416.105 1074.62 416.105 cv
1099.6 416.105 1106.7 427.01 1110.8 431.11 cv
1110.8 431.11 li
1124.46 451.184 1124.24 486.881 1112.91 498.327 cv
1112.89 498.345 1112.87 498.364 1112.85 498.382 cv
1112.85 498.382 li
1111.46 499.772 1110.3 501.478 1109.29 503.452 cv
1102.66 516.353 1102.25 540.703 1084.18 563.093 cv
.580392 .580392 .701961 rgb
f
950.59 230.549 mo
914.178 269.651 915.338 290.401 915.359 290.262 cv
914.057 304.295 915.912 315.952 920.047 325.433 cv
920.247 341.016 880.667 289.938 950.59 230.549 cv
cp
0 0 0 rgb
f
1176.01 321.707 mo
1187.67 372.257 1150.34 376.032 1159.13 370.961 cv
1176.86 360.734 1178.26 342.133 1176.01 321.707 cv
cp
f
990.262 532.18 mo
974.376 533.826 964.052 546.684 968.154 560.521 cv
969.246 564.209 971.178 568.299 974.242 572.805 cv
992.621 599.844 1070.92 593.439 1081.55 578.09 cv
1092.17 562.74 1074.94 536.615 1044.59 532.234 cv
1025.16 529.43 1003.41 530.818 990.262 532.18 cv
.737255 .737255 .819608 rgb
f
989.094 584.231 mo
982.717 581.396 977.524 577.634 974.242 572.805 cv
974.22 572.774 974.199 572.742 974.178 572.711 cv
974.199 572.742 974.22 572.774 974.242 572.805 cv
977.524 577.634 982.717 581.396 989.094 584.231 cv
974.161 572.686 mo
974.144 572.661 974.127 572.637 974.111 572.612 cv
974.127 572.637 974.144 572.661 974.161 572.686 cv
974.096 572.589 mo
974.077 572.562 974.058 572.534 974.04 572.507 cv
974.058 572.534 974.077 572.562 974.096 572.589 cv
974.012 572.465 mo
974.001 572.449 973.99 572.432 973.979 572.416 cv
973.99 572.432 974.001 572.449 974.012 572.465 cv
973.921 572.329 mo
973.915 572.319 973.909 572.31 973.902 572.301 cv
973.908 572.31 973.915 572.319 973.921 572.329 cv
973.861 572.238 mo
973.857 572.233 973.853 572.227 973.85 572.222 cv
973.853 572.227 973.857 572.233 973.861 572.238 cv
.788235 .788235 .854902 rgb
f
1029.88 591.346 mo
1015.26 591.346 1000.34 589.229 989.094 584.231 cv
982.717 581.396 977.524 577.634 974.242 572.805 cv
974.22 572.774 974.199 572.742 974.178 572.711 cv
974.172 572.703 974.167 572.695 974.161 572.686 cv
974.144 572.661 974.127 572.637 974.111 572.612 cv
974.106 572.604 974.101 572.597 974.096 572.589 cv
974.077 572.562 974.058 572.534 974.04 572.507 cv
974.031 572.493 974.021 572.479 974.012 572.465 cv
974.001 572.449 973.99 572.432 973.979 572.416 cv
973.96 572.387 973.94 572.358 973.921 572.329 cv
973.915 572.319 973.908 572.31 973.902 572.301 cv
973.888 572.28 973.875 572.259 973.861 572.238 cv
973.857 572.233 973.853 572.227 973.85 572.222 cv
971.952 569.361 970.512 566.67 969.454 564.146 cv
972.901 556.914 980.627 551.557 990.504 550.533 cv
998.054 549.75 1008.44 548.959 1019.6 548.959 cv
1027.87 548.959 1036.56 549.393 1044.83 550.587 cv
1063.71 553.312 1077.52 564.456 1082.69 576.184 cv
1082.36 576.834 1081.97 577.471 1081.55 578.09 cv
1081.55 578.09 li
1081.55 578.09 li
1076.16 585.865 1053.41 591.346 1029.88 591.346 cv
.580392 .580392 .701961 rgb
f
975.359 572.395 mo
950.186 535.357 1000.18 528.521 1044.21 534.873 cv
1064.16 537.752 1076 549.684 1080.07 559.027 cv
1097.48 598.978 991.386 595.974 975.359 572.395 cv
cp
1044.97 529.596 mo
1025.75 526.819 1004.46 528.029 989.988 529.528 cv
951.039 533.567 951.663 594.012 1029.85 594.012 cv
1120.35 594.012 1088.25 535.841 1044.97 529.596 cv
cp
0 0 0 rgb
f
1101.74 419.009 mo
1101.64 418.978 li
1100.71 418.723 1078.88 412.81 1059.05 413.253 cv
1034.37 399.723 989.871 390.938 967.251 415.234 cv
956.247 426.239 931.041 459.998 927.349 473.838 cv
920.764 498.536 960.507 549.959 966.518 549.959 cv
968.789 549.959 969.822 547.125 968.113 545.656 cv
953.475 533.091 927.152 493.572 932.079 475.1 cv
935.419 462.571 971.518 418.385 971.518 418.385 cv
994.01 395.893 1057.99 412.712 1064.54 424.488 cv
1067.37 429.583 1069.22 434.861 1064.35 445.939 cv
1053.7 470.162 984.643 470.088 984.643 470.088 cv
1005.28 473.466 1017.41 506.148 1017.5 506.447 cv
1017.89 507.742 1019.25 508.481 1020.55 508.089 cv
1021.84 507.702 1022.58 506.339 1022.19 505.045 cv
1021.87 503.959 1015.46 483.081 1000.49 473.099 cv
1007.88 472.888 1017.68 472.283 1027.5 470.713 cv
1039.69 493.729 1072.89 495.319 1089.57 470.824 cv
1090.33 469.706 1090.04 468.187 1088.93 467.428 cv
1087.81 466.667 1086.29 466.955 1085.53 468.07 cv
1070.96 489.382 1043.32 487.855 1032.6 469.806 cv
1048.54 466.667 1066.33 460.688 1069.91 449.386 cv
1073.56 437.869 1074.08 426.571 1065.89 418.228 cv
1081.6 418.929 1097.23 422.879 1099.93 423.588 cv
1122.56 439.854 1123 484.77 1111.12 496.652 cv
1100.18 507.592 1102.7 534.564 1083.88 559.503 cv
1081.93 562.087 1085.83 565.037 1087.79 562.453 cv
1106.99 537.005 1105.2 509.498 1114.58 500.111 cv
1132.59 482.099 1121.35 425.386 1101.74 419.009 cv
cp
f
963.126 344.398 mo
998.696 355.823 1006.06 338.301 1009.45 344.022 cv
1012.6 349.353 989.968 356.243 963.126 344.398 cv
cp
f
1112.47 363.36 mo
1097.46 369.08 1083.65 365.496 1074.26 358.271 cv
1071.57 356.196 1074.97 352.153 1077.47 354.563 cv
1093.52 370.076 1115.44 362.232 1112.47 363.36 cv
cp
f
964.655 292.74 mo
964.655 292.74 952.181 317.321 963.126 328.266 cv
974.071 339.211 989.106 340.863 991.973 327.359 cv
994.84 313.855 996.971 275.64 964.655 292.74 cv
cp
.788235 .788235 .854902 rgb
f
1093.01 312.699 mo
1093.01 312.699 1084.24 343.345 1087.78 346.879 cv
1091.31 350.414 1105.07 358.063 1112.74 342.84 cv
1120.41 327.616 1114.92 302.368 1093.01 312.699 cv
cp
f
986.435 416.104 mo
989.679 416.104 1053.9 410.185 1053.9 425.094 cv
1053.9 440.002 997.402 467.957 988.379 452.26 cv
979.358 436.562 986.435 416.104 986.435 416.104 cv
cp
f
1580.96 385.678 mo
1580.96 385.678 1629.65 385.239 1635.96 424.941 cv
1642.27 464.642 1609.25 542.578 1548.51 522.298 cv
1478.2 498.828 1550.31 385.678 1580.96 385.678 cv
.737255 .737255 .819608 rgb
f
1550.25 522.856 mo
1549.67 522.679 1549.09 522.493 1548.51 522.298 cv
1544.71 521.031 1541.33 519.503 1538.34 517.746 cv
1538.34 517.746 li
1541.33 519.503 1544.71 521.031 1548.51 522.298 cv
1549.09 522.493 1549.67 522.678 1550.25 522.856 cv
.788235 .788235 .854902 rgb
f
1567.85 525.607 mo
1562.28 525.607 1556.41 524.739 1550.25 522.856 cv
1549.67 522.678 1549.09 522.493 1548.51 522.298 cv
1544.71 521.031 1541.33 519.503 1538.34 517.746 cv
1556.86 507.923 1564.13 488.307 1564.13 488.307 cv
1583.43 488.307 1605.15 442.46 1600.32 418.33 cv
1598.6 409.729 1595.04 398.267 1589.57 386.347 cv
1594.32 386.99 1600.53 388.251 1606.88 390.721 cv
1613.7 402.938 1619.67 418.581 1619.67 435.9 cv
1619.67 466.852 1606.15 503.176 1584.02 523.018 cv
1578.96 524.692 1573.56 525.607 1567.85 525.607 cv
.580392 .580392 .701961 rgb
f
1549.3 519.927 mo
1482.18 497.523 1552.79 388.178 1581.01 388.178 cv
1678.19 388.178 1627.18 545.922 1549.3 519.927 cv
cp
1606.97 388.08 mo
1581.64 378.596 1566.68 380.663 1543.48 411.421 cv
1513.23 451.517 1499.98 508.734 1547.71 524.667 cv
1623.89 550.104 1676.14 413.979 1606.97 388.08 cv
cp
0 0 0 rgb
f
1564.13 488.307 mo
1564.13 488.307 1541.61 549.084 1474.85 510.25 cv
1412.91 488.307 li
1443.48 341.918 li
1443.48 341.918 1505.41 315.374 1540.8 331.461 cv
1576.19 347.547 1595.5 394.199 1600.32 418.33 cv
1605.15 442.46 1583.43 488.307 1564.13 488.307 cv
.737255 .737255 .819608 rgb
f
1478.33 462.033 mo
1478.33 462.033 1493.35 512.544 1469.22 523.216 cv
1445.09 533.886 1403.77 541.33 1372.69 510.25 cv
1341.62 479.17 1389.85 459.887 1389.85 459.887 cv
1389.85 459.887 1460.64 452.379 1478.33 462.033 cv
f
1478.46 462.495 mo
1478.46 462.494 1478.46 462.492 1478.46 462.491 cv
1478.46 462.492 1478.46 462.494 1478.46 462.495 cv
1478.46 462.482 mo
1478.46 462.481 1478.46 462.48 1478.46 462.479 cv
1478.46 462.48 1478.46 462.481 1478.46 462.482 cv
1478.45 462.439 mo
1478.45 462.431 1478.44 462.424 1478.44 462.416 cv
1478.44 462.424 1478.45 462.431 1478.45 462.439 cv
1478.44 462.406 mo
1478.44 462.398 1478.44 462.391 1478.43 462.383 cv
1478.44 462.391 1478.44 462.399 1478.44 462.406 cv
1478.42 462.33 mo
1478.42 462.326 1478.42 462.321 1478.41 462.317 cv
1478.42 462.321 1478.42 462.326 1478.42 462.33 cv
1478.41 462.288 mo
1478.41 462.287 1478.41 462.285 1478.41 462.284 cv
1478.41 462.285 1478.41 462.287 1478.41 462.288 cv
1478.39 462.228 mo
1478.39 462.227 1478.39 462.226 1478.39 462.225 cv
1478.39 462.226 1478.39 462.227 1478.39 462.228 cv
1478.38 462.211 mo
1478.38 462.209 1478.38 462.207 1478.38 462.205 cv
1478.38 462.207 1478.38 462.209 1478.38 462.211 cv
1478.37 462.172 mo
1478.37 462.168 1478.37 462.164 1478.37 462.161 cv
1478.37 462.164 1478.37 462.168 1478.37 462.172 cv
1478.37 462.16 mo
1478.36 462.144 1478.36 462.13 1478.36 462.117 cv
1478.36 462.13 1478.36 462.144 1478.37 462.16 cv
1478.35 462.104 mo
1478.35 462.101 1478.35 462.098 1478.35 462.095 cv
1478.35 462.098 1478.35 462.101 1478.35 462.104 cv
1478.34 462.064 mo
1478.34 462.062 1478.34 462.061 1478.34 462.059 cv
1478.34 462.061 1478.34 462.062 1478.34 462.064 cv
1478.34 462.056 mo
1478.34 462.048 1478.33 462.042 1478.33 462.038 cv
1478.33 462.042 1478.34 462.048 1478.34 462.056 cv
1478.33 462.037 mo
1478.33 462.037 1478.33 462.036 1478.33 462.036 cv
1478.33 462.036 1478.33 462.037 1478.33 462.037 cv
1478.33 462.035 mo
1478.33 462.034 1478.33 462.034 1478.33 462.033 cv
1478.33 462.034 1478.33 462.034 1478.33 462.035 cv
1478.33 462.033 mo
1478.33 462.033 1478.33 462.033 1478.33 462.033 cv
1478.33 462.033 1478.33 462.033 1478.33 462.033 cv
1478.33 462.033 mo
1478.27 461.997 1478.2 461.962 1478.13 461.927 cv
1478.2 461.962 1478.27 461.997 1478.33 462.033 cv
1478.07 461.895 mo
1478.05 461.885 1478.03 461.873 1478.01 461.863 cv
1478.03 461.874 1478.05 461.884 1478.07 461.895 cv
.580392 .580392 .701961 rgb
f
1454.45 520.659 mo
1420.57 520.659 1372.03 507.333 1362.49 492.729 cv
1362.49 492.724 li
1361.76 488.001 1362.81 483.721 1364.84 479.926 cv
1373.56 488.576 1384.91 494.916 1398.27 494.917 cv
1399.38 494.918 1400.51 494.874 1401.65 494.783 cv
1432.9 492.304 1477.95 486.302 1474.81 460.543 cv
1476 460.94 1477.08 461.38 1478.01 461.863 cv
1478.03 461.873 1478.05 461.885 1478.07 461.895 cv
1478.09 461.906 1478.11 461.916 1478.13 461.927 cv
1478.2 461.962 1478.27 461.997 1478.33 462.033 cv
1478.33 462.033 li
1478.33 462.033 li
1478.33 462.033 1478.33 462.033 1478.33 462.033 cv
1478.33 462.033 1478.33 462.033 1478.33 462.033 cv
1478.33 462.034 1478.33 462.034 1478.33 462.035 cv
1478.33 462.035 1478.33 462.036 1478.33 462.036 cv
1478.33 462.036 1478.33 462.037 1478.33 462.037 cv
1478.33 462.037 1478.33 462.038 1478.33 462.038 cv
1478.33 462.042 1478.34 462.048 1478.34 462.056 cv
1478.34 462.057 1478.34 462.058 1478.34 462.059 cv
1478.34 462.061 1478.34 462.062 1478.34 462.064 cv
1478.34 462.073 1478.35 462.083 1478.35 462.095 cv
1478.35 462.098 1478.35 462.101 1478.35 462.104 cv
1478.35 462.108 1478.36 462.112 1478.36 462.117 cv
1478.36 462.13 1478.36 462.144 1478.37 462.16 cv
1478.37 462.16 1478.37 462.161 1478.37 462.161 cv
1478.37 462.164 1478.37 462.168 1478.37 462.172 cv
1478.38 462.182 1478.38 462.193 1478.38 462.205 cv
1478.38 462.207 1478.38 462.209 1478.38 462.211 cv
1478.39 462.216 1478.39 462.22 1478.39 462.225 cv
1478.39 462.226 1478.39 462.227 1478.39 462.228 cv
1478.39 462.246 1478.4 462.264 1478.41 462.284 cv
1478.41 462.285 1478.41 462.287 1478.41 462.288 cv
1478.41 462.297 1478.41 462.307 1478.41 462.317 cv
1478.42 462.321 1478.42 462.326 1478.42 462.33 cv
1478.42 462.347 1478.43 462.365 1478.43 462.383 cv
1478.44 462.391 1478.44 462.398 1478.44 462.406 cv
1478.44 462.409 1478.44 462.412 1478.44 462.416 cv
1478.44 462.424 1478.45 462.431 1478.45 462.439 cv
1478.45 462.452 1478.46 462.465 1478.46 462.479 cv
1478.46 462.48 1478.46 462.481 1478.46 462.482 cv
1478.46 462.485 1478.46 462.488 1478.46 462.491 cv
1478.46 462.492 1478.46 462.494 1478.46 462.495 cv
1479.72 466.954 1489.17 502.533 1476.13 518.021 cv
1470.35 519.841 1462.85 520.659 1454.45 520.659 cv
f
1370.01 404.119 mo
1368.4 405.728 1345.35 422.887 1345.35 440.583 cv
1345.35 458.278 1367.33 497.504 1401.65 494.783 cv
1435.97 492.061 1486.91 485.09 1472.43 452.379 cv
1457.96 419.67 1370.01 404.119 1370.01 404.119 cv
.737255 .737255 .819608 rgb
f
1346.54 433.343 mo
1346.54 433.343 li
1346.69 432.888 1346.84 432.436 1347.01 431.985 cv
1346.84 432.436 1346.69 432.888 1346.54 433.343 cv
1347.01 431.982 mo
1347.05 431.883 1347.09 431.786 1347.12 431.687 cv
1347.09 431.786 1347.05 431.883 1347.01 431.982 cv
1347.13 431.662 mo
1347.14 431.64 1347.15 431.617 1347.16 431.595 cv
1347.15 431.616 1347.14 431.64 1347.13 431.662 cv
1347.17 431.555 mo
1347.18 431.539 1347.19 431.521 1347.19 431.504 cv
1347.19 431.521 1347.18 431.539 1347.17 431.555 cv
1347.21 431.454 mo
1347.22 431.441 1347.22 431.43 1347.23 431.417 cv
1347.22 431.43 1347.22 431.441 1347.21 431.454 cv
1347.25 431.357 mo
1347.26 431.349 1347.26 431.343 1347.26 431.335 cv
1347.26 431.342 1347.26 431.35 1347.25 431.357 cv
.788235 .788235 .854902 rgb
f
1456.1 474.262 mo
1432.48 474.261 1402.83 462.822 1377.39 455.45 cv
1362.7 451.193 1352.97 442.623 1346.54 433.343 cv
1346.69 432.888 1346.84 432.436 1347.01 431.985 cv
1347.01 431.982 li
1347.05 431.883 1347.09 431.786 1347.12 431.687 cv
1347.13 431.679 1347.13 431.67 1347.13 431.662 cv
1347.14 431.64 1347.15 431.616 1347.16 431.595 cv
1347.16 431.581 1347.17 431.569 1347.17 431.555 cv
1347.18 431.539 1347.19 431.521 1347.19 431.504 cv
1347.2 431.487 1347.21 431.471 1347.21 431.454 cv
1347.22 431.441 1347.22 431.43 1347.23 431.417 cv
1347.24 431.398 1347.24 431.377 1347.25 431.357 cv
1347.26 431.35 1347.26 431.342 1347.26 431.335 cv
1352.83 417.309 1368.69 405.444 1370.01 404.119 cv
1370.01 404.119 1457.96 419.67 1472.43 452.379 cv
1475.92 460.255 1475.61 466.638 1472.66 471.829 cv
1467.63 473.534 1462.06 474.262 1456.1 474.262 cv
.580392 .580392 .701961 rgb
f
1570.53 355.351 mo
1570.53 355.351 1536.24 309.207 1492.27 294.192 cv
1448.3 279.178 1374.34 347.279 1362.26 375.163 cv
1350.17 403.047 1380.74 423.424 1412.91 436.83 cv
1445.09 450.235 1465.68 447.659 1482.95 430.395 cv
1500.21 413.13 1456.88 362.83 1442.94 362.83 cv
1509.43 360.149 li
1570.53 355.351 li
cp
.737255 .737255 .819608 rgb
f
1564.13 486.292 mo
1562.73 486.292 li
1557.61 499.779 1546.5 512.858 1532.39 518.239 cv
1507.61 527.682 1483 511.616 1478.48 510.012 cv
1478.08 510.639 1476.04 517.993 1468.4 521.372 cv
1455.11 527.251 1409.02 543.721 1374.12 508.825 cv
1357.26 491.962 1367.18 480.575 1367.33 479.555 cv
1366.26 478.495 li
1322.88 435.453 1368.3 410.04 1368.88 407.838 cv
1368.25 406.546 1356.33 393.913 1364.11 375.964 cv
1376.45 347.489 1449.76 281.804 1491.62 296.101 cv
1532.79 310.157 1565.16 351.614 1568.77 356.36 cv
1585.43 376.53 1595.11 402.562 1598.35 418.726 cv
1603.07 442.353 1581.52 486.292 1564.13 486.292 cv
cp
1602.3 417.934 mo
1590.91 360.974 1536.68 307.224 1492.93 292.285 cv
1448.46 277.104 1373.34 344.521 1360.41 374.362 cv
1355.59 385.488 1356.85 396.289 1364.15 406.493 cv
1350.52 418.554 1343.33 430.316 1343.33 440.583 cv
1343.33 450.419 1350 467.475 1362.39 480.316 cv
1349.16 508.92 1406.11 553.328 1470.03 525.06 cv
1474.37 523.139 1477.81 519.934 1480.29 515.514 cv
1520.79 536.138 1552.24 521.293 1565.51 490.257 cv
1586.51 488.239 1607.03 441.589 1602.3 417.934 cv
cp
0 0 0 rgb
f
1373.8 298.521 mo
1343.77 330.718 1344.72 347.815 1344.73 347.701 cv
1343.66 359.244 1345.17 368.854 1348.58 376.681 cv
1348.73 389.569 1315.89 347.638 1373.8 298.521 cv
cp
f
1330.25 410.288 mo
1326.82 432.6 1326.8 454.463 1346.98 467.238 cv
1351.97 474.403 1316.57 459.811 1330.25 410.288 cv
cp
f
1343.33 440.583 mo
1343.33 424.257 1357.26 413.531 1365.46 405.358 cv
1367.1 403.715 1369.75 406.605 1367.05 409.302 cv
1355.01 421.341 1347.36 430.745 1347.36 440.583 cv
1347.36 457.715 1368.85 495.378 1401.49 492.772 cv
1434.85 490.127 1484.07 483.649 1470.59 453.196 cv
1469.18 450.008 1466.92 446.825 1463.88 443.735 cv
1462 441.832 1464.88 439.006 1466.75 440.905 cv
1470.14 444.343 1472.67 447.929 1474.28 451.564 cv
1489.44 485.822 1439.33 493.816 1401.81 496.792 cv
1367.78 499.474 1343.33 461.355 1343.33 440.583 cv
cp
f
1412.14 438.69 mo
1343.7 410.175 1335.44 374.462 1414.12 316.964 cv
1432.09 303.833 1466.22 283.166 1492.93 292.285 cv
1532.08 305.654 1574.24 354.457 1571.73 356.969 cv
1568.95 359.749 1541.28 313.058 1491.62 296.101 cv
1466.65 287.571 1433.83 307.55 1416.5 320.219 cv
1339.45 376.527 1348.55 407.827 1413.69 434.969 cv
1444.28 447.717 1464.57 445.922 1481.52 428.969 cv
1496.94 413.547 1455.89 364.846 1442.94 364.846 cv
1440.27 364.846 1440.27 360.814 1442.94 360.814 cv
1458.16 360.814 1503.35 412.842 1484.37 431.821 cv
1463.56 452.638 1439.62 450.143 1412.14 438.69 cv
cp
f
1371.27 511.675 mo
1354.43 494.838 1360.52 477.818 1364.85 479.731 cv
1369.7 481.873 1355.9 490.605 1374.12 508.825 cv
1409.02 543.721 1455.11 527.251 1468.4 521.372 cv
1481.23 515.697 1488.67 486.793 1468.52 478.03 cv
1466.07 476.965 1467.68 473.266 1470.13 474.332 cv
1493.52 484.504 1486.08 517.961 1470.03 525.06 cv
1436.76 539.773 1398.4 538.808 1371.27 511.675 cv
cp
f
1499.78 347.815 mo
1499.78 347.815 1434.36 385.352 1425.25 404.119 cv
1416.13 422.887 1432.22 486.699 1449.91 492.598 cv
1467.61 498.496 1494.63 498.935 1506.96 469.442 cv
1519.29 439.949 1490.13 414.118 1490.13 414.118 cv
1552.33 421.083 li
1552.33 421.083 1558.23 343.441 1499.78 347.815 cv
cp
.737255 .737255 .819608 rgb
f
1552.34 420.997 mo
1529.84 417.773 1507.2 414.528 1484.32 411.25 cv
1484.74 411.94 1529.92 449.763 1495.4 483.502 cv
1483.55 495.154 1466.29 495.892 1450.51 490.668 cv
1437.07 485.664 1427.22 448.632 1425.18 429.761 cv
1422.51 404.188 1422.66 396.625 1500.8 349.552 cv
1500.81 349.552 li
1503.11 348.21 1501.08 344.724 1498.78 346.067 cv
1482.52 355.532 1463.18 367.755 1448.19 378.988 cv
1424.7 396.75 1424.28 402.301 1423.49 403.135 cv
1414.1 422.394 1429.12 478.865 1444.3 491.538 cv
1445.37 492.421 li
1453.49 498.05 1494.3 507.884 1509.34 468.843 cv
1518.28 445.689 1502.95 424.954 1495.35 416.562 cv
1552.32 421.167 li
1552.41 421.094 li
1552.34 420.997 li
cp
0 0 0 rgb
f
1567.59 485.737 mo
1575.77 486.484 1567.28 502.295 1526.78 467.305 cv
1526.3 466.888 1526.9 466.152 1527.4 466.533 cv
1534.96 472.23 1558.63 488.716 1567.59 485.737 cv
cp
f
1435.78 415.526 mo
1435.78 415.526 1438.34 468.554 1455.79 474.262 cv
1473.24 479.969 1490.33 484.447 1489.05 455.45 cv
1487.77 426.452 1447.25 389.31 1435.78 415.526 cv
cp
.788235 .788235 .854902 rgb
f
1462.45 305.657 mo
1462.45 305.657 1376.91 351.841 1376.91 374.239 cv
1376.91 396.636 1498.2 320.094 1489.12 311.009 cv
1480.03 301.924 1462.45 305.657 1462.45 305.657 cv
cp
f
1402.21 1800.16 mo
1402.21 1800.16 1386.04 1863.29 1436.59 1870.92 cv
1487.15 1878.54 1507.37 1884.07 1522.54 1842.66 cv
1537.7 1801.24 1402.21 1800.16 1402.21 1800.16 cv
.737255 .737255 .819608 rgb
f
1481.33 1873.51 mo
1477.79 1873.51 1473.95 1873.26 1469.78 1872.84 cv
1483.48 1864.54 1487.89 1853.41 1487.16 1841.71 cv
1494.01 1841.56 1500.92 1840.97 1507.31 1839.7 cv
1512.24 1838.72 1516.85 1837.33 1520.86 1835.42 cv
1521.03 1837.4 1520.73 1839.49 1519.92 1841.7 cv
1510.88 1866.39 1500.33 1873.51 1481.33 1873.51 cv
.580392 .580392 .701961 rgb
f
1519.92 1841.7 mo
1505.5 1881.08 1487.24 1875.75 1437.01 1868.16 cv
1405.27 1863.37 1398.24 1833.87 1404.44 1802.98 cv
1437.96 1803.72 1531.47 1810.18 1519.92 1841.7 cv
1400.06 1797.35 mo
1391.22 1832.72 1399.48 1868.13 1436.18 1873.67 cv
1486.84 1881.31 1509.14 1887.33 1525.15 1843.62 cv
1539.33 1804.88 1441.38 1797.81 1400.06 1797.35 cv
0 0 0 rgb
f
1572.82 1685.39 mo
1550.32 1662.89 1542.46 1672.72 1542.46 1672.72 cv
1542.46 1672.72 1537.62 1648.9 1503.54 1646.49 cv
1498.76 1646.15 1494.08 1648.01 1490.89 1651.6 cv
1490.8 1651.7 li
1491.13 1644.14 1492.06 1635.94 1493.87 1627.21 cv
1497.9 1607.81 1504.37 1589.23 1510.47 1570.46 cv
1512.58 1563.96 1513.75 1556.74 1511.25 1550.37 cv
1509.39 1545.62 1505.66 1541.84 1501.67 1538.65 cv
1496.76 1534.73 1491.23 1531.45 1485.13 1529.93 cv
1475.73 1527.6 1465.31 1529.81 1457.67 1535.76 cv
1440.51 1549.13 1441.13 1581.07 1440.26 1600.81 cv
1439.4 1620.29 1440.22 1635.45 1440.22 1654.93 cv
1440.22 1679.79 1428.2 1700.91 1422.51 1708.69 cv
1417.97 1710.55 1418.44 1709.4 1415.13 1708.51 cv
1392.64 1702.46 1390.91 1666.12 1352.85 1657.47 cv
1314.78 1648.82 1289.69 1672.18 1294.88 1686.02 cv
1300.08 1699.86 1338.14 1691.21 1345.06 1713.7 cv
1351.7 1735.26 1381.38 1833.77 1436.39 1838.17 cv
1442.79 1838.69 1449.18 1839.18 1455.55 1839.96 cv
1475.28 1842.36 1514.13 1844.83 1529.33 1829.63 cv
1550.09 1808.86 1595.31 1707.88 1572.82 1685.39 cv
.737255 .737255 .819608 rgb
f
1483.28 1841.76 mo
1481.78 1841.76 1480.29 1841.74 1478.82 1841.7 cv
1478.82 1841.7 li
1480.29 1841.74 1481.78 1841.75 1483.28 1841.75 cv
1484.57 1841.76 1485.87 1841.74 1487.16 1841.71 cv
1487.16 1841.71 1487.16 1841.71 1487.16 1841.71 cv
1485.87 1841.74 1484.57 1841.76 1483.28 1841.76 cv
.580392 .580392 .701961 rgb
f
1572.82 1685.39 mo
1572.8 1685.37 1572.78 1685.35 1572.76 1685.33 cv
1572.78 1685.35 1572.8 1685.37 1572.82 1685.39 cv
1566.53 1679.59 mo
1566.52 1679.58 1566.52 1679.58 1566.51 1679.57 cv
1566.52 1679.58 1566.52 1679.58 1566.53 1679.59 cv
1566.48 1679.55 mo
1566.47 1679.54 1566.46 1679.53 1566.44 1679.52 cv
1566.46 1679.53 1566.47 1679.54 1566.48 1679.55 cv
1566.43 1679.51 mo
1566.41 1679.49 1566.39 1679.48 1566.38 1679.46 cv
1566.39 1679.48 1566.41 1679.49 1566.43 1679.51 cv
1566.37 1679.46 mo
1563.83 1677.34 1561.52 1675.69 1559.43 1674.42 cv
1559.43 1674.42 1559.43 1674.42 1559.43 1674.42 cv
1561.52 1675.69 1563.83 1677.34 1566.37 1679.46 cv
.788235 .788235 .854902 rgb
f
1487.16 1841.71 mo
1487.16 1841.71 1487.16 1841.71 1487.16 1841.71 cv
1494.01 1841.56 1500.92 1840.97 1507.31 1839.7 cv
1500.92 1840.97 1494.01 1841.56 1487.16 1841.71 cv
.458824 .458824 .6 rgb
f
1483.28 1841.75 mo
1481.78 1841.75 1480.29 1841.74 1478.82 1841.7 cv
1520.58 1826.97 1558.55 1749.9 1561.76 1716.68 cv
1563.39 1699.88 1561.68 1685.22 1559.43 1674.42 cv
1561.52 1675.69 1563.83 1677.34 1566.37 1679.46 cv
1566.38 1679.46 1566.38 1679.46 1566.38 1679.46 cv
1566.39 1679.48 1566.41 1679.49 1566.43 1679.51 cv
1566.43 1679.51 1566.44 1679.51 1566.44 1679.52 cv
1566.46 1679.53 1566.47 1679.54 1566.48 1679.55 cv
1566.49 1679.56 1566.5 1679.57 1566.51 1679.57 cv
1566.52 1679.58 1566.52 1679.58 1566.53 1679.59 cv
1568.47 1681.21 1570.54 1683.11 1572.76 1685.33 cv
1572.78 1685.35 1572.8 1685.37 1572.82 1685.39 cv
1572.82 1685.39 li
1577.1 1689.67 1578.93 1696.8 1578.94 1705.68 cv
1578.98 1743.43 1546.14 1812.82 1529.33 1829.63 cv
1529.33 1829.63 li
1524.16 1834.79 1516.26 1837.92 1507.31 1839.7 cv
1500.92 1840.97 1494.01 1841.56 1487.16 1841.71 cv
1485.87 1841.74 1484.57 1841.76 1483.28 1841.75 cv
.580392 .580392 .701961 rgb
f
1532.14 1729.2 mo
1532.14 1729.2 1541.09 1692.31 1533.79 1658.41 cv
1536.01 1660.57 1537.69 1662.76 1538.95 1664.76 cv
1540.96 1669.31 1542.46 1672.72 1542.46 1672.72 cv
1542.46 1672.72 1543.75 1717.58 1532.14 1729.2 cv
f
1476.13 1691.83 mo
1476.13 1691.83 1470.4 1662.01 1472.31 1648.16 cv
1474.22 1634.31 1498.69 1581.36 1501.36 1557.21 cv
1502.32 1548.6 1502.2 1542.69 1501.6 1538.59 cv
1501.67 1538.65 li
1505.66 1541.84 1509.39 1545.62 1511.25 1550.37 cv
1512.25 1552.91 1512.66 1555.58 1512.66 1558.29 cv
1512.67 1562.38 1511.74 1566.55 1510.47 1570.46 cv
1504.37 1589.23 1497.9 1607.81 1493.87 1627.21 cv
1492.06 1635.94 1491.13 1644.14 1490.8 1651.7 cv
1490.8 1651.7 li
1490.8 1651.7 li
1490.89 1651.6 li
1476.13 1691.83 li
f
1527.71 1828.01 mo
1510.97 1844.74 1460.04 1839.04 1436.57 1835.89 cv
1378.37 1831.23 1348.97 1716.21 1347.25 1713.03 cv
1339.96 1689.32 1301.45 1697 1297.03 1685.21 cv
1292.48 1673.06 1316.44 1651.55 1352.34 1659.71 cv
1390.89 1668.47 1393.3 1712.89 1417.44 1712.26 cv
1421.45 1712.16 1425.13 1710.02 1427.3 1706.65 cv
1447.91 1674.48 1440.81 1651.28 1442.77 1595.03 cv
1443.45 1575.62 1444.38 1549.03 1459.08 1537.57 cv
1466.13 1532.08 1475.9 1530.01 1484.58 1532.16 cv
1493.68 1534.42 1505.93 1543.08 1509.12 1551.21 cv
1512.4 1559.58 1508.57 1568.9 1505.69 1577.69 cv
1488.7 1629.5 1489.9 1635.11 1488.24 1658 cv
1490.84 1655.76 1494.5 1648.14 1503.38 1648.78 cv
1535.18 1651.02 1540.02 1672.28 1540.21 1673.17 cv
1541.14 1678.02 li
1544 1674.59 1544.29 1672.98 1548.03 1672.88 cv
1551.29 1672.79 1558.7 1674.52 1571.2 1687.01 cv
1592.13 1707.95 1548.34 1807.37 1527.71 1828.01 cv
cp
1574.38 1684.15 mo
1566.8 1676.58 1553.52 1665.36 1543.63 1669.55 cv
1535.14 1648.26 1505.24 1640.04 1493.35 1647 cv
1498.24 1584.77 1532.21 1560.56 1503.04 1537.24 cv
1485.79 1523.45 1468.18 1525 1456.2 1534.34 cv
1439.81 1547.11 1438.84 1574.93 1438.13 1595.25 cv
1436.1 1652.7 1437.62 1682.08 1422.54 1704.91 cv
1420.87 1707.44 1417.7 1708.58 1414.83 1707.62 cv
1414.76 1707.59 li
1393.99 1700.56 1392.2 1664.46 1353.29 1655.62 cv
1313.17 1646.5 1286.8 1671.55 1292.67 1687.21 cv
1295.39 1694.46 1304.78 1696.37 1314.71 1698.4 cv
1345.08 1704.59 1341.43 1714.06 1343.03 1715.51 cv
1382.73 1844.63 1430.26 1838.12 1437.24 1840.93 cv
1462.24 1842.93 1511.42 1851.1 1530.89 1831.63 cv
1552.42 1810.09 1598.15 1707.92 1574.38 1684.15 cv
cp
0 0 0 rgb
f
1476.13 1691.83 mo
1488.85 1653.56 1488.16 1646.35 1492.29 1647.62 cv
1496.9 1649.03 1490.52 1655.66 1476.13 1691.83 cv
cp
f
1532.06 1731.17 mo
1549.69 1689.17 1535.2 1671.04 1542.22 1670.35 cv
1549.2 1669.65 1545.72 1704.51 1532.06 1731.17 cv
cp
f
1525.6 1493.53 mo
1546.14 1507.52 1561.04 1531.39 1554.51 1555.17 cv
1553.98 1557.11 1551.06 1556.4 1551.46 1554.44 cv
1551.23 1550.65 1560.12 1523.38 1525.6 1493.53 cv
cp
f
1512.18 1515.19 mo
1535.54 1533.71 1550.14 1564.09 1542.58 1593.49 cv
1541.99 1595.8 1538.49 1595.02 1538.94 1592.67 cv
1538.13 1589.95 1550.94 1553.7 1512.18 1515.19 cv
cp
f
1383.68 1764.84 mo
1383.68 1764.84 1390.38 1803.58 1429.46 1819.64 cv
1468.54 1835.69 1500.77 1805.88 1512.18 1781.41 cv
1523.59 1756.95 1513.65 1746.8 1468.54 1746.8 cv
1423.44 1746.8 1376.04 1729.93 1383.68 1764.84 cv
cp
.788235 .788235 .854902 rgb
f
1466.58 1546.7 mo
1466.58 1546.7 1452.34 1589.46 1463.86 1600.98 cv
1475.37 1612.5 1499.24 1554.35 1484.65 1546.7 cv
1470.07 1539.05 1466.58 1546.7 1466.58 1546.7 cv
cp
f
941.488 1798.64 mo
941.488 1798.64 925.663 1860.39 975.117 1867.85 cv
1024.57 1875.32 1044.35 1880.72 1059.19 1840.21 cv
1074.02 1799.7 941.488 1798.64 941.488 1798.64 cv
.737255 .737255 .819608 rgb
f
1014.3 1872.95 mo
1014.3 1872.95 1014.29 1872.95 1014.29 1872.95 cv
1014.3 1872.95 1014.3 1872.95 1014.3 1872.95 cv
1014.18 1872.94 mo
1014.18 1872.94 1014.17 1872.94 1014.17 1872.94 cv
1014.17 1872.94 1014.18 1872.94 1014.18 1872.94 cv
1013.9 1872.93 mo
1013.87 1872.93 1013.84 1872.93 1013.81 1872.92 cv
1013.84 1872.93 1013.87 1872.93 1013.9 1872.93 cv
1013.77 1872.92 mo
1013.74 1872.92 1013.7 1872.92 1013.67 1872.92 cv
1013.7 1872.92 1013.74 1872.92 1013.77 1872.92 cv
1013.64 1872.92 mo
1010.46 1872.74 1007.08 1872.41 1003.47 1871.99 cv
1003.47 1871.99 li
1003.47 1871.99 li
1007.08 1872.41 1010.46 1872.74 1013.64 1872.92 cv
1059.19 1840.21 mo
1059.19 1840.21 li
1059.19 1840.19 1059.2 1840.18 1059.21 1840.16 cv
1059.2 1840.17 1059.19 1840.19 1059.19 1840.21 cv
1059.19 1840.21 li
1059.22 1840.13 mo
1059.22 1840.12 1059.22 1840.11 1059.23 1840.1 cv
1059.22 1840.11 1059.22 1840.12 1059.22 1840.13 cv
1059.24 1840.07 mo
1059.24 1840.06 1059.25 1840.05 1059.25 1840.04 cv
1059.25 1840.05 1059.24 1840.06 1059.24 1840.07 cv
1059.26 1840.01 mo
1059.26 1840 1059.27 1839.99 1059.27 1839.98 cv
1059.27 1839.99 1059.26 1840 1059.26 1840.01 cv
1059.28 1839.95 mo
1059.28 1839.94 1059.29 1839.94 1059.29 1839.93 cv
1059.29 1839.93 1059.28 1839.94 1059.28 1839.95 cv
1059.3 1839.89 mo
1059.3 1839.89 1059.31 1839.88 1059.31 1839.87 cv
1059.31 1839.88 1059.3 1839.89 1059.3 1839.89 cv
1059.32 1839.83 mo
1059.32 1839.83 1059.33 1839.82 1059.33 1839.81 cv
1059.33 1839.82 1059.32 1839.83 1059.32 1839.83 cv
1059.34 1839.78 mo
1059.34 1839.77 1059.35 1839.76 1059.35 1839.76 cv
1059.35 1839.76 1059.34 1839.77 1059.34 1839.78 cv
1059.36 1839.72 mo
1059.36 1839.72 1059.37 1839.71 1059.37 1839.7 cv
1059.36 1839.71 1059.36 1839.71 1059.36 1839.72 cv
1059.38 1839.66 mo
1059.38 1839.66 1059.38 1839.65 1059.39 1839.64 cv
1059.38 1839.65 1059.38 1839.66 1059.38 1839.66 cv
1059.4 1839.61 mo
1059.4 1839.6 1059.4 1839.6 1059.4 1839.59 cv
1059.4 1839.59 1059.4 1839.6 1059.4 1839.61 cv
1059.42 1839.55 mo
1059.42 1839.55 1059.42 1839.54 1059.42 1839.53 cv
1059.42 1839.54 1059.42 1839.54 1059.42 1839.55 cv
1059.44 1839.49 mo
1059.44 1839.49 1059.44 1839.48 1059.44 1839.48 cv
1059.44 1839.49 1059.44 1839.49 1059.44 1839.49 cv
1059.45 1839.44 mo
1059.46 1839.43 1059.46 1839.43 1059.46 1839.43 cv
1059.46 1839.43 1059.46 1839.43 1059.45 1839.44 cv
1059.59 1838.99 mo
1059.59 1838.99 li
1059.59 1838.99 li
1059.61 1838.94 mo
1059.61 1838.94 li
1059.61 1838.94 li
1059.62 1838.89 mo
1059.62 1838.89 1059.63 1838.88 1059.63 1838.88 cv
1059.62 1838.88 1059.62 1838.89 1059.62 1838.89 cv
1059.64 1838.83 mo
1059.64 1838.83 1059.64 1838.83 1059.64 1838.83 cv
1059.64 1838.83 li
1059.66 1838.78 mo
1059.66 1838.77 li
1059.66 1838.78 li
1059.69 1838.67 mo
1059.69 1838.67 1059.69 1838.67 1059.69 1838.66 cv
1059.69 1838.67 1059.69 1838.67 1059.69 1838.67 cv
.788235 .788235 .854902 rgb
f
1018.91 1873.07 mo
1017.42 1873.07 1015.89 1873.03 1014.3 1872.95 cv
1014.3 1872.95 1014.3 1872.95 1014.29 1872.95 cv
1014.26 1872.95 1014.22 1872.95 1014.18 1872.94 cv
1014.18 1872.94 1014.17 1872.94 1014.17 1872.94 cv
1014.08 1872.94 1013.99 1872.93 1013.9 1872.93 cv
1013.87 1872.93 1013.84 1872.93 1013.81 1872.92 cv
1013.8 1872.92 1013.79 1872.92 1013.77 1872.92 cv
1013.74 1872.92 1013.7 1872.92 1013.67 1872.92 cv
1013.66 1872.92 1013.65 1872.92 1013.64 1872.92 cv
1010.46 1872.74 1007.08 1872.41 1003.48 1871.99 cv
1020.31 1863.59 1025.49 1851.53 1024.55 1838.82 cv
1034.17 1839.23 1042.77 1839.33 1048.86 1839.33 cv
1049.59 1839.39 1050.3 1839.42 1051.01 1839.42 cv
1054.23 1839.42 1057.19 1838.8 1059.93 1837.72 cv
1059.86 1838.03 1059.78 1838.35 1059.69 1838.66 cv
1059.69 1838.67 1059.69 1838.67 1059.69 1838.67 cv
1059.68 1838.7 1059.67 1838.74 1059.66 1838.77 cv
1059.66 1838.78 li
1059.65 1838.79 1059.65 1838.81 1059.64 1838.83 cv
1059.64 1838.83 1059.64 1838.83 1059.64 1838.83 cv
1059.64 1838.85 1059.63 1838.86 1059.63 1838.88 cv
1059.63 1838.88 1059.62 1838.89 1059.62 1838.89 cv
1059.62 1838.91 1059.61 1838.92 1059.61 1838.94 cv
1059.61 1838.94 li
1059.6 1838.96 1059.6 1838.98 1059.59 1838.99 cv
1059.59 1838.99 li
1059.55 1839.14 1059.5 1839.28 1059.46 1839.43 cv
1059.46 1839.43 1059.46 1839.43 1059.45 1839.44 cv
1059.45 1839.45 1059.44 1839.47 1059.44 1839.48 cv
1059.44 1839.48 1059.44 1839.49 1059.44 1839.49 cv
1059.43 1839.5 1059.43 1839.52 1059.42 1839.53 cv
1059.42 1839.54 1059.42 1839.55 1059.42 1839.55 cv
1059.41 1839.56 1059.41 1839.58 1059.4 1839.59 cv
1059.4 1839.6 1059.4 1839.6 1059.4 1839.61 cv
1059.39 1839.62 1059.39 1839.63 1059.39 1839.64 cv
1059.38 1839.65 1059.38 1839.66 1059.38 1839.66 cv
1059.38 1839.68 1059.37 1839.69 1059.37 1839.7 cv
1059.37 1839.71 1059.36 1839.72 1059.36 1839.72 cv
1059.36 1839.73 1059.35 1839.75 1059.35 1839.76 cv
1059.35 1839.76 1059.34 1839.77 1059.34 1839.78 cv
1059.34 1839.79 1059.33 1839.8 1059.33 1839.81 cv
1059.33 1839.82 1059.32 1839.83 1059.32 1839.83 cv
1059.32 1839.85 1059.31 1839.86 1059.31 1839.87 cv
1059.31 1839.88 1059.3 1839.89 1059.3 1839.89 cv
1059.3 1839.91 1059.29 1839.92 1059.29 1839.93 cv
1059.29 1839.94 1059.28 1839.94 1059.28 1839.95 cv
1059.28 1839.96 1059.27 1839.97 1059.27 1839.98 cv
1059.27 1839.99 1059.26 1840 1059.26 1840.01 cv
1059.26 1840.02 1059.25 1840.03 1059.25 1840.04 cv
1059.25 1840.05 1059.24 1840.06 1059.24 1840.07 cv
1059.24 1840.08 1059.23 1840.09 1059.23 1840.1 cv
1059.22 1840.11 1059.22 1840.12 1059.22 1840.13 cv
1059.21 1840.14 1059.21 1840.15 1059.21 1840.16 cv
1059.2 1840.18 1059.19 1840.19 1059.19 1840.21 cv
1059.19 1840.21 li
1049.81 1865.81 1038.47 1873.07 1018.91 1873.07 cv
.580392 .580392 .701961 rgb
f
1056.63 1839.28 mo
1042.52 1877.8 1024.66 1872.59 975.523 1865.16 cv
944.475 1860.48 937.598 1831.61 943.668 1801.4 cv
976.455 1802.12 1067.93 1808.44 1056.63 1839.28 cv
cp
939.379 1795.9 mo
930.736 1830.49 938.813 1865.13 974.71 1870.55 cv
1024.27 1878.02 1046.09 1883.91 1061.75 1841.15 cv
1075.62 1803.25 979.798 1796.34 939.379 1795.9 cv
cp
0 0 0 rgb
f
1048.86 1839.33 mo
1027.74 1839.33 976.509 1838.14 957.164 1827.16 cv
943.717 1819.52 930.689 1796.65 925.482 1771.53 cv
920.671 1748.32 929.355 1651.19 922.449 1620.8 cv
915.213 1588.96 897.084 1539.48 890.34 1527.58 cv
888.191 1523.79 886.612 1520.03 888.566 1515.31 cv
894.307 1501.45 917.779 1491.17 940.388 1506.06 cv
969.132 1524.98 975.007 1563.99 975.007 1573.4 cv
975.029 1579.21 987.776 1637.6 994.305 1652.29 cv
999.153 1637.59 1004.84 1588.25 1009.92 1571.46 cv
1016.22 1550.61 1022.24 1511.69 1031.88 1502.05 cv
1042.41 1491.51 1073.05 1496.88 1083.35 1516.98 cv
1093.07 1535.92 1077.73 1567.92 1076 1571.42 cv
1064.41 1608.47 1053.12 1649.73 1053.74 1656.37 cv
1059.18 1662.86 1081.07 1703.02 1094.73 1720.79 cv
1109.97 1740.59 1095.6 1789.94 1086 1807.38 cv
1079.92 1818.42 1069.17 1841.02 1048.86 1839.33 cv
f
958.879 1824.14 mo
945.579 1816.59 933.571 1793.43 928.884 1770.82 cv
924.197 1748.21 932.867 1650.96 925.838 1620.03 cv
918.807 1589.1 901.036 1537.52 892.796 1525.13 cv
885.64 1514.37 909.643 1489.98 938.478 1508.96 cv
967.314 1527.94 971.532 1567.31 971.532 1573.4 cv
971.532 1579.49 988.404 1658.23 994.498 1658.23 cv
1000.59 1658.23 1007.15 1592.61 1013.24 1572.46 cv
1019.34 1552.31 1025.66 1513.18 1034.33 1504.51 cv
1043 1495.83 1070.89 1500.29 1080.26 1518.57 cv
1089.64 1536.84 1072.76 1570.12 1072.76 1570.12 cv
1072.76 1570.12 1046.52 1654.01 1050.74 1658.23 cv
1054.95 1662.45 1077.92 1704.63 1091.98 1722.9 cv
1106.04 1741.18 1091.94 1788.37 1083.54 1804.92 cv
1073.61 1824.51 1061.98 1835.85 1048.86 1835.85 cv
1035.74 1835.85 978.606 1835.34 958.879 1824.14 cv
.737255 .737255 .819608 rgb
f
1060.27 1773.45 mo
1058.77 1773.45 1057.52 1773.3 1056.64 1773 cv
1050.06 1770.76 1046.68 1760.1 1046.68 1760.1 cv
1046.68 1760.1 1044.35 1760.97 1040.2 1760.97 cv
1036.88 1760.97 1032.41 1760.41 1027.05 1758.42 cv
1014.99 1753.93 1012.47 1730.04 1012.47 1730.04 cv
1021.74 1723.32 li
1022.04 1728.24 1023.23 1733.41 1025.03 1737.77 cv
1029.37 1748.25 1037.03 1754.26 1046.05 1754.26 cv
1048.19 1754.26 1050.28 1753.96 1052.34 1753.39 cv
1056.05 1760.6 1065.54 1765.6 1076.95 1765.6 cv
1079.71 1765.6 1082.55 1765.31 1085.4 1764.74 cv
1088.09 1764.2 1090.79 1763.11 1093.44 1761.58 cv
1085.72 1768.81 1068.79 1773.45 1060.27 1773.45 cv
.580392 .580392 .701961 rgb
f
1076.95 1765.6 mo
1062.21 1765.6 1050.66 1757.24 1050.66 1746.57 cv
1050.66 1736.74 1070.11 1684.49 1072.32 1678.57 cv
1073 1676.77 li
1074.88 1676.38 li
1075.27 1676.3 1084.55 1674.44 1093.75 1674.44 cv
1099.44 1674.44 1103.97 1675.17 1107.22 1676.61 cv
1119.48 1682.06 1124.04 1690.83 1124.04 1708.96 cv
1124.04 1729.05 1104.57 1760.91 1085.4 1764.74 cv
1082.55 1765.31 1079.71 1765.6 1076.95 1765.6 cv
0 0 0 rgb
f
1075.58 1679.79 mo
1075.58 1679.79 1096.31 1675.57 1105.8 1679.79 cv
1115.3 1684 1120.57 1690.33 1120.57 1708.96 cv
1120.57 1727.59 1102.29 1757.82 1084.71 1761.34 cv
1067.14 1764.85 1054.13 1756.06 1054.13 1746.57 cv
1054.13 1737.08 1075.58 1679.79 1075.58 1679.79 cv
.737255 .737255 .819608 rgb
f
1058.06 1755.3 mo
1057.11 1754.34 1056.31 1753.3 1055.69 1752.21 cv
1055.69 1752.21 li
1056.31 1753.3 1057.11 1754.33 1058.06 1755.3 cv
0 0 0 rgb
f
1076.95 1762.13 mo
1068.7 1762.12 1062.02 1759.32 1058.06 1755.3 cv
1057.11 1754.33 1056.31 1753.3 1055.69 1752.21 cv
1073.18 1744.72 1087.17 1718.01 1095.06 1692.77 cv
1096.7 1687.52 1097.62 1682.61 1097.93 1678.07 cv
1100.89 1678.3 1103.64 1678.82 1105.8 1679.79 cv
1105.8 1696.49 1094.14 1738.54 1078 1762.11 cv
1077.64 1762.12 1077.3 1762.13 1076.95 1762.13 cv
.580392 .580392 .701961 rgb
f
1046.05 1754.26 mo
1037.03 1754.26 1029.37 1748.25 1025.03 1737.77 cv
1020.91 1727.83 1019.99 1713.59 1025.67 1707.91 cv
1031.42 1702.16 1045.56 1643.68 1054.14 1642.47 cv
1057.67 1641.97 1062.77 1640.21 1068.25 1640.21 cv
1071.76 1640.21 1074.97 1640.71 1077.79 1641.71 cv
1092.2 1646.82 1103.75 1664.98 1095.06 1692.77 cv
1085.77 1722.5 1068.02 1754.26 1046.05 1754.26 cv
0 0 0 rgb
f
1050.76 1650.54 mo
1051.36 1648.2 1053.16 1646.38 1055.47 1645.7 cv
1060.48 1644.22 1069.31 1642.39 1076.63 1644.99 cv
1087.53 1648.86 1100.53 1663.62 1091.75 1691.74 cv
1082.96 1719.86 1065.73 1750.79 1046.05 1750.79 cv
1026.37 1750.79 1021.09 1717.4 1028.12 1710.37 cv
1034.27 1704.22 1047.51 1663.13 1050.76 1650.54 cv
.737255 .737255 .819608 rgb
f
1025.9 1728.56 mo
1025.9 1728.56 1025.9 1728.56 1025.89 1728.55 cv
1025.89 1728.55 1025.9 1728.56 1025.9 1728.56 cv
1025.87 1728.4 mo
1025.87 1728.4 1025.86 1728.4 1025.86 1728.39 cv
1025.86 1728.39 1025.87 1728.4 1025.87 1728.4 cv
1025.85 1728.32 mo
1025.85 1728.32 1025.85 1728.32 1025.85 1728.32 cv
1025.85 1728.32 li
1025.84 1728.24 mo
1025.84 1728.24 1025.84 1728.24 1025.83 1728.24 cv
1025.84 1728.24 1025.84 1728.24 1025.84 1728.24 cv
1025.82 1728.16 mo
1025.82 1728.16 1025.82 1728.16 1025.82 1728.16 cv
1025.82 1728.16 1025.82 1728.16 1025.82 1728.16 cv
1025.81 1728.08 mo
1025.81 1728.08 1025.81 1728.08 1025.81 1728.08 cv
1025.81 1728.08 1025.81 1728.08 1025.81 1728.08 cv
1025.79 1728.01 mo
1025.79 1728 1025.79 1728 1025.79 1728 cv
1025.79 1728 1025.79 1728 1025.79 1728.01 cv
1025.77 1727.85 mo
1025.76 1727.85 1025.76 1727.84 1025.76 1727.84 cv
1025.76 1727.84 1025.76 1727.85 1025.77 1727.85 cv
1025.75 1727.77 mo
1025.75 1727.77 1025.75 1727.77 1025.75 1727.76 cv
1025.75 1727.77 1025.75 1727.77 1025.75 1727.77 cv
1025.74 1727.7 mo
1025.74 1727.69 1025.74 1727.68 1025.73 1727.67 cv
1025.74 1727.68 1025.74 1727.69 1025.74 1727.7 cv
1025.73 1727.62 mo
1025.73 1727.62 1025.72 1727.61 1025.72 1727.6 cv
1025.72 1727.61 1025.72 1727.62 1025.73 1727.62 cv
1025.71 1727.54 mo
1025.71 1727.53 1025.71 1727.52 1025.71 1727.51 cv
1025.71 1727.52 1025.71 1727.53 1025.71 1727.54 cv
1025.7 1727.46 mo
1025.7 1727.46 1025.7 1727.45 1025.7 1727.44 cv
1025.7 1727.45 1025.7 1727.46 1025.7 1727.46 cv
1025.69 1727.38 mo
1025.68 1727.37 1025.68 1727.36 1025.68 1727.35 cv
1025.68 1727.36 1025.68 1727.37 1025.69 1727.38 cv
1025.67 1727.31 mo
1025.67 1727.3 1025.67 1727.29 1025.67 1727.28 cv
1025.67 1727.29 1025.67 1727.3 1025.67 1727.31 cv
1025.66 1727.24 mo
1025.66 1727.22 1025.66 1727.21 1025.65 1727.19 cv
1025.66 1727.21 1025.66 1727.22 1025.66 1727.24 cv
1025.65 1727.15 mo
1025.65 1727.14 1025.65 1727.13 1025.64 1727.12 cv
1025.65 1727.13 1025.65 1727.14 1025.65 1727.15 cv
1025.64 1727.09 mo
1025.64 1727.07 1025.63 1727.04 1025.63 1727.02 cv
1025.63 1727.05 1025.64 1727.07 1025.64 1727.09 cv
1025.63 1727 mo
1025.62 1726.98 1025.62 1726.97 1025.62 1726.96 cv
1025.62 1726.97 1025.62 1726.98 1025.63 1727 cv
1025.61 1726.93 mo
1025.61 1726.91 1025.61 1726.89 1025.6 1726.87 cv
1025.61 1726.89 1025.61 1726.91 1025.61 1726.93 cv
1025.6 1726.83 mo
1025.6 1726.82 1025.6 1726.81 1025.59 1726.8 cv
1025.6 1726.81 1025.6 1726.82 1025.6 1726.83 cv
1025.59 1726.77 mo
1025.58 1726.73 1025.58 1726.68 1025.57 1726.63 cv
1025.58 1726.68 1025.58 1726.73 1025.59 1726.77 cv
1025.57 1726.62 mo
1025.56 1726.57 1025.55 1726.52 1025.55 1726.47 cv
1025.55 1726.52 1025.56 1726.57 1025.57 1726.62 cv
1025.55 1726.46 mo
1025.54 1726.44 1025.54 1726.42 1025.54 1726.41 cv
1025.54 1726.42 1025.54 1726.44 1025.55 1726.46 cv
1025.54 1726.41 mo
1025.53 1726.37 1025.53 1726.34 1025.52 1726.31 cv
1025.53 1726.34 1025.53 1726.37 1025.54 1726.41 cv
1025.52 1726.3 mo
1025.52 1726.25 1025.51 1726.2 1025.5 1726.14 cv
1025.51 1726.2 1025.52 1726.25 1025.52 1726.3 cv
1025.5 1726.14 mo
1025.5 1726.12 1025.5 1726.1 1025.5 1726.09 cv
1025.5 1726.11 1025.5 1726.12 1025.5 1726.14 cv
1025.49 1726.08 mo
1025.49 1726.03 1025.48 1725.98 1025.47 1725.93 cv
1025.48 1725.98 1025.49 1726.03 1025.49 1726.08 cv
1025.47 1725.92 mo
1025.47 1725.87 1025.46 1725.82 1025.45 1725.77 cv
1025.46 1725.82 1025.47 1725.87 1025.47 1725.92 cv
1025.45 1725.76 mo
1025.45 1725.71 1025.44 1725.66 1025.43 1725.61 cv
1025.44 1725.66 1025.45 1725.71 1025.45 1725.76 cv
1025.43 1725.6 mo
1025.43 1725.58 1025.43 1725.56 1025.43 1725.55 cv
1025.43 1725.57 1025.43 1725.58 1025.43 1725.6 cv
1025.43 1725.54 mo
1025.42 1725.51 1025.42 1725.48 1025.42 1725.45 cv
1025.42 1725.48 1025.42 1725.51 1025.43 1725.54 cv
1025.41 1725.44 mo
1025.41 1725.37 1025.4 1725.3 1025.39 1725.23 cv
1025.4 1725.3 1025.41 1725.37 1025.41 1725.44 cv
1025.39 1725.22 mo
1025.38 1725.12 1025.37 1725.02 1025.36 1724.91 cv
1025.37 1725.01 1025.38 1725.12 1025.39 1725.22 cv
1025.36 1724.9 mo
1025.2 1723.42 1025.14 1721.96 1025.16 1720.58 cv
1025.14 1721.96 1025.21 1723.42 1025.36 1724.9 cv
1025.16 1720.57 mo
1025.17 1720.05 1025.19 1719.54 1025.23 1719.03 cv
1025.19 1719.54 1025.17 1720.05 1025.16 1720.57 cv
1025.23 1719.02 mo
1025.23 1718.98 1025.23 1718.93 1025.24 1718.89 cv
1025.23 1718.93 1025.23 1718.98 1025.23 1719.02 cv
1025.24 1718.89 mo
1025.24 1718.87 1025.24 1718.85 1025.24 1718.84 cv
1025.24 1718.85 1025.24 1718.87 1025.24 1718.89 cv
1025.24 1718.83 mo
1025.24 1718.81 1025.24 1718.78 1025.25 1718.75 cv
1025.24 1718.78 1025.24 1718.81 1025.24 1718.83 cv
1025.25 1718.74 mo
1025.25 1718.73 1025.25 1718.71 1025.25 1718.7 cv
1025.25 1718.71 1025.25 1718.73 1025.25 1718.74 cv
1025.25 1718.69 mo
1025.25 1718.67 1025.25 1718.64 1025.26 1718.61 cv
1025.25 1718.64 1025.25 1718.67 1025.25 1718.69 cv
1025.26 1718.6 mo
1025.26 1718.59 1025.26 1718.58 1025.26 1718.56 cv
1025.26 1718.58 1025.26 1718.59 1025.26 1718.6 cv
1025.26 1718.54 mo
1025.26 1718.52 1025.27 1718.5 1025.27 1718.48 cv
1025.27 1718.5 1025.26 1718.52 1025.26 1718.54 cv
1025.27 1718.46 mo
1025.27 1718.45 1025.27 1718.44 1025.27 1718.43 cv
1025.27 1718.44 1025.27 1718.45 1025.27 1718.46 cv
1025.27 1718.41 mo
1025.28 1718.37 1025.28 1718.33 1025.28 1718.29 cv
1025.28 1718.33 1025.28 1718.37 1025.27 1718.41 cv
1025.29 1718.27 mo
1025.29 1718.26 1025.29 1718.25 1025.29 1718.23 cv
1025.29 1718.24 1025.29 1718.26 1025.29 1718.27 cv
1025.29 1718.22 mo
1025.29 1718.19 1025.3 1718.17 1025.3 1718.15 cv
1025.3 1718.17 1025.29 1718.19 1025.29 1718.22 cv
1025.3 1718.13 mo
1025.3 1718.12 1025.3 1718.11 1025.3 1718.1 cv
1025.3 1718.11 1025.3 1718.12 1025.3 1718.13 cv
1025.31 1718.07 mo
1025.31 1718.06 1025.31 1718.04 1025.31 1718.03 cv
1025.31 1718.04 1025.31 1718.06 1025.31 1718.07 cv
1025.31 1717.99 mo
1025.31 1717.98 1025.32 1717.97 1025.32 1717.97 cv
1025.32 1717.97 1025.31 1717.98 1025.31 1717.99 cv
1025.32 1717.94 mo
1025.32 1717.92 1025.32 1717.91 1025.32 1717.89 cv
1025.32 1717.91 1025.32 1717.92 1025.32 1717.94 cv
1025.33 1717.86 mo
1025.33 1717.85 1025.33 1717.84 1025.33 1717.83 cv
1025.33 1717.84 1025.33 1717.85 1025.33 1717.86 cv
1025.33 1717.8 mo
1025.34 1717.79 1025.34 1717.78 1025.34 1717.77 cv
1025.34 1717.78 1025.34 1717.79 1025.33 1717.8 cv
1025.34 1717.72 mo
1025.34 1717.72 1025.34 1717.71 1025.35 1717.7 cv
1025.34 1717.71 1025.34 1717.72 1025.34 1717.72 cv
1025.35 1717.67 mo
1025.35 1717.66 1025.35 1717.65 1025.35 1717.64 cv
1025.35 1717.65 1025.35 1717.66 1025.35 1717.67 cv
1025.36 1717.59 mo
1025.36 1717.58 1025.36 1717.58 1025.36 1717.57 cv
1025.36 1717.58 1025.36 1717.59 1025.36 1717.59 cv
1025.37 1717.53 mo
1025.37 1717.53 1025.37 1717.52 1025.37 1717.51 cv
1025.37 1717.52 1025.37 1717.53 1025.37 1717.53 cv
1025.37 1717.46 mo
1025.38 1717.45 1025.38 1717.45 1025.38 1717.44 cv
1025.38 1717.45 1025.38 1717.45 1025.37 1717.46 cv
1025.38 1717.4 mo
1025.38 1717.4 1025.38 1717.39 1025.38 1717.38 cv
1025.38 1717.39 1025.38 1717.4 1025.38 1717.4 cv
1025.39 1717.33 mo
1025.39 1717.33 1025.39 1717.33 1025.39 1717.32 cv
1025.39 1717.32 1025.39 1717.33 1025.39 1717.33 cv
1025.4 1717.27 mo
1025.4 1717.26 1025.4 1717.26 1025.4 1717.25 cv
1025.4 1717.26 1025.4 1717.26 1025.4 1717.27 cv
1025.41 1717.2 mo
1025.41 1717.2 1025.41 1717.2 1025.41 1717.2 cv
1025.41 1717.2 1025.41 1717.2 1025.41 1717.2 cv
1025.42 1717.14 mo
1025.42 1717.13 1025.42 1717.13 1025.42 1717.12 cv
1025.42 1717.13 1025.42 1717.13 1025.42 1717.14 cv
1025.43 1717.08 mo
1025.43 1717.07 1025.43 1717.07 1025.43 1717.06 cv
1025.43 1717.07 1025.43 1717.07 1025.43 1717.08 cv
1025.44 1717.01 mo
1025.44 1717 1025.44 1717 1025.44 1717 cv
1025.44 1717 1025.44 1717 1025.44 1717.01 cv
1025.45 1716.94 mo
1025.45 1716.94 1025.45 1716.94 1025.45 1716.94 cv
1025.45 1716.94 1025.45 1716.94 1025.45 1716.94 cv
1025.45 1716.88 mo
1025.45 1716.88 1025.46 1716.87 1025.46 1716.87 cv
1025.46 1716.87 1025.45 1716.88 1025.45 1716.88 cv
1025.46 1716.82 mo
1025.46 1716.82 1025.46 1716.81 1025.47 1716.81 cv
1025.46 1716.81 1025.46 1716.82 1025.46 1716.82 cv
1025.47 1716.75 mo
1025.47 1716.75 1025.47 1716.75 1025.47 1716.75 cv
1025.47 1716.75 li
1025.48 1716.69 mo
1025.48 1716.69 1025.48 1716.69 1025.49 1716.68 cv
1025.48 1716.69 1025.48 1716.69 1025.48 1716.69 cv
1025.5 1716.56 mo
1025.5 1716.56 1025.5 1716.56 1025.51 1716.56 cv
1025.5 1716.56 1025.5 1716.56 1025.5 1716.56 cv
1025.54 1716.38 mo
1025.54 1716.38 1025.54 1716.37 1025.54 1716.37 cv
1025.54 1716.38 1025.54 1716.38 1025.54 1716.38 cv
1025.56 1716.25 mo
1025.56 1716.25 1025.56 1716.25 1025.56 1716.25 cv
1025.56 1716.25 1025.56 1716.25 1025.56 1716.25 cv
1025.58 1716.13 mo
1025.58 1716.13 li
1025.58 1716.13 li
1025.6 1716.01 mo
1025.6 1716.01 li
1025.6 1716.01 li
1027.95 1710.55 mo
1027.95 1710.55 1027.95 1710.55 1027.95 1710.55 cv
1027.95 1710.55 1027.95 1710.55 1027.95 1710.55 cv
1027.98 1710.52 mo
1027.98 1710.52 1027.98 1710.52 1027.98 1710.52 cv
1027.98 1710.52 1027.98 1710.52 1027.98 1710.52 cv
1028.01 1710.49 mo
1028.01 1710.49 li
1028.01 1710.49 li
1028.03 1710.46 mo
1028.03 1710.46 1028.04 1710.46 1028.04 1710.46 cv
1028.04 1710.46 1028.03 1710.46 1028.03 1710.46 cv
1028.09 1710.4 mo
1028.09 1710.4 1028.1 1710.4 1028.1 1710.39 cv
1028.09 1710.4 1028.09 1710.4 1028.09 1710.4 cv
1055.51 1645.68 mo
1055.52 1645.68 1055.53 1645.68 1055.54 1645.67 cv
1055.53 1645.68 1055.52 1645.68 1055.51 1645.68 cv
1055.56 1645.67 mo
1055.99 1645.54 1056.45 1645.41 1056.94 1645.28 cv
1056.45 1645.41 1055.99 1645.54 1055.56 1645.67 cv
1056.94 1645.28 mo
1056.96 1645.28 1056.97 1645.28 1056.98 1645.27 cv
1056.97 1645.28 1056.96 1645.28 1056.94 1645.28 cv
1056.98 1645.27 mo
1057.01 1645.27 1057.03 1645.26 1057.06 1645.25 cv
1057.03 1645.26 1057.01 1645.27 1056.98 1645.27 cv
1057.08 1645.25 mo
1057.09 1645.24 1057.1 1645.24 1057.1 1645.24 cv
1057.1 1645.24 1057.09 1645.24 1057.08 1645.25 cv
1057.16 1645.23 mo
1057.16 1645.22 1057.17 1645.22 1057.17 1645.22 cv
1057.17 1645.22 1057.16 1645.22 1057.16 1645.23 cv
1063.22 1644.03 mo
1063.24 1644.03 1063.25 1644.02 1063.26 1644.02 cv
1063.25 1644.02 1063.24 1644.03 1063.22 1644.03 cv
1063.28 1644.02 mo
1063.88 1643.94 1064.5 1643.87 1065.12 1643.82 cv
1065.12 1643.82 li
1064.5 1643.87 1063.88 1643.94 1063.28 1644.02 cv
0 0 0 rgb
f
1033.05 1744.47 mo
1029.37 1740.2 1027 1734.31 1025.9 1728.56 cv
1025.9 1728.56 1025.89 1728.55 1025.89 1728.55 cv
1025.88 1728.5 1025.88 1728.45 1025.87 1728.4 cv
1025.87 1728.4 1025.86 1728.39 1025.86 1728.39 cv
1025.86 1728.37 1025.85 1728.34 1025.85 1728.32 cv
1025.85 1728.32 li
1025.84 1728.29 1025.84 1728.27 1025.84 1728.24 cv
1025.84 1728.24 1025.84 1728.24 1025.83 1728.24 cv
1025.83 1728.21 1025.83 1728.19 1025.82 1728.16 cv
1025.82 1728.16 1025.82 1728.16 1025.82 1728.16 cv
1025.82 1728.13 1025.81 1728.11 1025.81 1728.08 cv
1025.81 1728.08 1025.81 1728.08 1025.81 1728.08 cv
1025.8 1728.06 1025.8 1728.03 1025.79 1728.01 cv
1025.79 1728 1025.79 1728 1025.79 1728 cv
1025.78 1727.95 1025.77 1727.9 1025.77 1727.85 cv
1025.76 1727.85 1025.76 1727.84 1025.76 1727.84 cv
1025.76 1727.81 1025.76 1727.79 1025.75 1727.77 cv
1025.75 1727.77 1025.75 1727.77 1025.75 1727.76 cv
1025.75 1727.74 1025.74 1727.72 1025.74 1727.7 cv
1025.74 1727.69 1025.74 1727.68 1025.73 1727.67 cv
1025.73 1727.66 1025.73 1727.64 1025.73 1727.62 cv
1025.72 1727.62 1025.72 1727.61 1025.72 1727.6 cv
1025.72 1727.58 1025.72 1727.56 1025.71 1727.54 cv
1025.71 1727.53 1025.71 1727.52 1025.71 1727.51 cv
1025.7 1727.5 1025.7 1727.48 1025.7 1727.46 cv
1025.7 1727.46 1025.7 1727.45 1025.7 1727.44 cv
1025.69 1727.42 1025.69 1727.4 1025.69 1727.38 cv
1025.68 1727.37 1025.68 1727.36 1025.68 1727.35 cv
1025.68 1727.34 1025.68 1727.33 1025.67 1727.31 cv
1025.67 1727.3 1025.67 1727.29 1025.67 1727.28 cv
1025.67 1727.27 1025.67 1727.25 1025.66 1727.24 cv
1025.66 1727.22 1025.66 1727.21 1025.65 1727.19 cv
1025.65 1727.18 1025.65 1727.16 1025.65 1727.15 cv
1025.65 1727.14 1025.65 1727.13 1025.64 1727.12 cv
1025.64 1727.11 1025.64 1727.1 1025.64 1727.09 cv
1025.64 1727.07 1025.63 1727.05 1025.63 1727.02 cv
1025.63 1727.01 1025.63 1727.01 1025.63 1727 cv
1025.62 1726.98 1025.62 1726.97 1025.62 1726.96 cv
1025.62 1726.95 1025.62 1726.94 1025.61 1726.93 cv
1025.61 1726.91 1025.61 1726.89 1025.6 1726.87 cv
1025.6 1726.86 1025.6 1726.84 1025.6 1726.83 cv
1025.6 1726.82 1025.6 1726.81 1025.59 1726.8 cv
1025.59 1726.79 1025.59 1726.78 1025.59 1726.77 cv
1025.58 1726.73 1025.58 1726.68 1025.57 1726.63 cv
1025.57 1726.63 1025.57 1726.62 1025.57 1726.62 cv
1025.56 1726.57 1025.55 1726.52 1025.55 1726.47 cv
1025.55 1726.47 1025.55 1726.46 1025.55 1726.46 cv
1025.54 1726.44 1025.54 1726.42 1025.54 1726.41 cv
1025.54 1726.41 1025.54 1726.41 1025.54 1726.41 cv
1025.53 1726.37 1025.53 1726.34 1025.52 1726.31 cv
1025.52 1726.3 1025.52 1726.3 1025.52 1726.3 cv
1025.52 1726.25 1025.51 1726.2 1025.5 1726.14 cv
1025.5 1726.14 1025.5 1726.14 1025.5 1726.14 cv
1025.5 1726.12 1025.5 1726.11 1025.5 1726.09 cv
1025.49 1726.09 1025.49 1726.08 1025.49 1726.08 cv
1025.49 1726.03 1025.48 1725.98 1025.47 1725.93 cv
1025.47 1725.92 1025.47 1725.92 1025.47 1725.92 cv
1025.47 1725.87 1025.46 1725.82 1025.45 1725.77 cv
1025.45 1725.76 1025.45 1725.76 1025.45 1725.76 cv
1025.45 1725.71 1025.44 1725.66 1025.43 1725.61 cv
1025.43 1725.6 1025.43 1725.6 1025.43 1725.6 cv
1025.43 1725.58 1025.43 1725.57 1025.43 1725.55 cv
1025.43 1725.55 1025.43 1725.55 1025.43 1725.54 cv
1025.42 1725.51 1025.42 1725.48 1025.42 1725.45 cv
1025.42 1725.44 1025.42 1725.44 1025.41 1725.44 cv
1025.41 1725.37 1025.4 1725.3 1025.39 1725.23 cv
1025.39 1725.23 1025.39 1725.23 1025.39 1725.22 cv
1025.38 1725.12 1025.37 1725.01 1025.36 1724.91 cv
1025.36 1724.91 1025.36 1724.91 1025.36 1724.9 cv
1025.21 1723.42 1025.14 1721.96 1025.16 1720.58 cv
1025.16 1720.58 1025.16 1720.58 1025.16 1720.57 cv
1025.17 1720.05 1025.19 1719.54 1025.23 1719.03 cv
1025.23 1719.03 1025.23 1719.03 1025.23 1719.02 cv
1025.23 1718.98 1025.23 1718.93 1025.24 1718.89 cv
1025.24 1718.89 1025.24 1718.89 1025.24 1718.89 cv
1025.24 1718.87 1025.24 1718.85 1025.24 1718.84 cv
1025.24 1718.84 1025.24 1718.84 1025.24 1718.83 cv
1025.24 1718.81 1025.24 1718.78 1025.25 1718.75 cv
1025.25 1718.75 1025.25 1718.74 1025.25 1718.74 cv
1025.25 1718.73 1025.25 1718.71 1025.25 1718.7 cv
1025.25 1718.7 1025.25 1718.7 1025.25 1718.69 cv
1025.25 1718.67 1025.25 1718.64 1025.26 1718.61 cv
1025.26 1718.61 1025.26 1718.61 1025.26 1718.6 cv
1025.26 1718.59 1025.26 1718.58 1025.26 1718.56 cv
1025.26 1718.56 1025.26 1718.55 1025.26 1718.54 cv
1025.26 1718.52 1025.27 1718.5 1025.27 1718.48 cv
1025.27 1718.48 1025.27 1718.47 1025.27 1718.46 cv
1025.27 1718.45 1025.27 1718.44 1025.27 1718.43 cv
1025.27 1718.42 1025.27 1718.41 1025.27 1718.41 cv
1025.28 1718.37 1025.28 1718.33 1025.28 1718.29 cv
1025.28 1718.28 1025.29 1718.28 1025.29 1718.27 cv
1025.29 1718.26 1025.29 1718.24 1025.29 1718.23 cv
1025.29 1718.23 1025.29 1718.22 1025.29 1718.22 cv
1025.29 1718.19 1025.3 1718.17 1025.3 1718.15 cv
1025.3 1718.14 1025.3 1718.14 1025.3 1718.13 cv
1025.3 1718.12 1025.3 1718.11 1025.3 1718.1 cv
1025.3 1718.09 1025.3 1718.08 1025.31 1718.07 cv
1025.31 1718.06 1025.31 1718.04 1025.31 1718.03 cv
1025.31 1718.02 1025.31 1718 1025.31 1717.99 cv
1025.31 1717.98 1025.32 1717.97 1025.32 1717.97 cv
1025.32 1717.96 1025.32 1717.95 1025.32 1717.94 cv
1025.32 1717.92 1025.32 1717.91 1025.32 1717.89 cv
1025.33 1717.88 1025.33 1717.87 1025.33 1717.86 cv
1025.33 1717.85 1025.33 1717.84 1025.33 1717.83 cv
1025.33 1717.82 1025.33 1717.81 1025.33 1717.8 cv
1025.34 1717.79 1025.34 1717.78 1025.34 1717.77 cv
1025.34 1717.75 1025.34 1717.74 1025.34 1717.72 cv
1025.34 1717.72 1025.34 1717.71 1025.35 1717.7 cv
1025.35 1717.69 1025.35 1717.68 1025.35 1717.67 cv
1025.35 1717.66 1025.35 1717.65 1025.35 1717.64 cv
1025.35 1717.63 1025.36 1717.61 1025.36 1717.59 cv
1025.36 1717.59 1025.36 1717.58 1025.36 1717.57 cv
1025.36 1717.56 1025.36 1717.55 1025.37 1717.53 cv
1025.37 1717.53 1025.37 1717.52 1025.37 1717.51 cv
1025.37 1717.49 1025.37 1717.47 1025.37 1717.46 cv
1025.38 1717.45 1025.38 1717.45 1025.38 1717.44 cv
1025.38 1717.43 1025.38 1717.42 1025.38 1717.4 cv
1025.38 1717.4 1025.38 1717.39 1025.38 1717.38 cv
1025.39 1717.36 1025.39 1717.35 1025.39 1717.33 cv
1025.39 1717.33 1025.39 1717.32 1025.39 1717.32 cv
1025.39 1717.3 1025.4 1717.29 1025.4 1717.27 cv
1025.4 1717.26 1025.4 1717.26 1025.4 1717.25 cv
1025.4 1717.23 1025.41 1717.22 1025.41 1717.2 cv
1025.41 1717.2 1025.41 1717.2 1025.41 1717.2 cv
1025.41 1717.18 1025.41 1717.16 1025.42 1717.14 cv
1025.42 1717.13 1025.42 1717.13 1025.42 1717.12 cv
1025.42 1717.11 1025.42 1717.09 1025.43 1717.08 cv
1025.43 1717.07 1025.43 1717.07 1025.43 1717.06 cv
1025.43 1717.04 1025.43 1717.03 1025.44 1717.01 cv
1025.44 1717 1025.44 1717 1025.44 1717 cv
1025.44 1716.98 1025.44 1716.96 1025.45 1716.94 cv
1025.45 1716.94 1025.45 1716.94 1025.45 1716.94 cv
1025.45 1716.92 1025.45 1716.9 1025.45 1716.88 cv
1025.45 1716.88 1025.46 1716.87 1025.46 1716.87 cv
1025.46 1716.85 1025.46 1716.84 1025.46 1716.82 cv
1025.46 1716.82 1025.46 1716.81 1025.47 1716.81 cv
1025.47 1716.79 1025.47 1716.77 1025.47 1716.75 cv
1025.47 1716.75 li
1025.48 1716.73 1025.48 1716.71 1025.48 1716.69 cv
1025.48 1716.69 1025.48 1716.69 1025.49 1716.68 cv
1025.49 1716.64 1025.5 1716.6 1025.5 1716.56 cv
1025.5 1716.56 1025.5 1716.56 1025.51 1716.56 cv
1025.52 1716.5 1025.53 1716.44 1025.54 1716.38 cv
1025.54 1716.38 1025.54 1716.38 1025.54 1716.37 cv
1025.54 1716.33 1025.55 1716.29 1025.56 1716.25 cv
1025.56 1716.25 1025.56 1716.25 1025.56 1716.25 cv
1025.57 1716.21 1025.57 1716.17 1025.58 1716.13 cv
1025.58 1716.13 li
1025.59 1716.09 1025.6 1716.05 1025.6 1716.01 cv
1025.6 1716.01 li
1026.05 1713.67 1026.84 1711.77 1027.95 1710.55 cv
1027.95 1710.55 1027.95 1710.55 1027.95 1710.55 cv
1027.96 1710.54 1027.97 1710.53 1027.98 1710.52 cv
1027.98 1710.52 1027.98 1710.52 1027.98 1710.52 cv
1027.99 1710.51 1028 1710.5 1028.01 1710.49 cv
1028.01 1710.49 li
1028.01 1710.48 1028.02 1710.47 1028.03 1710.46 cv
1028.03 1710.46 1028.04 1710.46 1028.04 1710.46 cv
1028.05 1710.44 1028.07 1710.42 1028.09 1710.4 cv
1028.09 1710.4 1028.09 1710.4 1028.1 1710.39 cv
1028.11 1710.39 1028.11 1710.38 1028.12 1710.37 cv
1034.27 1704.22 1047.51 1663.13 1050.76 1650.54 cv
1051.36 1648.2 1053.16 1646.38 1055.47 1645.7 cv
1055.48 1645.69 1055.5 1645.69 1055.51 1645.68 cv
1055.52 1645.68 1055.53 1645.68 1055.54 1645.67 cv
1055.55 1645.67 1055.55 1645.67 1055.56 1645.67 cv
1055.99 1645.54 1056.45 1645.41 1056.94 1645.28 cv
1056.94 1645.28 1056.94 1645.28 1056.94 1645.28 cv
1056.96 1645.28 1056.97 1645.28 1056.98 1645.27 cv
1056.98 1645.27 1056.98 1645.27 1056.98 1645.27 cv
1057.01 1645.27 1057.03 1645.26 1057.06 1645.25 cv
1057.06 1645.25 1057.07 1645.25 1057.08 1645.25 cv
1057.09 1645.24 1057.1 1645.24 1057.1 1645.24 cv
1057.12 1645.24 1057.14 1645.23 1057.16 1645.23 cv
1057.16 1645.22 1057.17 1645.22 1057.17 1645.22 cv
1058.93 1644.77 1061 1644.32 1063.22 1644.03 cv
1063.24 1644.03 1063.25 1644.02 1063.26 1644.02 cv
1063.27 1644.02 1063.27 1644.02 1063.28 1644.02 cv
1063.88 1643.94 1064.5 1643.87 1065.12 1643.82 cv
1068.65 1652.5 1072.72 1664.89 1072.01 1674.44 cv
1070.84 1690.3 1051.08 1738.22 1033.05 1744.47 cv
.580392 .580392 .701961 rgb
f
958.039 1821.9 mo
957.362 1821.89 957.835 1827.31 957.164 1827.16 cv
949.242 1825.38 935.18 1811.83 924.203 1797.84 cv
915.116 1786.26 904.493 1766.78 905.494 1739.76 cv
906.437 1714.32 920.083 1697.38 931.366 1687.66 cv
945.174 1675.75 960.201 1670.32 968.318 1670.32 cv
969.792 1670.32 971.104 1670.5 972.218 1670.85 cv
977.282 1672.43 983.22 1675.43 989.506 1678.6 cv
997.542 1682.65 1005.85 1686.84 1012.21 1687.96 cv
1013.52 1688.2 1014.97 1688.31 1016.63 1688.31 cv
1019.78 1688.31 1023.12 1687.9 1026.65 1687.47 cv
1030.23 1687.04 1033.93 1686.59 1037.49 1686.59 cv
1043.25 1686.59 1047.61 1687.77 1051.21 1690.3 cv
1055.25 1693.14 1057.21 1697.82 1056.75 1703.49 cv
1055.81 1714.94 1045.53 1727.58 1031.74 1734.23 cv
1027.43 1736.32 1022.42 1737.37 1016.87 1737.37 cv
1006.87 1737.37 996.61 1733.97 988.986 1730.66 cv
989.155 1731.05 989.326 1731.46 989.5 1731.87 cv
995.908 1747.18 984.457 1768.49 982.236 1772.38 cv
981.782 1775.04 979.935 1785.34 976.782 1795.8 cv
971.492 1813.36 965.361 1821.9 958.042 1821.9 cv
958.039 1821.9 li
cp
0 0 0 rgb
f
994.424 1773.84 mo
994.424 1773.84 994.793 1747.22 986.296 1733.21 cv
979.459 1721.95 978.914 1721.61 978.914 1721.61 cv
978.914 1721.61 1009.85 1740.95 1030.23 1731.11 cv
1050.62 1721.26 1059.1 1700.1 1049.21 1693.14 cv
1039.33 1686.19 1023.55 1693.49 1011.6 1691.39 cv
999.652 1689.28 982.429 1677.68 971.181 1674.16 cv
959.933 1670.65 910.723 1692.44 908.966 1739.89 cv
907.208 1787.35 946.615 1821.91 960.674 1825.07 cv
974.734 1828.24 994.424 1773.84 994.424 1773.84 cv
cp
.737255 .737255 .819608 rgb
f
1012.68 1734.49 mo
1021.22 1759.07 1020.64 1783.75 999.652 1799.3 cv
1018.91 1782.96 1018.3 1759.49 1008.52 1736.17 cv
1012.68 1734.49 li
cp
0 0 0 rgb
f
938.479 1577.15 mo
950.406 1580.75 966.348 1577.71 971.803 1566.08 cv
973.508 1572.05 li
965.282 1584.7 951.184 1582.67 938.479 1577.15 cv
cp
f
954.801 1634.79 mo
962.405 1632.76 977.063 1627.73 982.182 1621.75 cv
985.354 1624.92 li
978.536 1630.81 963.368 1633.77 954.801 1634.79 cv
cp
f
1038.55 1562.62 mo
1047.67 1575.96 1066.01 1576.46 1063.73 1576.18 cv
1063.84 1576.18 1067.43 1576.3 1067.21 1576.29 cv
1068.75 1576.28 1070.3 1576.13 1071.83 1576.06 cv
1072.01 1580.55 li
1070.33 1580.43 1068.65 1580.39 1066.98 1580.21 cv
1053.35 1578.75 1042.95 1571.01 1038.55 1562.62 cv
cp
f
1018.88 1617.92 mo
1035.05 1634.39 1055.75 1628.67 1055.91 1628.68 cv
1056.64 1633.11 li
1040.05 1634.34 1026.96 1628.17 1018.88 1617.92 cv
cp
f
968.491 1695.25 mo
970.222 1706.73 975.953 1721.09 987.026 1726.04 cv
984.999 1730.04 li
973.538 1723.26 968.919 1707.93 968.491 1695.25 cv
cp
f
938.479 1726.17 mo
938.479 1726.17 924.407 1748.6 933.942 1777.21 cv
943.478 1805.81 991.748 1808.06 994.536 1791.79 cv
997.323 1775.53 975.364 1774.29 970.078 1750.79 cv
964.792 1727.29 946.076 1718.57 938.479 1726.17 cv
cp
.788235 .788235 .854902 rgb
f
977.758 1695.25 mo
977.758 1695.25 974.286 1711.53 994.78 1717.45 cv
1015.27 1723.36 1047.89 1713.29 1037.76 1703.17 cv
1027.64 1693.05 1024.77 1703.73 1003.47 1699.81 cv
982.18 1695.88 977.758 1689.68 977.758 1695.25 cv
cp
f
909.263 1510.5 mo
909.263 1510.5 903.79 1519.76 906.807 1535.46 cv
909.824 1551.17 930.33 1579.49 945.598 1570.24 cv
960.865 1560.98 953.083 1533.5 945.616 1522.56 cv
938.148 1511.63 918.518 1498.16 909.263 1510.5 cv
cp
f
1048.63 1509.1 mo
1048.63 1509.1 1032.74 1536.92 1038.55 1552.85 cv
1044.36 1568.78 1063.24 1565.19 1069.82 1549.48 cv
1076.41 1533.78 1071.17 1506.23 1048.63 1509.1 cv
cp
f
1325.27 900.548 mo
1315.69 886.38 1312.16 853.073 1323.17 823.969 cv
1331.41 802.161 1346.01 787.979 1365.39 782.953 cv
1403.76 773.008 1435.61 799.171 1441.6 833.407 cv
1454.42 906.688 1346.51 931.972 1325.27 900.548 cv
0 0 0 rgb
f
1366.54 787.394 mo
1316.82 800.284 1313.93 875.591 1329.07 897.979 cv
1340.53 914.935 1375.15 909.066 1391.06 903.326 cv
1474.36 873.267 1434.47 769.785 1366.54 787.394 cv
.737255 .737255 .819608 rgb
f
1332.46 814.798 mo
1332.46 814.795 1332.46 814.792 1332.46 814.788 cv
1332.46 814.791 1332.46 814.796 1332.46 814.798 cv
1332.59 814.558 mo
1332.6 814.549 1332.6 814.539 1332.61 814.531 cv
1332.6 814.541 1332.6 814.548 1332.59 814.558 cv
1332.73 814.322 mo
1332.73 814.307 1332.74 814.291 1332.75 814.275 cv
1332.74 814.29 1332.73 814.307 1332.73 814.322 cv
1332.78 814.225 mo
1332.79 814.207 1332.8 814.187 1332.81 814.169 cv
1332.8 814.187 1332.79 814.207 1332.78 814.225 cv
1332.86 814.084 mo
1332.87 814.067 1332.88 814.048 1332.89 814.031 cv
1332.88 814.048 1332.87 814.067 1332.86 814.084 cv
1332.92 813.983 mo
1332.93 813.964 1332.94 813.942 1332.95 813.924 cv
1332.94 813.943 1332.93 813.963 1332.92 813.983 cv
1332.99 813.861 mo
1333 813.837 1333.02 813.814 1333.03 813.79 cv
1333.02 813.812 1333 813.839 1332.99 813.861 cv
1333.06 813.743 mo
1333.07 813.722 1333.08 813.703 1333.09 813.683 cv
1333.08 813.703 1333.07 813.723 1333.06 813.743 cv
1333.12 813.638 mo
1333.14 813.607 1333.16 813.576 1333.17 813.546 cv
1333.16 813.575 1333.14 813.609 1333.12 813.638 cv
1333.2 813.506 mo
1333.21 813.484 1333.22 813.463 1333.24 813.441 cv
1333.22 813.463 1333.21 813.484 1333.2 813.506 cv
1333.26 813.401 mo
1333.28 813.366 1333.3 813.337 1333.32 813.302 cv
1333.3 813.334 1333.28 813.369 1333.26 813.401 cv
1333.33 813.28 mo
1333.35 813.253 1333.36 813.227 1333.38 813.2 cv
1333.36 813.227 1333.35 813.253 1333.33 813.28 cv
1333.4 813.16 mo
1333.41 813.153 1333.41 813.148 1333.41 813.142 cv
1333.41 813.142 li
1333.41 813.147 1333.41 813.155 1333.4 813.16 cv
0 0 0 rgb
f
1326.24 892.719 mo
1318.52 874.855 1318.36 839.937 1332.46 814.798 cv
1332.46 814.796 1332.46 814.791 1332.46 814.788 cv
1332.51 814.71 1332.55 814.636 1332.59 814.558 cv
1332.6 814.548 1332.6 814.541 1332.61 814.531 cv
1332.65 814.462 1332.69 814.391 1332.73 814.322 cv
1332.73 814.307 1332.74 814.29 1332.75 814.275 cv
1332.76 814.258 1332.77 814.242 1332.78 814.225 cv
1332.79 814.207 1332.8 814.187 1332.81 814.169 cv
1332.83 814.14 1332.84 814.113 1332.86 814.084 cv
1332.87 814.067 1332.88 814.048 1332.89 814.031 cv
1332.9 814.014 1332.91 814 1332.92 813.983 cv
1332.93 813.963 1332.94 813.943 1332.95 813.924 cv
1332.97 813.903 1332.98 813.882 1332.99 813.861 cv
1333 813.839 1333.02 813.812 1333.03 813.79 cv
1333.04 813.774 1333.05 813.758 1333.06 813.743 cv
1333.07 813.723 1333.08 813.703 1333.09 813.683 cv
1333.1 813.669 1333.11 813.652 1333.12 813.638 cv
1333.14 813.609 1333.16 813.575 1333.17 813.546 cv
1333.18 813.532 1333.19 813.52 1333.2 813.506 cv
1333.21 813.484 1333.22 813.463 1333.24 813.441 cv
1333.24 813.429 1333.25 813.413 1333.26 813.401 cv
1333.28 813.369 1333.3 813.334 1333.32 813.302 cv
1333.32 813.296 1333.33 813.287 1333.33 813.28 cv
1333.35 813.253 1333.36 813.227 1333.38 813.2 cv
1333.39 813.188 1333.4 813.172 1333.4 813.16 cv
1333.41 813.155 1333.41 813.147 1333.41 813.142 cv
1336.35 823.006 1340.22 834.183 1344.97 844.243 cv
1342.4 846.229 1339.51 848.728 1336.37 851.866 cv
1329.43 858.802 1325.46 875.645 1326.24 892.719 cv
.580392 .580392 .701961 rgb
f
1452.38 955.745 mo
1446.67 955.745 1441.13 954.779 1435.89 952.874 cv
1420.69 947.345 1409.06 948.597 1397.67 949.849 cv
1384.27 951.323 1371.2 952.797 1353.01 943.213 cv
1339.26 935.961 1330.07 921.293 1327.14 901.91 cv
1324.13 882.033 1328.18 860.051 1336.37 851.866 cv
1344.93 843.307 1351.65 839.495 1355.18 837.906 cv
1358.41 825.305 1374.61 767.054 1405.2 736.462 cv
1427.34 714.328 1452.58 708.009 1472.2 712.003 cv
1488.73 693.894 1521.02 679.116 1539.99 693.701 cv
1550.45 689.771 1562.94 692.316 1573.2 696.824 cv
1578.44 699.124 1582.66 703.918 1584.79 709.976 cv
1587.62 718.004 1586.59 727.388 1581.89 736.396 cv
1577.77 744.314 1557 757.298 1550.17 761.043 cv
1544.39 764.215 1526.37 798.157 1518.55 811.598 cv
1501.95 840.109 1518.7 862.36 1525.62 869.74 cv
1541.87 859.157 1566.16 861.86 1584.81 866.995 cv
1632.54 880.139 1609.73 950.014 1589.86 950.014 cv
1582.83 950.014 1577.74 945.972 1572.35 941.693 cv
1527.02 905.711 1495.79 955.745 1452.38 955.745 cv
0 0 0 rgb
f
1473.83 717.127 mo
1473.83 717.127 1441.61 706.544 1408.45 739.706 cv
1375.29 772.869 1359.06 841.312 1359.06 841.312 cv
1359.06 841.312 1351.22 843.507 1339.61 855.11 cv
1328.01 866.714 1323.03 922.22 1355.15 939.154 cv
1372.23 948.156 1384.66 946.702 1397.74 945.248 cv
1409.26 943.967 1421.3 942.686 1437.46 948.563 cv
1471.95 961.106 1505.19 924.102 1537.81 924.102 cv
1570.42 924.102 1576.07 945.426 1589.86 945.426 cv
1603.66 945.426 1626.87 883.334 1583.59 871.417 cv
1540.32 859.501 1525.26 875.808 1525.26 875.808 cv
1525.26 875.808 1492.32 847.54 1514.58 809.291 cv
1519.33 801.136 1539.07 761.379 1547.02 757.02 cv
1553.35 753.549 1574.29 741.065 1577.83 734.275 cv
1586.09 718.41 1580.11 704.869 1571.36 701.023 cv
1550.3 691.771 1539.18 699.142 1539.18 699.142 cv
1539.18 699.142 1529.57 687.197 1506.01 695.136 cv
1485.64 702 1473.83 717.127 1473.83 717.127 cv
.737255 .737255 .819608 rgb
f
1359.06 841.312 mo
1359.06 841.312 1359.06 841.312 1359.06 841.311 cv
1359.06 841.312 1359.06 841.312 1359.06 841.312 cv
1359.06 841.311 mo
1359.06 841.31 1359.06 841.308 1359.06 841.305 cv
1359.06 841.308 1359.06 841.31 1359.06 841.311 cv
1359.06 841.297 mo
1359.06 841.297 1359.06 841.297 1359.06 841.297 cv
1359.06 841.297 1359.06 841.297 1359.06 841.297 cv
1359.06 841.293 mo
1359.06 841.286 1359.06 841.277 1359.07 841.266 cv
1359.06 841.277 1359.06 841.286 1359.06 841.293 cv
1359.07 841.264 mo
1359.07 841.257 1359.07 841.25 1359.07 841.242 cv
1359.07 841.25 1359.07 841.257 1359.07 841.264 cv
1359.07 841.237 mo
1359.08 841.232 1359.08 841.228 1359.08 841.223 cv
1359.08 841.228 1359.08 841.232 1359.07 841.237 cv
1359.08 841.218 mo
1359.08 841.215 1359.08 841.213 1359.08 841.21 cv
1359.08 841.213 1359.08 841.215 1359.08 841.218 cv
1359.08 841.208 mo
1359.09 841.186 1359.09 841.161 1359.1 841.133 cv
1359.09 841.161 1359.09 841.186 1359.08 841.208 cv
1359.1 841.12 mo
1359.12 841.028 1359.16 840.903 1359.19 840.747 cv
1359.16 840.903 1359.12 841.028 1359.1 841.12 cv
1359.2 840.739 mo
1360.8 834.256 1376.23 774.305 1406.05 742.196 cv
1406.05 742.198 1406.05 742.199 1406.05 742.201 cv
1376.23 774.312 1360.8 834.257 1359.2 840.739 cv
0 0 0 rgb
f
1452.38 951.157 mo
1447.43 951.157 1442.45 950.38 1437.46 948.563 cv
1437.46 948.563 li
1428.13 945.172 1420.18 944.164 1412.91 944.164 cv
1407.58 944.164 1402.61 944.706 1397.74 945.248 cv
1392.86 945.79 1388.07 946.332 1383.1 946.332 cv
1374.74 946.332 1365.86 944.799 1355.15 939.154 cv
1337.05 929.612 1330.73 907.823 1330.74 888.543 cv
1330.74 873.607 1334.55 860.175 1339.61 855.11 cv
1351.22 843.507 1359.06 841.312 1359.06 841.312 cv
1359.06 841.312 li
1359.06 841.312 1359.06 841.312 1359.06 841.311 cv
1359.06 841.311 1359.06 841.311 1359.06 841.311 cv
1359.06 841.31 1359.06 841.308 1359.06 841.305 cv
1359.06 841.303 1359.06 841.3 1359.06 841.297 cv
1359.06 841.297 1359.06 841.297 1359.06 841.297 cv
1359.06 841.295 1359.06 841.294 1359.06 841.293 cv
1359.06 841.286 1359.06 841.277 1359.07 841.266 cv
1359.07 841.265 1359.07 841.264 1359.07 841.264 cv
1359.07 841.257 1359.07 841.25 1359.07 841.242 cv
1359.07 841.24 1359.07 841.238 1359.07 841.237 cv
1359.08 841.232 1359.08 841.228 1359.08 841.223 cv
1359.08 841.221 1359.08 841.219 1359.08 841.218 cv
1359.08 841.215 1359.08 841.213 1359.08 841.21 cv
1359.08 841.209 1359.08 841.208 1359.08 841.208 cv
1359.09 841.186 1359.09 841.161 1359.1 841.133 cv
1359.1 841.129 1359.1 841.125 1359.1 841.12 cv
1359.12 841.028 1359.16 840.903 1359.19 840.747 cv
1359.19 840.744 1359.2 840.741 1359.2 840.739 cv
1360.8 834.257 1376.23 774.312 1406.05 742.201 cv
1388.25 770.687 1366.75 812.34 1371.25 841.538 cv
1371.25 841.538 1337.71 869.113 1348.89 897.433 cv
1360.07 925.755 1426.03 926.301 1426.03 926.301 cv
1426.03 926.301 1438.22 940.111 1471.14 940.111 cv
1478.07 940.111 1485.93 939.497 1494.78 938.012 cv
1480.82 944.647 1466.7 951.157 1452.38 951.157 cv
.580392 .580392 .701961 rgb
f
1474.4 716.44 mo
1474.37 715.876 1474.62 715.524 1475.31 715.407 cv
1474.94 715.819 1474.63 716.167 1474.4 716.44 cv
0 0 0 rgb
f
1423.79 809.291 mo
1423.79 809.291 1435.4 797.706 1436.35 785.392 cv
1436.83 779.207 1436.7 763.495 1436.7 763.495 cv
1450.5 760.571 1470.81 746.285 1476.01 735.321 cv
1480.41 726.044 1474.53 719.021 1474.4 716.44 cv
1474.63 716.167 1474.94 715.819 1475.31 715.407 cv
1475.31 715.407 1475.31 715.407 1475.31 715.407 cv
1475.59 715.36 1475.87 715.337 1476.16 715.337 cv
1482.73 715.337 1491.6 727.334 1485.38 741.341 cv
1483.47 745.628 1479.08 754.235 1464.55 765.042 cv
1460.78 767.842 1449.79 772.631 1449.79 772.631 cv
1449.79 772.631 1449.24 785.609 1446.53 790.295 cv
1442.02 798.107 1423.79 809.291 1423.79 809.291 cv
.580392 .580392 .701961 rgb
f
1541.18 698.16 mo
1541.11 697.589 1541.06 697.256 1541.06 697.256 cv
1541.69 697.332 1542.3 697.434 1542.88 697.56 cv
1542.23 697.76 1541.66 697.966 1541.18 698.16 cv
0 0 0 rgb
f
1480.7 814.449 mo
1480.7 814.449 1492.02 803.126 1495.22 791.897 cv
1497.08 785.388 1497.69 777.027 1499.38 771.234 cv
1499.38 771.234 1514.34 745.507 1514.34 740.29 cv
1514.34 740.29 1539.55 733.932 1542.06 711.713 cv
1542.42 708.525 1541.51 700.802 1541.18 698.16 cv
1541.66 697.966 1542.23 697.76 1542.88 697.56 cv
1560.03 701.256 1558.73 725.579 1550.09 734.217 cv
1536.32 747.995 1525.15 750.986 1525.15 750.986 cv
1525.15 750.986 1524.08 757.556 1519.89 765.49 cv
1516.04 772.783 1507.61 780.819 1507.61 780.819 cv
1507.61 780.819 1500.1 798.633 1480.7 814.449 cv
.580392 .580392 .701961 rgb
f
1373.54 864.222 mo
1372.38 864.467 1356.77 874.004 1367.67 892.45 cv
1378.57 910.896 1408.47 926.561 1417.7 911.741 cv
1426.92 896.921 1400.09 858.632 1373.54 864.222 cv
cp
.788235 .788235 .854902 rgb
f
1456.21 904.467 mo
1451.74 907.947 1445.64 921.609 1459.8 926.826 cv
1473.96 932.042 1520.88 923.845 1514.56 905.958 cv
1508.25 888.071 1467.72 895.499 1456.21 904.467 cv
cp
f
1545.14 884.345 mo
1545.14 884.345 1577.36 879.826 1588.18 890.649 cv
1599 901.471 1601.49 927.944 1585.89 924.031 cv
1570.29 920.119 1533.12 896.362 1545.14 884.345 cv
cp
f
1435.47 902.014 mo
1436.51 887.392 1427 875.781 1413.8 869.305 cv
1423.01 874.426 1432.21 884.041 1433.42 894.558 cv
1433.85 898.131 1433.56 901.761 1432.76 905.319 cv
1429.35 919.886 1421.55 932.168 1413.4 944.707 cv
1411.62 947.26 1415.57 949.866 1417.22 947.241 cv
1424.52 935.636 1433.28 918.175 1435.19 904.637 cv
1439.53 896.024 1460.04 893.038 1469.63 892.431 cv
1459.93 892.711 1441.97 894.827 1435.47 902.014 cv
cp
0 0 0 rgb
f
1471.12 714.12 mo
1470.26 715.92 1472.56 716.581 1472.67 716.685 cv
1475.44 718.004 1476.32 722.259 1476.29 725.295 cv
1476.13 741.313 1467.52 746.007 1452.13 754.002 cv
1441.44 759.579 1435.31 761.516 1434.13 762.006 cv
1434.2 762.918 1437.17 776.434 1435.23 787.9 cv
1434.46 791.781 1432.79 795.562 1430.79 799.126 cv
1428.78 802.694 1426.43 806.108 1423.79 809.291 cv
1437.51 795.581 1440.54 784.308 1439.13 765.049 cv
1449.51 761.171 1460.26 755.469 1466.31 751.291 cv
1476.23 744.434 1481.84 733.601 1479.88 721.931 cv
1479.28 718.357 1472.29 711.678 1471.12 714.12 cv
cp
f
1539.41 693.191 mo
1536.94 691.424 1534.26 695.158 1536.73 696.928 cv
1543.36 702.372 1540.8 713.126 1535.14 720.491 cv
1527.2 730.936 1512.94 738.559 1512.35 738.996 cv
1512.3 739.125 1510.51 747.465 1505.61 756.414 cv
1500.44 765.875 1495.85 769.029 1494.03 770.996 cv
1494.01 781.055 1497.39 794.934 1480.7 814.449 cv
1494.86 800.729 1497.67 789.352 1498.6 772.976 cv
1507.21 765.237 1513.41 752.928 1516.33 741.969 cv
1528.56 734.622 1543.54 723.037 1545.08 708.794 cv
1545.81 701.437 1542.88 695.677 1539.41 693.191 cv
cp
f
1600.05 641.739 mo
1620.59 655.731 1635.5 679.6 1628.96 703.375 cv
1628.43 705.314 1625.51 704.607 1625.92 702.645 cv
1625.68 698.854 1634.57 671.589 1600.05 641.739 cv
cp
f
1586.63 663.399 mo
1609.99 681.919 1624.59 712.296 1617.04 741.693 cv
1616.44 744.01 1612.95 743.229 1613.4 740.88 cv
1612.58 738.156 1625.4 701.902 1586.63 663.399 cv
cp
f
1445.88 1250.77 mo
1393.91 1249.94 1356.56 1313 1375.88 1355.63 cv
1391.92 1391 1443.44 1445.21 1491.6 1412.04 cv
1514.13 1396.52 1513.14 1351.38 1511.17 1328.86 cv
1508.11 1293.81 1491.12 1252.64 1447.53 1250.82 cv
1446.98 1250.79 1446.43 1250.78 1445.88 1250.77 cv
.737255 .737255 .819608 rgb
f
1459.98 1419.34 mo
1451.02 1419.34 1442.11 1417.03 1433.6 1413.04 cv
1408.43 1383.87 1379.46 1336.73 1385.13 1309.17 cv
1387.26 1298.8 1391.29 1287.4 1396.03 1276.29 cv
1404.62 1267.11 1415.25 1259.96 1427.15 1256.3 cv
1424.48 1269.02 1429.22 1268.52 1419.29 1288.38 cv
1414.59 1297.79 1409.73 1307.51 1412.3 1320.5 cv
1416.19 1340.15 1461.58 1387.06 1490.75 1409.12 cv
1490.47 1409.33 1490.2 1409.52 1489.91 1409.72 cv
1480.17 1416.43 1470.04 1419.34 1459.98 1419.34 cv
.580392 .580392 .701961 rgb
f
1489.91 1409.72 mo
1447.33 1439.05 1397.26 1395.72 1378.56 1354.48 cv
1359.68 1312.84 1397.21 1251.61 1447.41 1253.65 cv
1497.94 1255.77 1506.76 1311.93 1508.26 1329.1 cv
1510.35 1353.05 1510.75 1395.37 1489.91 1409.72 cv
1514.08 1328.62 mo
1510.44 1286.87 1489.33 1248.66 1445.93 1247.93 cv
1445.93 1247.93 li
1392.69 1247.09 1352.66 1311.46 1373.21 1356.77 cv
1387.51 1388.31 1423.26 1425.23 1459.96 1425.23 cv
1471.61 1425.23 1482.78 1421.6 1493.29 1414.35 cv
1516.5 1398.37 1516.28 1353.78 1514.08 1328.62 cv
0 0 0 rgb
f
1488.97 1059.43 mo
1463.61 1053.6 1440.34 1075.05 1444.65 1100.02 cv
1445.76 1106.47 1447.67 1114.05 1450.81 1122.77 cv
1462.92 1156.35 1465.51 1169.79 1450.81 1203.38 cv
1436.12 1236.96 1428.34 1248.72 1428.34 1267.19 cv
1428.34 1285.66 1410.19 1298.26 1414.51 1320.09 cv
1418.83 1341.92 1480.21 1403.21 1506.14 1416.65 cv
1532.07 1430.08 1561.46 1380.54 1585.66 1345.28 cv
1609.87 1310.01 1618.51 1297.42 1623.7 1269.71 cv
1628.88 1242 1591.05 1180.7 1518.77 1190.78 cv
1518.77 1190.78 1534.66 1152.16 1534.66 1113.53 cv
1534.66 1089.24 1513.69 1065.11 1488.97 1059.43 cv
.737255 .737255 .819608 rgb
f
1542.73 1400.27 mo
1540.93 1399.62 1539.12 1398.92 1537.3 1398.15 cv
1539.54 1398.51 1541.77 1398.78 1543.97 1398.95 cv
1543.56 1399.4 1543.15 1399.84 1542.73 1400.27 cv
1454.53 1334.12 mo
1445.93 1323.31 1440.68 1313.58 1440.68 1306.98 cv
1440.68 1283.99 1447.06 1274.43 1458.59 1256.58 cv
1470.12 1238.74 1457.37 1216.14 1496.95 1198.19 cv
1502 1195.9 1508.99 1194.82 1517.16 1194.82 cv
1541.01 1194.82 1574.97 1204.03 1600.31 1219.2 cv
1616.41 1235.57 1624.03 1255.77 1621.49 1269.32 cv
1619.4 1280.47 1616.8 1289.06 1612.78 1297.75 cv
1612.33 1297.51 1611.83 1297.26 1611.27 1297 cv
1611.27 1297 1611.27 1297 1611.27 1296.99 cv
1591.1 1287.53 1495.82 1261.52 1486.92 1259.1 cv
1486.92 1259.1 1486.92 1259.1 1486.92 1259.1 cv
1486.85 1259.08 1486.78 1259.06 1486.72 1259.04 cv
1486.72 1259.04 1486.72 1259.04 1486.72 1259.04 cv
1486.69 1259.03 1486.67 1259.03 1486.64 1259.02 cv
1486.64 1259.02 1486.63 1259.02 1486.63 1259.02 cv
1486.62 1259.01 1486.6 1259.01 1486.59 1259.01 cv
1486.59 1259.01 1486.59 1259.01 1486.58 1259.01 cv
1486.57 1259 1486.57 1259 1486.56 1259 cv
1486.55 1259 1486.55 1259 1486.55 1259 cv
1486.55 1258.99 1486.54 1258.99 1486.54 1258.99 cv
1486.53 1258.99 1486.53 1258.99 1486.53 1258.99 cv
1486.52 1258.99 1486.51 1258.99 1486.51 1258.98 cv
1486.46 1258.97 1486.43 1258.96 1486.39 1258.95 cv
1486.39 1258.95 1486.39 1258.95 1486.39 1258.95 cv
1486.39 1258.95 1486.39 1258.95 1486.38 1258.95 cv
1486.38 1258.95 1486.38 1258.95 1486.38 1258.95 cv
1486.37 1258.95 1486.37 1258.95 1486.37 1258.95 cv
1486.37 1258.95 1486.37 1258.95 1486.36 1258.95 cv
1486.36 1258.95 1486.36 1258.94 1486.36 1258.94 cv
1486.35 1258.94 1486.35 1258.94 1486.34 1258.94 cv
1486.33 1258.94 1486.32 1258.93 1486.31 1258.93 cv
1486.31 1258.93 1486.3 1258.93 1486.3 1258.93 cv
1486.3 1258.93 1486.3 1258.93 1486.3 1258.93 cv
1486.3 1258.93 1486.3 1258.93 1486.3 1258.93 cv
1486.29 1258.93 1486.29 1258.93 1486.29 1258.93 cv
1486.29 1258.93 1486.29 1258.93 1486.29 1258.93 cv
1486.29 1258.92 1486.29 1258.92 1486.28 1258.92 cv
1486.28 1258.92 1486.28 1258.92 1486.28 1258.92 cv
1486.28 1258.92 1486.28 1258.92 1486.28 1258.92 cv
1486.28 1258.92 1486.28 1258.92 1486.28 1258.92 cv
1486.28 1258.92 1486.27 1258.92 1486.27 1258.92 cv
1486.27 1258.92 1486.27 1258.92 1486.27 1258.92 cv
1486.27 1258.92 1486.27 1258.92 1486.27 1258.92 cv
1486.27 1258.92 1486.27 1258.92 1486.27 1258.92 cv
1486.27 1258.92 1486.26 1258.92 1486.26 1258.92 cv
1486.26 1258.92 1486.26 1258.92 1486.26 1258.92 cv
1486.26 1258.92 1486.26 1258.92 1486.26 1258.92 cv
1486.26 1258.92 1486.26 1258.92 1486.26 1258.92 cv
1486.26 1258.92 1486.26 1258.92 1486.26 1258.92 cv
1486.26 1258.92 1486.26 1258.92 1486.26 1258.92 cv
1486.26 1258.92 li
1486.26 1258.92 1486.26 1258.92 1486.26 1258.92 cv
1486.26 1258.92 1486.26 1258.92 1486.26 1258.92 cv
1486.26 1258.92 1486.26 1258.92 1486.25 1258.92 cv
1486.25 1258.92 1486.25 1258.92 1486.25 1258.92 cv
1486.25 1258.92 1486.25 1258.92 1486.25 1258.92 cv
1486.25 1258.92 1486.25 1258.92 1486.25 1258.92 cv
1486.25 1258.92 1486.25 1258.92 1486.25 1258.92 cv
1486.25 1258.92 1486.25 1258.92 1486.25 1258.92 cv
1486.25 1258.92 1486.24 1258.92 1486.24 1258.92 cv
1486.24 1258.93 1486.24 1258.93 1486.24 1258.93 cv
1485.85 1259.12 1479.6 1262.33 1473.45 1268.69 cv
1473.44 1268.69 1473.44 1268.69 1473.44 1268.69 cv
1473.43 1268.71 1473.41 1268.72 1473.4 1268.74 cv
1473.4 1268.74 li
1473.37 1268.77 1473.34 1268.8 1473.32 1268.82 cv
1472.15 1270.04 1470.98 1271.37 1469.86 1272.81 cv
1469.86 1272.81 1469.86 1272.82 1469.86 1272.82 cv
1465.12 1278.94 1461.19 1287.12 1461.19 1297.42 cv
1461.19 1302.68 1463.88 1307.97 1468.51 1313.1 cv
1463.1 1319.44 1457.61 1326.99 1454.53 1334.12 cv
.580392 .580392 .701961 rgb
f
1621.49 1269.32 mo
1616.39 1296.58 1608.17 1308.54 1583.79 1344.07 cv
1562.8 1374.65 1531.95 1427.55 1507.2 1414.72 cv
1481.09 1401.2 1420.78 1340.2 1416.72 1319.68 cv
1414.43 1308.11 1418.75 1299.46 1423.33 1290.29 cv
1439.26 1258.43 1419.92 1276.57 1444.15 1223.63 cv
1465.9 1176.11 1469.24 1167.3 1452.94 1122.05 cv
1450.71 1115.87 1449.12 1110.27 1447.99 1105.26 cv
1441.53 1076.45 1472.11 1052.5 1499.4 1065.42 cv
1518.07 1074.26 1532.42 1093.65 1532.42 1113.53 cv
1532.42 1139.23 1525.06 1169.36 1515.24 1193.48 cv
1519.09 1192.94 li
1587.58 1183.4 1626.8 1240.93 1621.49 1269.32 cv
1602.76 1215.41 mo
1590.57 1203.13 1564.15 1183.62 1522.17 1188.16 cv
1526.01 1177.78 1536.91 1145.49 1536.91 1113.53 cv
1536.91 1091.59 1520.48 1069.05 1497.85 1059.94 cv
1489.5 1056.58 1481.89 1055.63 1475.18 1056.07 cv
1454.18 1057.47 1438.95 1076.21 1441.84 1096.46 cv
1443.24 1106.25 1446.04 1116.11 1448.69 1123.49 cv
1464.57 1167.55 1461.42 1175.17 1440.04 1221.86 cv
1415.78 1274.87 1434.3 1258.35 1419.29 1288.38 cv
1414.59 1297.79 1409.73 1307.51 1412.3 1320.5 cv
1416.93 1343.84 1480.09 1405.63 1505.08 1418.57 cv
1534.61 1433.87 1568.02 1374.93 1587.54 1346.48 cv
1611.63 1311.38 1620.64 1298.25 1625.91 1270.1 cv
1628.82 1254.57 1619.3 1232.09 1602.76 1215.41 cv
0 0 0 rgb
f
1477.77 1306.3 mo
1477.77 1306.3 1454.27 1329.32 1454.27 1344.44 cv
1454.27 1359.55 1536.39 1418.33 1577.88 1388.94 cv
1619.38 1359.55 1602.95 1336.04 1577.88 1326.81 cv
1552.82 1317.57 1477.77 1306.3 1477.77 1306.3 cv
.737255 .737255 .819608 rgb
f
1585.33 1375.58 mo
1555.72 1375.58 1494.66 1355.56 1475.11 1336.57 cv
1470.62 1332.21 1467.79 1327.69 1466.12 1323.27 cv
1467.96 1320.75 1469.87 1318.38 1471.64 1316.28 cv
1491.84 1335.16 1536.92 1351.11 1567.51 1353.67 cv
1570.39 1353.92 1573.12 1354.03 1575.7 1354.03 cv
1586.04 1354.03 1594.1 1352.18 1600.32 1349.16 cv
1602.32 1356.83 1599.47 1365.76 1590.47 1375.35 cv
1588.89 1375.51 1587.17 1375.58 1585.33 1375.58 cv
.580392 .580392 .701961 rgb
f
1576.56 1387.18 mo
1536.57 1415.5 1456.52 1357.77 1456.52 1344.44 cv
1456.52 1331.9 1474.55 1312.75 1478.58 1308.63 cv
1488.13 1310.09 1554.21 1320.42 1577.09 1328.85 cv
1605.5 1339.31 1612.27 1361.89 1576.56 1387.18 cv
1578.68 1324.77 mo
1557.16 1316.83 1499.79 1307.41 1476.98 1303.97 cv
1467.61 1313.22 1452.03 1331.47 1452.03 1344.44 cv
1452.03 1361.75 1536.42 1421.01 1579.21 1390.7 cv
1617.93 1363.28 1610.31 1336.42 1578.68 1324.77 cv
0 0 0 rgb
f
1486.26 1258.92 mo
1486.26 1258.92 1461.19 1271.39 1461.19 1297.42 cv
1461.19 1323.45 1527.03 1350.28 1567.51 1353.67 cv
1629.08 1358.84 1622.15 1306.28 1614.64 1298.98 cv
1607.13 1291.68 1486.26 1258.92 1486.26 1258.92 cv
.737255 .737255 .819608 rgb
f
1611.27 1297 mo
1591.11 1287.54 1495.82 1261.52 1486.92 1259.1 cv
1495.82 1261.52 1591.1 1287.53 1611.27 1296.99 cv
1611.27 1297 1611.27 1297 1611.27 1297 cv
1469.86 1272.82 mo
1469.86 1272.82 1469.86 1272.81 1469.86 1272.81 cv
1470.98 1271.37 1472.15 1270.04 1473.32 1268.82 cv
1472.15 1270.04 1470.98 1271.37 1469.86 1272.82 cv
1473.4 1268.74 mo
1473.4 1268.74 li
1473.4 1268.74 li
1473.44 1268.69 mo
1473.44 1268.69 1473.44 1268.69 1473.45 1268.69 cv
1473.44 1268.69 1473.44 1268.69 1473.44 1268.69 cv
1486.92 1259.1 mo
1486.85 1259.08 1486.78 1259.06 1486.72 1259.04 cv
1486.78 1259.06 1486.85 1259.08 1486.92 1259.1 cv
1486.72 1259.04 mo
1486.69 1259.03 1486.67 1259.03 1486.64 1259.02 cv
1486.67 1259.03 1486.69 1259.03 1486.72 1259.04 cv
1486.63 1259.02 mo
1486.62 1259.01 1486.6 1259.01 1486.59 1259.01 cv
1486.6 1259.01 1486.62 1259.01 1486.63 1259.02 cv
1486.58 1259.01 mo
1486.57 1259 1486.57 1259 1486.56 1259 cv
1486.57 1259 1486.57 1259 1486.58 1259.01 cv
1486.55 1259 mo
1486.55 1258.99 1486.54 1258.99 1486.54 1258.99 cv
1486.54 1258.99 1486.55 1258.99 1486.55 1259 cv
1486.53 1258.99 mo
1486.52 1258.99 1486.51 1258.99 1486.51 1258.98 cv
1486.51 1258.99 1486.52 1258.99 1486.53 1258.99 cv
1486.39 1258.95 mo
1486.39 1258.95 1486.39 1258.95 1486.39 1258.95 cv
1486.39 1258.95 1486.39 1258.95 1486.39 1258.95 cv
1486.38 1258.95 mo
1486.38 1258.95 1486.38 1258.95 1486.38 1258.95 cv
1486.38 1258.95 1486.38 1258.95 1486.38 1258.95 cv
1486.37 1258.95 mo
1486.37 1258.95 1486.37 1258.95 1486.36 1258.95 cv
1486.37 1258.95 1486.37 1258.95 1486.37 1258.95 cv
1486.36 1258.94 mo
1486.35 1258.94 1486.35 1258.94 1486.34 1258.94 cv
1486.35 1258.94 1486.35 1258.94 1486.36 1258.94 cv
1486.31 1258.93 mo
1486.31 1258.93 1486.3 1258.93 1486.3 1258.93 cv
1486.3 1258.93 1486.31 1258.93 1486.31 1258.93 cv
1486.3 1258.93 mo
1486.3 1258.93 1486.3 1258.93 1486.3 1258.93 cv
1486.3 1258.93 1486.3 1258.93 1486.3 1258.93 cv
1486.29 1258.93 mo
1486.29 1258.93 1486.29 1258.93 1486.29 1258.93 cv
1486.29 1258.93 1486.29 1258.93 1486.29 1258.93 cv
1486.24 1258.93 mo
1486.24 1258.93 1486.24 1258.93 1486.24 1258.92 cv
1486.24 1258.93 1486.24 1258.93 1486.24 1258.93 cv
1486.28 1258.92 mo
1486.28 1258.92 1486.28 1258.92 1486.28 1258.92 cv
1486.28 1258.92 1486.28 1258.92 1486.28 1258.92 cv
1486.28 1258.92 mo
1486.28 1258.92 1486.28 1258.92 1486.28 1258.92 cv
1486.28 1258.92 1486.28 1258.92 1486.28 1258.92 cv
1486.27 1258.92 mo
1486.27 1258.92 1486.27 1258.92 1486.27 1258.92 cv
1486.27 1258.92 1486.27 1258.92 1486.27 1258.92 cv
1486.27 1258.92 mo
1486.27 1258.92 1486.27 1258.92 1486.27 1258.92 cv
1486.27 1258.92 1486.27 1258.92 1486.27 1258.92 cv
1486.25 1258.92 mo
1486.25 1258.92 1486.25 1258.92 1486.25 1258.92 cv
1486.25 1258.92 1486.25 1258.92 1486.25 1258.92 cv
1486.26 1258.92 mo
1486.26 1258.92 1486.26 1258.92 1486.26 1258.92 cv
1486.26 1258.92 1486.26 1258.92 1486.26 1258.92 cv
1486.25 1258.92 mo
1486.25 1258.92 1486.25 1258.92 1486.25 1258.92 cv
1486.25 1258.92 1486.25 1258.92 1486.25 1258.92 cv
1486.26 1258.92 mo
1486.26 1258.92 1486.26 1258.92 1486.26 1258.92 cv
1486.26 1258.92 1486.26 1258.92 1486.26 1258.92 cv
1486.25 1258.92 mo
1486.25 1258.92 1486.25 1258.92 1486.25 1258.92 cv
1486.25 1258.92 1486.25 1258.92 1486.25 1258.92 cv
1486.26 1258.92 mo
1486.26 1258.92 1486.26 1258.92 1486.26 1258.92 cv
1486.26 1258.92 1486.26 1258.92 1486.26 1258.92 cv
1486.26 1258.92 mo
1486.26 1258.92 1486.26 1258.92 1486.26 1258.92 cv
1486.26 1258.92 1486.26 1258.92 1486.26 1258.92 cv
.458824 .458824 .6 rgb
f
1593.33 1325.63 mo
1551.13 1325.62 1469.4 1287.59 1469.4 1277.03 cv
1469.4 1275.63 1469.56 1274.23 1469.86 1272.82 cv
1470.98 1271.37 1472.15 1270.04 1473.32 1268.82 cv
1473.34 1268.8 1473.37 1268.77 1473.4 1268.74 cv
1473.4 1268.74 li
1473.41 1268.72 1473.43 1268.71 1473.44 1268.69 cv
1473.44 1268.69 1473.44 1268.69 1473.45 1268.69 cv
1479.6 1262.33 1485.85 1259.12 1486.24 1258.93 cv
1486.24 1258.93 1486.24 1258.93 1486.24 1258.92 cv
1486.24 1258.92 1486.25 1258.92 1486.25 1258.92 cv
1486.25 1258.92 1486.25 1258.92 1486.25 1258.92 cv
1486.25 1258.92 1486.25 1258.92 1486.25 1258.92 cv
1486.25 1258.92 1486.25 1258.92 1486.25 1258.92 cv
1486.25 1258.92 1486.25 1258.92 1486.25 1258.92 cv
1486.25 1258.92 1486.25 1258.92 1486.25 1258.92 cv
1486.26 1258.92 1486.26 1258.92 1486.26 1258.92 cv
1486.26 1258.92 1486.26 1258.92 1486.26 1258.92 cv
1486.26 1258.92 1486.26 1258.92 1486.26 1258.92 cv
1486.26 1258.92 li
1486.26 1258.92 1486.26 1258.92 1486.26 1258.92 cv
1486.26 1258.92 1486.26 1258.92 1486.26 1258.92 cv
1486.26 1258.92 1486.26 1258.92 1486.26 1258.92 cv
1486.26 1258.92 1486.26 1258.92 1486.26 1258.92 cv
1486.26 1258.92 1486.26 1258.92 1486.26 1258.92 cv
1486.26 1258.92 1486.27 1258.92 1486.27 1258.92 cv
1486.27 1258.92 1486.27 1258.92 1486.27 1258.92 cv
1486.27 1258.92 1486.27 1258.92 1486.27 1258.92 cv
1486.27 1258.92 1486.27 1258.92 1486.27 1258.92 cv
1486.27 1258.92 1486.28 1258.92 1486.28 1258.92 cv
1486.28 1258.92 1486.28 1258.92 1486.28 1258.92 cv
1486.28 1258.92 1486.28 1258.92 1486.28 1258.92 cv
1486.28 1258.92 1486.28 1258.92 1486.28 1258.92 cv
1486.29 1258.92 1486.29 1258.92 1486.29 1258.93 cv
1486.29 1258.93 1486.29 1258.93 1486.29 1258.93 cv
1486.29 1258.93 1486.29 1258.93 1486.3 1258.93 cv
1486.3 1258.93 1486.3 1258.93 1486.3 1258.93 cv
1486.3 1258.93 1486.3 1258.93 1486.3 1258.93 cv
1486.3 1258.93 1486.31 1258.93 1486.31 1258.93 cv
1486.32 1258.93 1486.33 1258.94 1486.34 1258.94 cv
1486.35 1258.94 1486.35 1258.94 1486.36 1258.94 cv
1486.36 1258.94 1486.36 1258.95 1486.36 1258.95 cv
1486.37 1258.95 1486.37 1258.95 1486.37 1258.95 cv
1486.37 1258.95 1486.37 1258.95 1486.38 1258.95 cv
1486.38 1258.95 1486.38 1258.95 1486.38 1258.95 cv
1486.39 1258.95 1486.39 1258.95 1486.39 1258.95 cv
1486.39 1258.95 1486.39 1258.95 1486.39 1258.95 cv
1486.42 1258.96 1486.46 1258.97 1486.51 1258.98 cv
1486.51 1258.99 1486.52 1258.99 1486.53 1258.99 cv
1486.53 1258.99 1486.53 1258.99 1486.54 1258.99 cv
1486.54 1258.99 1486.55 1258.99 1486.55 1259 cv
1486.55 1259 1486.55 1259 1486.56 1259 cv
1486.57 1259 1486.57 1259 1486.58 1259.01 cv
1486.59 1259.01 1486.59 1259.01 1486.59 1259.01 cv
1486.6 1259.01 1486.62 1259.01 1486.63 1259.02 cv
1486.63 1259.02 1486.64 1259.02 1486.64 1259.02 cv
1486.67 1259.03 1486.69 1259.03 1486.72 1259.04 cv
1486.72 1259.04 1486.72 1259.04 1486.72 1259.04 cv
1486.78 1259.06 1486.85 1259.08 1486.92 1259.1 cv
1486.92 1259.1 1486.92 1259.1 1486.92 1259.1 cv
1495.82 1261.52 1591.11 1287.54 1611.27 1297 cv
1613.44 1299.32 1615.49 1301.63 1617.4 1303.91 cv
1620.45 1319.72 1609.96 1325.63 1593.33 1325.63 cv
.580392 .580392 .701961 rgb
f
1567.71 1351.5 mo
1528.56 1348.21 1463.44 1321.9 1463.44 1297.42 cv
1463.44 1275.53 1482.52 1263.54 1486.54 1261.26 cv
1533.13 1273.9 1607.91 1295.53 1613.05 1300.52 cv
1619.25 1306.54 1626.97 1356.45 1567.71 1351.5 cv
cp
1616.23 1297.44 mo
1608.42 1289.85 1496.79 1259.52 1486.01 1256.58 cv
1470.79 1264.34 1458.94 1279.44 1458.94 1297.42 cv
1458.94 1328.41 1538.88 1356.22 1575.72 1356.22 cv
1601.75 1356.22 1612.98 1344.83 1617.82 1334.74 cv
1624.96 1319.84 1620.79 1301.87 1616.23 1297.44 cv
cp
0 0 0 rgb
f
1547.63 1236.83 mo
1547.63 1236.83 1530.34 1198.34 1500.09 1207.57 cv
1469.83 1216.81 1474.15 1253.75 1490.58 1278.11 cv
1507 1302.46 1567.51 1311.69 1597.77 1311.69 cv
1628.02 1311.69 1633.28 1282.79 1624.17 1258.92 cv
1615.07 1235.04 1547.63 1236.83 1547.63 1236.83 cv
cp
.737255 .737255 .819608 rgb
f
1597.77 1309.51 mo
1564.17 1309.51 1507.46 1299.15 1492.46 1276.91 cv
1451.75 1216.57 1518.3 1178.47 1546.18 1239.05 cv
1566.72 1238.59 1614.94 1240.98 1622.06 1259.67 cv
1631.26 1283.78 1625.12 1309.51 1597.77 1309.51 cv
cp
1626.28 1258.16 mo
1617.39 1234.85 1559.35 1234.5 1549.03 1234.62 cv
1517.07 1172.12 1445.25 1214.89 1488.7 1279.3 cv
1506.32 1305.42 1569.79 1313.88 1597.77 1313.88 cv
1628.22 1313.88 1636.68 1285.44 1626.28 1258.16 cv
cp
0 0 0 rgb
f
1552.13 1056.26 mo
1561.91 1070.66 1567.43 1089.75 1569.79 1105.25 cv
1556.71 1058.21 1538.9 1049.2 1540.37 1050.41 cv
1530.06 1042.8 1520.07 1038.71 1510.68 1037.36 cv
1510.57 1037.3 1508.32 1037.02 1508.65 1034.87 cv
1509.3 1030.57 1536.66 1035.48 1552.13 1056.26 cv
cp
f
1502.54 1157.52 mo
1518.34 1152.03 1531.36 1137.44 1532.26 1116.42 cv
1532.39 1113.42 1537.01 1113.78 1536.65 1116.77 cv
1535.47 1126.33 1532.02 1135.37 1525.81 1142.68 cv
1522.77 1146.29 1519.17 1149.38 1515.23 1151.88 cv
1511.28 1154.36 1507.02 1156.35 1502.54 1157.52 cv
cp
f
1473.86 1077.33 mo
1464.67 1086.21 1457.8 1108.13 1477.77 1127.53 cv
1497.74 1146.93 1519.61 1128.51 1519.61 1109.19 cv
1519.61 1089.88 1488.96 1062.71 1473.86 1077.33 cv
cp
.788235 .788235 .854902 rgb
f
1603.21 1268.5 mo
1603.21 1268.5 1519.01 1258.92 1519.01 1272.08 cv
1519.01 1285.24 1591.9 1304.07 1603.21 1297.92 cv
1614.53 1291.78 1603.21 1268.5 1603.21 1268.5 cv
cp
f
511.806 1444.71 mo
500.663 1438.7 491.787 1424.2 487.205 1412.4 cv
487.5 1411.94 483.412 1396.25 522.814 1365.9 cv
535.085 1356.45 563.927 1337.1 579.264 1339.75 cv
588.784 1341.4 596.944 1347.98 601.65 1357.81 cv
609.4 1374 606.969 1395.66 594.978 1417.24 cv
574.522 1454.07 535.831 1457.68 511.806 1444.71 cv
0 0 0 rgb
f
491.792 1411.55 mo
491.792 1411.55 500.066 1433.17 513.985 1440.68 cv
532.943 1450.9 570.162 1452.47 590.967 1415.02 cv
611.774 1377.57 598.598 1347.74 578.484 1344.28 cv
558.372 1340.81 491.792 1388.66 491.792 1411.55 cv
.737255 .737255 .819608 rgb
f
540.059 1446.94 mo
530.074 1446.94 520.836 1444.37 513.985 1440.68 cv
508.888 1437.93 504.547 1433.29 501.093 1428.51 cv
501.093 1428.51 li
504.547 1433.29 508.888 1437.93 513.985 1440.68 cv
520.836 1444.37 530.076 1446.94 540.06 1446.94 cv
542.299 1446.94 544.574 1446.81 546.871 1446.54 cv
544.574 1446.81 542.299 1446.94 540.059 1446.94 cv
546.876 1446.54 mo
546.906 1446.53 546.936 1446.53 546.966 1446.52 cv
546.935 1446.53 546.906 1446.53 546.876 1446.54 cv
546.992 1446.52 mo
547.018 1446.52 547.041 1446.52 547.067 1446.51 cv
547.042 1446.52 547.017 1446.52 546.992 1446.52 cv
547.112 1446.51 mo
547.131 1446.5 547.151 1446.5 547.17 1446.5 cv
547.151 1446.5 547.131 1446.5 547.112 1446.51 cv
547.238 1446.49 mo
547.251 1446.49 547.264 1446.49 547.278 1446.49 cv
547.264 1446.49 547.252 1446.49 547.238 1446.49 cv
547.371 1446.47 mo
547.376 1446.47 547.381 1446.47 547.386 1446.47 cv
547.381 1446.47 547.377 1446.47 547.371 1446.47 cv
547.501 1446.46 mo
548.346 1446.35 549.191 1446.22 550.04 1446.07 cv
549.299 1446.32 548.457 1446.46 547.501 1446.46 cv
0 0 0 rgb
f
540.06 1446.94 mo
530.076 1446.94 520.836 1444.37 513.985 1440.68 cv
508.888 1437.93 504.547 1433.29 501.093 1428.51 cv
504.443 1428.84 507.664 1429.01 510.745 1429.01 cv
529.086 1429.01 542.29 1423.04 552.065 1414.09 cv
552.091 1416.6 552.33 1418.95 552.821 1421.09 cv
554.747 1429.5 557.351 1443.55 550.04 1446.07 cv
549.191 1446.22 548.346 1446.35 547.501 1446.46 cv
547.501 1446.46 547.501 1446.46 547.501 1446.46 cv
547.463 1446.46 547.424 1446.47 547.386 1446.47 cv
547.381 1446.47 547.376 1446.47 547.371 1446.47 cv
547.341 1446.48 547.309 1446.48 547.278 1446.49 cv
547.264 1446.49 547.251 1446.49 547.238 1446.49 cv
547.215 1446.49 547.192 1446.5 547.17 1446.5 cv
547.151 1446.5 547.131 1446.5 547.112 1446.51 cv
547.097 1446.51 547.083 1446.51 547.067 1446.51 cv
547.041 1446.52 547.018 1446.52 546.992 1446.52 cv
546.984 1446.52 546.974 1446.52 546.966 1446.52 cv
546.936 1446.53 546.906 1446.53 546.876 1446.54 cv
546.875 1446.54 546.872 1446.54 546.871 1446.54 cv
544.574 1446.81 542.299 1446.94 540.06 1446.94 cv
.580392 .580392 .701961 rgb
f
510.745 1429.01 mo
501.311 1429.01 490.571 1427.43 478.824 1424.3 cv
450.783 1416.85 442.598 1402 435.378 1388.9 cv
427.944 1375.42 421.524 1363.77 392.896 1360.93 cv
302.382 1351.96 332.697 1289.92 375.723 1289.92 cv
389.282 1289.92 402.32 1295.01 410.435 1298.98 cv
409.093 1288.76 407.148 1271.24 406.666 1252.52 cv
406.321 1239.16 412.071 1230.15 409.849 1216.85 cv
406.821 1198.72 403.265 1174.65 409.374 1156.54 cv
408.634 1147.88 413.561 1129.83 415.149 1124.3 cv
419.576 1108.91 429.659 1104.24 436.137 1104.24 cv
440.144 1104.24 446.481 1105.03 448.334 1111.34 cv
461.386 1058.79 493.725 1057.52 505.178 1071.02 cv
516.355 1084.2 510.67 1109.98 508.801 1132.04 cv
514.412 1123.94 522.172 1117.7 531.75 1120.29 cv
555.172 1126.62 536.624 1189.12 551.027 1236.13 cv
564.767 1280.98 590.351 1329.42 575.901 1372.77 cv
567.174 1398.96 551.88 1429.01 510.745 1429.01 cv
0 0 0 rgb
f
416.285 1307.44 mo
416.285 1307.44 412.003 1281.58 411.252 1252.4 cv
410.928 1239.85 416.763 1230.4 414.373 1216.1 cv
410.827 1194.86 409.601 1183 411.687 1165.04 cv
411.959 1162.7 414.082 1157.19 414.039 1156.92 cv
413.179 1151.72 415.957 1138.1 419.557 1125.57 cv
424.25 1109.25 433.956 1108.2 441.351 1110.6 cv
448.414 1112.9 448.502 1140.32 448.502 1140.32 cv
448.502 1140.32 456.422 1066.18 487.386 1067.76 cv
514.879 1069.16 506.592 1103.59 504.587 1127.42 cv
502.713 1149.69 501.911 1158.36 501.911 1158.36 cv
501.911 1158.36 512.581 1119.86 530.553 1124.72 cv
548.526 1129.57 532.828 1192.39 546.64 1237.47 cv
560.453 1282.55 585.42 1329.71 571.549 1371.32 cv
557.678 1412.94 534.791 1434.44 480.001 1419.87 cv
425.212 1405.31 452.702 1362.25 393.348 1356.37 cv
318.958 1349 334.395 1308.87 359.363 1297.77 cv
384.33 1286.67 416.285 1307.44 416.285 1307.44 cv
.737255 .737255 .819608 rgb
f
510.746 1424.42 mo
510.744 1424.42 510.738 1424.42 510.736 1424.42 cv
510.738 1424.42 510.744 1424.42 510.746 1424.42 cv
510.746 1424.42 li
510.746 1424.42 mo
543.687 1424.42 560.227 1404.59 571.162 1372.47 cv
560.226 1404.59 543.692 1424.42 510.746 1424.42 cv
480.001 1419.87 mo
480.001 1419.87 li
425.212 1405.31 452.702 1362.25 393.348 1356.37 cv
393.287 1356.36 393.225 1356.36 393.164 1356.35 cv
393.227 1356.36 393.285 1356.36 393.348 1356.37 cv
452.702 1362.25 425.212 1405.31 480.001 1419.87 cv
480.001 1419.87 li
571.348 1371.93 mo
571.355 1371.91 571.361 1371.89 571.368 1371.87 cv
571.361 1371.89 571.355 1371.91 571.348 1371.93 cv
571.451 1371.62 mo
571.484 1371.52 571.516 1371.42 571.549 1371.32 cv
571.549 1371.32 li
571.549 1371.32 li
571.516 1371.42 571.484 1371.52 571.451 1371.62 cv
393.056 1356.34 mo
393.033 1356.34 393.01 1356.34 392.988 1356.33 cv
393.01 1356.34 393.033 1356.34 393.056 1356.34 cv
392.848 1356.32 mo
392.846 1356.32 li
392.848 1356.32 li
0 0 0 rgb
f
510.746 1424.42 mo
510.744 1424.42 510.738 1424.42 510.736 1424.42 cv
501.776 1424.42 491.605 1422.96 480.001 1419.87 cv
480.001 1419.87 li
425.212 1405.31 452.702 1362.25 393.348 1356.37 cv
393.285 1356.36 393.227 1356.36 393.164 1356.35 cv
393.127 1356.35 393.092 1356.34 393.056 1356.34 cv
393.033 1356.34 393.01 1356.34 392.988 1356.33 cv
392.941 1356.33 392.895 1356.32 392.848 1356.32 cv
392.846 1356.32 li
364.588 1353.45 349.409 1345.82 342.832 1336.87 cv
351.973 1343.84 367.219 1344.1 378.239 1344.1 cv
379.118 1344.1 379.97 1344.1 380.79 1344.1 cv
416.695 1344.1 422.682 1355.69 422.682 1355.69 cv
422.682 1355.69 440.467 1403.27 484.563 1407.04 cv
490.135 1407.51 495.376 1407.74 500.31 1407.74 cv
544.664 1407.74 564.011 1389.39 572.261 1369.07 cv
572.036 1369.82 571.799 1370.57 571.549 1371.32 cv
571.549 1371.32 li
571.516 1371.42 571.484 1371.52 571.451 1371.62 cv
571.424 1371.7 571.395 1371.79 571.368 1371.87 cv
571.361 1371.89 571.355 1371.91 571.348 1371.93 cv
571.286 1372.11 571.224 1372.29 571.162 1372.47 cv
560.227 1404.59 543.687 1424.42 510.746 1424.42 cv
510.746 1424.42 li
.580392 .580392 .701961 rgb
f
484.563 1147.77 mo
473.849 1137.97 460.75 1140.72 448.384 1145.51 cv
448.133 1145.26 446.86 1143 446.86 1143 cv
442.838 1137.76 471.844 1131.5 484.563 1147.77 cv
cp
0 0 0 rgb
f
481.815 1212.15 mo
458.885 1203.07 448.345 1220.05 450.879 1216.92 cv
449.2 1219.46 447.874 1211.1 450.2 1209.13 cv
457.856 1202.68 468.542 1203.37 481.815 1212.15 cv
cp
f
444.238 1216.23 mo
441.428 1211.73 422.472 1211.82 413.131 1222.97 cv
411.855 1223.6 411.841 1222.16 411.482 1221.79 cv
410.692 1220.97 410.964 1219.88 411.78 1218.91 cv
420.35 1208.68 441.443 1209.98 444.238 1216.23 cv
cp
f
431.234 1158.28 mo
427.54 1155.16 416.445 1157.43 412.94 1160.08 cv
410.127 1162.2 409.963 1156.14 413.418 1154.94 cv
417.452 1153.54 428.286 1153.63 431.234 1158.28 cv
cp
f
527.333 1209.98 mo
528.234 1211.16 529.031 1212.5 529.211 1213.97 cv
526.511 1211.05 522.558 1209.75 518.745 1208.58 cv
504.534 1205.08 500.726 1215.18 498.096 1210.8 cv
495.2 1205.99 516.325 1195.66 527.333 1209.98 cv
cp
f
444.238 1359.04 mo
444.238 1359.04 461.009 1391.28 475.344 1395.52 cv
489.679 1399.76 484.519 1347 475.344 1332.67 cv
466.17 1318.33 441.801 1347 444.238 1359.04 cv
cp
.788235 .788235 .854902 rgb
f
511.366 1339.55 mo
506.99 1351.54 506.061 1385.99 519.086 1390.01 cv
532.11 1394.02 564.041 1364.78 558.683 1332.09 cv
553.326 1299.41 516.18 1326.36 511.366 1339.55 cv
cp
f
371.56 1299.98 mo
371.56 1299.98 348.911 1319.19 362.386 1332.67 cv
375.86 1346.14 408.257 1285.65 371.56 1299.98 cv
cp
f
459.622 1158.69 mo
454.581 1160.52 449.232 1165.32 449.232 1172.48 cv
449.232 1179.64 448.731 1200.99 459.622 1198.87 cv
470.512 1196.75 472.477 1154.05 459.622 1158.69 cv
cp
f
474.055 1080.66 mo
474.055 1080.66 463.914 1085.25 458.18 1097.86 cv
452.446 1110.48 472.886 1123.54 479.07 1117.36 cv
485.253 1111.18 501.397 1065.75 474.055 1080.66 cv
cp
f
521.073 1140.49 mo
521.073 1140.49 511.873 1146.04 509.858 1155.05 cv
507.844 1164.07 505.071 1183.49 507.361 1185.78 cv
509.651 1188.07 523.437 1193.1 523.437 1177.56 cv
523.437 1162.02 529.509 1138.03 521.073 1140.49 cv
cp
f
506.499 1215.07 mo
506.499 1215.07 506.354 1240.35 514.218 1254.11 cv
522.083 1267.88 545.393 1267.3 539.185 1254.11 cv
532.977 1240.92 530.374 1215.07 523.361 1215.07 cv
516.348 1215.07 506.499 1215.07 506.499 1215.07 cv
cp
f
502.571 1265.59 mo
502.367 1265.14 498.74 1255.68 496.89 1239.91 cv
495.725 1229.99 498.88 1218.23 496.944 1210.62 cv
491.446 1188.99 503.748 1139.57 504.274 1137.48 cv
505.014 1134.54 509.463 1135.66 508.723 1138.6 cv
508.597 1139.1 496.177 1188.98 501.391 1209.49 cv
503.575 1218.08 500.352 1230.06 501.445 1239.38 cv
503.215 1254.46 508.403 1266.2 508.451 1266.3 cv
508.967 1267.46 502.951 1266.45 502.571 1265.59 cv
cp
0 0 0 rgb
f
452.957 1269.49 mo
446.164 1249.4 443.836 1252.64 448.038 1211.61 cv
434.321 1175.34 443.51 1148.19 444.957 1144.35 cv
444.957 1144.35 446.769 1123.05 445.416 1116.13 cv
444.368 1110.75 449.745 1113.74 449.732 1115.93 cv
449.539 1145.24 li
443.838 1159.78 442.916 1185.43 452.518 1210.49 cv
452.714 1211 li
451.922 1218.59 449.945 1240.01 450.782 1247.54 cv
451.227 1251.55 454.661 1263.73 456.026 1267.77 cv
456.432 1268.97 453.28 1270.44 452.957 1269.49 cv
cp
f
513.743 1314.87 mo
511.16 1321.09 508.965 1327.33 507.065 1333.64 cv
505.229 1339.97 503.697 1346.34 502.697 1352.79 cv
501.684 1359.24 501.167 1365.75 501.226 1372.3 cv
501.258 1378.86 502.034 1385.4 503.127 1392.06 cv
500.211 1385.98 498.367 1379.31 497.653 1372.53 cv
496.849 1365.74 497.11 1358.83 498.167 1352.08 cv
499.23 1345.33 501.108 1338.73 503.704 1332.45 cv
506.299 1326.19 509.51 1320.15 513.743 1314.87 cv
cp
f
449.907 1272.56 mo
451.936 1268.33 458.635 1264.94 463.972 1266.75 cv
455.672 1270.1 466.779 1264.95 449.907 1272.56 cv
cp
f
497.41 1266.1 mo
504.357 1263.71 515.458 1265.21 522.147 1271.46 cv
514.968 1269.14 512.251 1267.66 497.41 1266.1 cv
cp
f
530.106 1010.92 mo
545.296 1020.98 558.647 1053.21 548.825 1088.14 cv
558.235 1047.44 536.93 1010.46 517.965 1011.72 cv
514.883 1011.93 514.645 1007.2 517.77 1007.14 cv
517.895 1007.16 523.866 1006.75 530.106 1010.92 cv
cp
f
596.174 1167.44 mo
593.623 1181.96 588.239 1194.94 577.924 1208.32 cv
583.722 1200.18 588.387 1191.22 591.336 1181.72 cv
592.811 1176.97 593.8 1172.1 594.471 1167.2 cv
597.563 1141.44 588.092 1113.92 576.06 1097.29 cv
576.035 1097.18 574.716 1095.35 576.534 1094.04 cv
577.561 1093.29 578.995 1093.52 579.738 1094.55 cv
590.862 1109.94 600.47 1140.44 596.174 1167.44 cv
cp
f
982.557 989.518 mo
952.232 986.596 930.594 964.331 922.906 939.931 cv
954.549 839.001 li
1109.35 875.633 li
1112.91 891.393 1118.65 922.268 1114.96 937.96 cv
1110.83 955.525 1089.1 989.958 1057.6 989.959 cv
1057.6 989.959 li
1055.51 989.959 1053.4 989.8 1051.31 989.488 cv
1038.8 987.611 1033 987.885 1023.31 989.208 cv
1018.27 989.897 1002.34 991.425 982.557 989.518 cv
f
989.927 1027.01 mo
971.135 1024.3 954.903 1013.17 948.576 998.649 cv
944.739 989.844 945.253 980.873 949.987 974.032 cv
963.006 955.226 1044.74 950.4 1064.39 979.311 cv
1067.53 983.926 1069.78 988.476 1071.07 992.838 cv
1076.06 1009.69 1063.54 1025.17 1045.03 1027.09 cv
1038.04 1027.81 1027.27 1028.68 1015.65 1028.68 cv
1012.23 1028.57 1002.59 1028.84 989.927 1027.01 cv
f
1044.53 1022.33 mo
1060.3 1020.7 1070.55 1007.93 1066.48 994.197 cv
1065.4 990.536 1063.48 986.475 1060.44 982.002 cv
1042.19 955.162 964.47 961.521 953.923 976.757 cv
943.375 991.993 960.48 1017.93 990.61 1022.28 cv
1009.89 1025.06 1031.49 1023.68 1044.53 1022.33 cv
.737255 .737255 .819608 rgb
f
1065.19 990.599 mo
1064.43 988.779 1063.47 986.873 1062.27 984.879 cv
1062.27 984.879 li
1063.47 986.873 1064.43 988.779 1065.19 990.598 cv
1065.19 990.598 li
952.781 978.651 mo
952.78 978.65 952.781 978.65 952.78 978.649 cv
953.117 978.003 953.497 977.37 953.923 976.757 cv
953.497 977.372 953.117 978.003 952.781 978.651 cv
0 0 0 rgb
f
1015.41 1005.67 mo
1007.2 1005.67 998.577 1005.24 990.37 1004.06 cv
971.625 1001.35 957.921 990.292 952.781 978.651 cv
953.117 978.003 953.497 977.372 953.923 976.757 cv
953.923 976.757 li
954.273 976.252 954.697 975.756 955.189 975.271 cv
962.569 980.034 971.733 983.668 983.016 984.755 cv
991.621 985.584 998.307 985.892 1003.75 985.892 cv
1011.55 985.892 1016.8 985.259 1021.49 984.626 cv
1026.17 983.993 1030.29 983.36 1035.85 983.36 cv
1040.1 983.36 1045.19 983.731 1052.02 984.755 cv
1053.91 985.038 1055.77 985.173 1057.6 985.173 cv
1059.18 985.174 1060.74 985.072 1062.27 984.879 cv
1063.47 986.873 1064.43 988.779 1065.19 990.599 cv
1061.77 997.777 1054.1 1003.1 1044.3 1004.11 cv
1036.8 1004.89 1026.49 1005.67 1015.41 1005.67 cv
.580392 .580392 .701961 rgb
f
1041.19 896.989 mo
1036.26 894.734 li
1057.32 860.18 1071.59 814.276 1066.09 773.808 cv
1061.47 739.729 1061.33 732.28 1070.18 723.434 cv
1074.37 719.243 1083.92 716.317 1093.4 716.317 cv
1110.22 716.317 1121.98 725.095 1124.86 739.802 cv
1129.94 765.683 1129.89 835.797 1106.96 888.246 cv
1096.68 911.737 1064.14 907.481 1041.19 896.989 cv
0 0 0 rgb
f
1043.18 892.638 mo
1043.18 892.638 1079.16 834.519 1070.83 773.165 cv
1066.2 738.976 1066.61 733.77 1073.56 726.819 cv
1080.51 719.866 1115.02 714.459 1120.17 740.723 cv
1125.31 766.985 1124.94 835.178 1102.57 886.329 cv
1090.37 914.231 1043.18 892.638 1043.18 892.638 cv
.737255 .737255 .819608 rgb
f
957.783 844.683 mo
927.914 939.953 li
927.914 939.953 940.274 980.636 983.016 984.755 cv
1003.97 986.774 1013.54 985.7 1021.49 984.626 cv
1029.75 983.509 1036.27 982.392 1052.02 984.755 cv
1082.92 989.389 1106.18 954.372 1110.3 936.863 cv
1114.42 919.354 1105.35 879.604 1105.35 879.604 cv
957.783 844.683 li
f
1033.09 985.808 mo
1029.9 985.896 1029.76 981.152 1032.9 981.026 cv
1049.17 980.373 1062.25 985.571 1070.65 982.894 cv
1073.68 981.938 1075.11 986.494 1072.1 987.454 cv
1069.86 988.168 1049.15 985.153 1033.09 985.808 cv
cp
0 0 0 rgb
f
1033.71 786.644 mo
1033.71 786.644 1049.09 779.368 1073.8 795.846 cv
1098.52 812.325 1069.79 896.469 1056.66 909.601 cv
1043.52 922.732 1007.22 899.301 1007.22 899.301 cv
1033.71 786.644 li
.737255 .737255 .819608 rgb
f
1034.82 917.851 mo
1030.12 916.572 1026.68 912.718 1024.17 908.206 cv
1028.18 909.925 1032.52 911.5 1036.79 912.498 cv
1036.15 914.411 1035.5 916.202 1034.82 917.851 cv
.580392 .580392 .701961 rgb
f
1036.79 912.498 mo
1032.52 911.5 1028.18 909.925 1024.17 908.206 cv
1019.37 899.552 1018.05 888.473 1018.05 888.473 cv
1033.71 786.644 li
1033.71 786.644 li
1033.71 786.644 1033.71 786.642 1033.72 786.638 cv
1033.96 786.528 1037.32 785.044 1043.23 785.044 cv
1043.31 785.044 1043.38 785.044 1043.46 785.045 cv
1049.19 798.683 1051.54 813.499 1050.29 828.238 cv
1048.22 852.627 1044.04 890.583 1036.79 912.498 cv
f
1015.66 888.472 mo
1015.66 887.15 1016.73 886.08 1018.05 886.08 cv
1018.17 886.133 1020.44 886.205 1020.44 888.474 cv
1020.44 907.733 1030.12 923.117 1048.27 913.749 cv
1063.06 906.119 1069.82 880.087 1074.38 863.917 cv
1079.46 846.09 1084.46 825.636 1079.39 808.492 cv
1077.92 803.497 1075.59 799.913 1072.48 797.837 cv
1049.36 782.428 1034.86 788.748 1034.71 788.814 cv
1033.52 789.359 1032.1 788.842 1031.54 787.649 cv
1030.99 786.457 1031.49 785.044 1032.68 784.481 cv
1033.36 784.161 1049.58 776.823 1075.13 793.855 cv
1079.2 796.568 1082.18 801.037 1083.98 807.135 cv
1090.06 827.698 1082.82 850.498 1078.22 867.938 cv
1073.51 884.598 1066.41 909.775 1050.46 918.002 cv
1029.06 929.045 1015.65 911.692 1015.66 888.472 cv
cp
0 0 0 rgb
f
1092.57 784.646 mo
1084.1 781.452 1094.35 786.176 1102.49 783.5 cv
1111.58 780.427 1111.29 772.787 1114.92 774.735 cv
1118.46 776.626 1110.56 788.938 1092.57 784.646 cv
cp
f
956.168 873.796 mo
956.646 870.299 li
970.014 772.425 973.5 797.091 969.478 749.498 cv
968.393 736.653 967.271 723.372 968.472 711.841 cv
968.5 711.571 968.53 711.301 968.562 711.032 cv
970.916 691.047 989.106 680.259 1005.03 680.259 cv
1017.48 680.259 1027.74 686.365 1033.18 697.012 cv
1049.42 728.802 1041.65 780.521 1040.71 786.314 cv
1036.63 811.511 1018.9 870.317 1013.4 895.151 cv
956.168 873.796 li
cp
f
1028.92 699.188 mo
1016.36 674.609 976.542 684.188 973.313 711.601 cv
973.285 711.845 973.258 712.09 973.232 712.337 cv
970.657 737.056 979.224 770.528 974.075 793.188 cv
968.925 815.846 961.387 870.947 961.387 870.947 cv
1013.4 895.151 li
1013.4 895.151 1031.36 814.128 1035.99 785.548 cv
1039.12 766.227 1041.89 724.581 1028.92 699.188 cv
cp
.737255 .737255 .819608 rgb
f
940.164 971.208 mo
906.826 948.605 904.376 892.146 910.862 859.71 cv
914.432 841.863 924.896 821.863 942.26 817.24 cv
942.849 817.24 li
977.403 817.24 1005.82 823.93 1035.92 831.013 cv
1052.76 834.978 1057.76 844.063 1058.99 850.987 cv
1061.21 863.449 1052.35 879.018 1037.45 888.846 cv
1032.68 891.995 1023.35 888.93 1016.29 889.176 cv
990.266 942.714 1055.11 961.066 1055.11 961.066 cv
1051.07 967.892 1043.06 988.138 1016.37 990.06 cv
988.29 992.083 970.164 991.546 940.164 971.208 cv
cp
0 0 0 rgb
f
942.849 822.026 mo
942.849 822.026 922.25 827.175 915.555 860.648 cv
908.861 894.121 912.465 946.647 942.849 967.246 cv
973.232 987.845 991.418 987.06 1016.03 985.287 cv
1040.64 983.514 1055.11 961.066 1055.11 961.066 cv
1055.11 961.066 999.998 928.169 1016.29 889.176 cv
973.232 876.459 li
973.232 876.459 1014.53 898.24 1034.82 884.852 cv
1055.11 871.462 1066.54 843.138 1034.82 835.671 cv
1003.1 828.205 975.807 822.026 942.849 822.026 cv
cp
.737255 .737255 .819608 rgb
f
972.057 878.543 mo
970.906 877.895 970.499 876.436 971.147 875.284 cv
971.797 874.133 973.256 873.728 974.406 874.375 cv
974.822 874.607 1016.1 897.595 1034.94 885.168 cv
1040.83 881.279 1047.73 872.978 1051.23 867.142 cv
1051.91 866.008 1053.38 865.639 1054.51 866.319 cv
1055.64 866.999 1056.01 868.468 1055.33 869.602 cv
1051.47 876.049 1044.13 884.837 1037.58 889.163 cv
1020.86 900.191 989.121 888.16 972.057 878.543 cv
cp
0 0 0 rgb
f
998.103 765.386 mo
1023.99 776.32 1031.37 762.49 1034.14 767.354 cv
1037.3 772.887 1017.01 776.436 998.103 765.386 cv
cp
f
1021.32 639.468 mo
1043.5 652.913 1060.34 676.958 1054.84 702.087 cv
1054.39 704.136 1051.32 703.56 1051.63 701.494 cv
1051.17 697.558 1058.93 668.664 1021.32 639.468 cv
cp
f
956.168 828.485 mo
956.168 828.485 1030.62 832.366 1030.62 844.684 cv
1030.62 857.002 981.011 855.719 968.191 849.321 cv
955.372 842.922 956.168 828.485 956.168 828.485 cv
cp
.788235 .788235 .854902 rgb
f
1001.31 1399.38 mo
958.805 1399.37 926.024 1355.83 920.143 1338.51 cv
918.333 1333.18 918.655 1327.99 921.102 1323.1 cv
925.548 1314.21 936.522 1308.01 946.011 1304.85 cv
947.271 1305.15 li
997.103 1317.03 1039.68 1348.27 1040.25 1373.35 cv
1040.66 1391.46 1019.26 1399.38 1001.32 1399.38 cv
1001.31 1399.38 li
0 0 0 rgb
f
957.834 1333.17 mo
957.581 1332.91 957.665 1332.99 957.751 1333.08 cv
958.021 1333.36 958.29 1333.64 947.716 1322.7 cv
937.797 1309.9 939.505 1291.44 951.605 1280.67 cv
951.799 1280.51 li
1000.81 1241.51 li
1002.41 1241.51 li
1022.13 1241.44 1038.64 1237.22 1039.16 1233.78 cv
1042.81 1209.86 1081 1185.52 1102.5 1174.37 cv
1104.64 1175.54 li
1139.76 1194.81 1149.29 1205.97 1153.02 1208.32 cv
1154.91 1209.51 1167.03 1227.24 1167.77 1235.61 cv
1168.38 1242.52 1167.12 1253.76 1165.14 1259.29 cv
1167.03 1261.9 1168.02 1264.14 1167.77 1268.08 cv
1167.01 1280.11 1161.24 1293.44 1158.77 1299.13 cv
1152.69 1313.16 1139.26 1321.05 1129.45 1326.82 cv
1125.34 1329.23 1121.46 1331.51 1119.49 1333.48 cv
1100.98 1352 1064.68 1366.93 1043.33 1366.93 cv
1043.32 1366.93 1043.26 1366.93 1043.13 1366.93 cv
1040.38 1366.97 1008.73 1367.01 957.834 1333.17 cv
f
934.749 1286.11 mo
934.749 1255.78 940.863 1242.61 934.879 1218.07 cv
930.435 1199.86 934.43 1185.36 937.206 1178.33 cv
939.129 1173.47 943.758 1170.32 948.996 1170.32 cv
951.146 1170.32 955.319 1171.23 964.17 1171.23 cv
1000.26 1171.23 1020.28 1152.86 1029.01 1168.87 cv
1037.3 1184.07 1035.14 1202.63 1023.76 1214.01 cv
1019.79 1217.98 1017.19 1220.74 1015.52 1222.6 cv
1022.97 1227.3 1030.15 1228.92 1037.59 1229.43 cv
1041.78 1229.72 1046.12 1230.02 1049.26 1235.4 cv
1056.96 1248.6 1038.47 1273.15 1028.7 1284.96 cv
963.45 1330.48 li
944.547 1322.85 934.749 1306.17 934.749 1286.11 cv
f
1040.16 1147.75 mo
1031.15 1154.52 1026.47 1165.8 1028.53 1176.88 cv
1029.41 1181.6 1031.5 1186.43 1035.67 1190.6 cv
1049.58 1204.52 1081.5 1190.8 1081.5 1190.8 cv
1081.5 1190.8 1072.06 1242.73 1060.02 1242.73 cv
1138.18 1256.06 li
1138.18 1256.06 1151.41 1215.43 1147.48 1194.33 cv
1143.56 1173.23 1135.7 1137.58 1111.29 1130.41 cv
1081.22 1121.56 1053.83 1137.47 1040.16 1147.75 cv
.737255 .737255 .819608 rgb
f
1053.93 1196.84 mo
1047.07 1196.84 1040.35 1195.28 1035.67 1190.6 cv
1035.08 1190.01 1034.53 1189.41 1034.02 1188.79 cv
1034.02 1188.79 li
1034.53 1189.41 1035.08 1190.01 1035.67 1190.6 cv
1040.35 1195.28 1047.07 1196.84 1053.93 1196.84 cv
1059.62 1196.84 1065.4 1195.77 1070.19 1194.53 cv
1070.19 1194.53 li
1065.4 1195.77 1059.62 1196.84 1053.93 1196.84 cv
.788235 .788235 .854902 rgb
f
1034.02 1188.79 mo
1032.21 1186.61 1030.89 1184.28 1029.96 1181.92 cv
1030.89 1184.28 1032.21 1186.61 1034.02 1188.79 cv
1034.02 1188.79 li
1029.96 1181.92 mo
1029.96 1181.9 1029.95 1181.88 1029.94 1181.87 cv
1029.95 1181.88 1029.96 1181.9 1029.96 1181.92 cv
1029.94 1181.86 mo
1029.93 1181.84 1029.93 1181.83 1029.93 1181.82 cv
1029.93 1181.83 1029.93 1181.84 1029.94 1181.86 cv
1029.91 1181.79 mo
1029.91 1181.79 1029.91 1181.78 1029.91 1181.77 cv
1029.91 1181.78 1029.91 1181.79 1029.91 1181.79 cv
1029.89 1181.74 mo
1029.89 1181.73 1029.89 1181.73 1029.89 1181.72 cv
1029.89 1181.73 1029.89 1181.73 1029.89 1181.74 cv
1029.87 1181.68 mo
1029.87 1181.68 1029.87 1181.68 1029.87 1181.68 cv
1029.87 1181.68 1029.87 1181.68 1029.87 1181.68 cv
0 0 0 rgb
f
1106 1250.57 mo
1060.02 1242.73 li
1072.06 1242.73 1081.5 1190.8 1081.5 1190.8 cv
1081.5 1190.8 li
1081.5 1190.8 li
1081.5 1190.8 1076.78 1192.83 1070.19 1194.53 cv
1065.4 1195.77 1059.62 1196.84 1053.93 1196.84 cv
1047.07 1196.84 1040.35 1195.28 1035.67 1190.6 cv
1035.08 1190.01 1034.53 1189.41 1034.02 1188.79 cv
1032.21 1186.61 1030.89 1184.28 1029.96 1181.92 cv
1029.96 1181.92 1029.96 1181.92 1029.96 1181.92 cv
1029.96 1181.9 1029.95 1181.88 1029.94 1181.87 cv
1029.94 1181.86 1029.94 1181.86 1029.94 1181.86 cv
1029.93 1181.84 1029.93 1181.83 1029.93 1181.82 cv
1029.92 1181.81 1029.92 1181.8 1029.91 1181.79 cv
1029.91 1181.79 1029.91 1181.78 1029.91 1181.77 cv
1029.9 1181.76 1029.9 1181.75 1029.89 1181.74 cv
1029.89 1181.73 1029.89 1181.73 1029.89 1181.72 cv
1029.88 1181.71 1029.88 1181.7 1029.87 1181.68 cv
1029.87 1181.68 1029.87 1181.68 1029.87 1181.68 cv
1029.41 1180.48 1029.06 1179.28 1028.78 1178.08 cv
1033.19 1184.11 1041.35 1188.41 1051.26 1188.41 cv
1059.77 1188.41 1069.56 1185.23 1079.37 1177.25 cv
1084.9 1172.75 1099.29 1156.86 1099.29 1156.86 cv
1099.29 1156.86 1149.37 1161.58 1143.82 1190.97 cv
1141.72 1202.1 1109.16 1243.68 1106 1250.57 cv
.580392 .580392 .701961 rgb
f
1136.89 1253.95 mo
1065.6 1241.8 li
1075.34 1232.01 1081.33 1201.33 1083.94 1187.72 cv
1070.15 1193.56 1047.57 1199.87 1036.99 1189.29 cv
1008.25 1160.55 1067.01 1119.32 1110.76 1132.19 cv
1132.57 1138.6 1140.87 1168.95 1145.66 1194.67 cv
1149.03 1212.78 1139.21 1246.4 1136.89 1253.95 cv
cp
1149.31 1193.99 mo
1146.11 1176.79 1138.61 1136.5 1111.81 1128.62 cv
1064.98 1114.85 1002.21 1159.77 1034.36 1191.92 cv
1046.46 1204.03 1070.38 1196.9 1079.04 1193.75 cv
1074.98 1214.34 1066.88 1240.87 1060.02 1240.87 cv
1059.71 1244.57 li
1139.45 1258.16 li
1144.86 1241.39 1152.53 1211.26 1149.31 1193.99 cv
cp
0 0 0 rgb
f
946.207 1309.61 mo
946.207 1309.61 918.28 1318.75 924.486 1337.03 cv
930.693 1355.31 970.41 1405.93 1016.95 1392.57 cv
1063.5 1379.22 1016.95 1326.49 946.207 1309.61 cv
.737255 .737255 .819608 rgb
f
1002.63 1394.78 mo
1007.31 1394.67 1012.09 1393.97 1016.95 1392.57 cv
1029.91 1388.86 1035.65 1382.09 1035.67 1373.89 cv
1035.65 1382.09 1029.91 1388.86 1016.95 1392.57 cv
1012.09 1393.97 1007.31 1394.67 1002.63 1394.78 cv
927.661 1321.43 mo
927.661 1321.43 li
927.661 1321.43 927.662 1321.42 927.662 1321.42 cv
927.661 1321.43 li
927.697 1321.38 mo
927.7 1321.38 927.704 1321.37 927.707 1321.37 cv
927.704 1321.37 927.7 1321.38 927.697 1321.38 cv
927.73 1321.34 mo
927.735 1321.34 927.741 1321.33 927.746 1321.32 cv
927.74 1321.33 927.735 1321.34 927.73 1321.34 cv
927.762 1321.3 mo
927.787 1321.27 927.813 1321.24 927.837 1321.21 cv
927.812 1321.24 927.787 1321.27 927.762 1321.3 cv
927.842 1321.21 mo
927.851 1321.2 927.86 1321.19 927.869 1321.18 cv
927.86 1321.19 927.851 1321.2 927.842 1321.21 cv
927.872 1321.17 mo
931.673 1316.71 937.225 1313.53 941.222 1311.66 cv
941.223 1311.66 li
937.225 1313.53 931.673 1316.71 927.872 1321.17 cv
0 0 0 rgb
f
941.223 1311.66 mo
941.222 1311.66 li
943.676 1310.5 945.544 1309.84 946.063 1309.66 cv
945.544 1309.84 943.676 1310.5 941.223 1311.66 cv
946.075 1309.66 mo
946.116 1309.64 946.148 1309.63 946.17 1309.62 cv
946.148 1309.63 946.116 1309.64 946.075 1309.66 cv
946.175 1309.62 mo
946.19 1309.62 946.2 1309.61 946.204 1309.61 cv
946.2 1309.61 946.19 1309.62 946.175 1309.62 cv
946.206 1309.61 mo
946.207 1309.61 946.207 1309.61 946.207 1309.61 cv
946.207 1309.61 946.207 1309.61 946.206 1309.61 cv
f
1001.31 1394.79 mo
999.028 1394.79 996.768 1394.65 994.538 1394.39 cv
988.834 1378.64 980.155 1361.16 967.244 1348.25 cv
955.06 1336.07 940.577 1327.41 927.661 1321.43 cv
927.662 1321.42 li
927.674 1321.41 927.685 1321.4 927.697 1321.38 cv
927.7 1321.38 927.704 1321.37 927.707 1321.37 cv
927.715 1321.36 927.722 1321.35 927.73 1321.34 cv
927.735 1321.34 927.74 1321.33 927.746 1321.32 cv
927.751 1321.32 927.756 1321.31 927.762 1321.3 cv
927.787 1321.27 927.812 1321.24 927.837 1321.21 cv
927.839 1321.21 927.84 1321.21 927.842 1321.21 cv
927.851 1321.2 927.86 1321.19 927.869 1321.18 cv
927.87 1321.18 927.871 1321.18 927.872 1321.17 cv
931.673 1316.71 937.225 1313.53 941.223 1311.66 cv
943.676 1310.5 945.544 1309.84 946.063 1309.66 cv
946.067 1309.66 946.071 1309.66 946.075 1309.66 cv
946.116 1309.64 946.148 1309.63 946.17 1309.62 cv
946.172 1309.62 946.173 1309.62 946.175 1309.62 cv
946.19 1309.62 946.2 1309.61 946.204 1309.61 cv
946.205 1309.61 946.205 1309.61 946.206 1309.61 cv
946.207 1309.61 946.207 1309.61 946.207 1309.61 cv
946.207 1309.61 li
997.264 1321.79 1035.72 1352.64 1035.67 1373.89 cv
1035.65 1382.09 1029.91 1388.86 1016.95 1392.57 cv
1012.09 1393.97 1007.31 1394.67 1002.63 1394.78 cv
1002.19 1394.79 1001.75 1394.79 1001.31 1394.79 cv
.580392 .580392 .701961 rgb
f
960.789 1329.63 mo
960.789 1329.63 1016.33 1366.85 1049.85 1361.89 cv
1083.36 1356.92 1108.8 1337.68 1116.25 1330.24 cv
1123.7 1322.79 1146.49 1315.92 1154.56 1297.3 cv
1157.11 1291.42 1162.49 1278.87 1163.19 1267.79 cv
1163.44 1263.78 1157.89 1258.44 1158.32 1257.86 cv
1162.39 1252.28 1163.36 1242.61 1163.18 1235.73 cv
1162.99 1228.23 1160.14 1221.1 1155.65 1216.07 cv
1153.31 1213.44 1149.18 1211.66 1147.63 1210.11 cv
1144.27 1206.75 1147.03 1195.21 1144.78 1189.64 cv
1141.85 1182.41 1134.45 1179.31 1128.34 1177 cv
1120.96 1174.2 1105 1177 1105 1177 cv
1105 1177 1047.79 1207.62 1043.7 1234.47 cv
1041.94 1245.98 1002.42 1246.09 1002.42 1246.09 cv
954.655 1284.1 li
944.31 1293.3 942.862 1308.95 951.342 1319.9 cv
960.789 1329.63 li
cp
.737255 .737255 .819608 rgb
f
941.471 1180.02 mo
942.822 1176.6 946.308 1174.53 949.959 1174.97 cv
995.202 1180.34 1017.82 1157.94 1024.98 1171.06 cv
1032.42 1184.71 1030.44 1200.84 1020.51 1210.77 cv
1010.58 1220.7 1008.87 1223.42 1008.87 1223.42 cv
1008.87 1223.42 1017.04 1230.89 1030.81 1233.29 cv
1039.28 1234.76 1042.54 1232.98 1045.29 1237.71 cv
1052.53 1250.12 1025.6 1281.53 1025.6 1281.53 cv
962.836 1325.31 li
962.836 1325.31 939.336 1316.14 939.336 1286.11 cv
939.336 1256.08 945.542 1242.43 939.336 1216.99 cv
935.277 1200.35 938.651 1187.16 941.471 1180.02 cv
cp
f
1026.37 1254.53 mo
1026.37 1254.52 li
1026.37 1254.53 li
cp
0 0 0 rgb
f
1133.89 1231.89 mo
1125.08 1231.55 1075.88 1253.82 1074.48 1286.1 cv
1071 1287.86 1063.86 1289.82 1056.87 1281.68 cv
1049.72 1273.34 1059.98 1251.76 1067.07 1242.07 cv
1073.38 1233.44 1096.46 1214.47 1110.88 1209.13 cv
1124.88 1203.95 1137.07 1207.64 1144.35 1209.85 cv
1151.15 1211.92 1170.89 1236.64 1159.8 1255.87 cv
1152.28 1245.06 1140.16 1232.37 1133.89 1231.89 cv
cp
1091.44 1185.02 mo
1096.82 1181.82 1102.61 1179.16 1107.74 1177.26 cv
1126.92 1170.16 1146.44 1183.2 1144.47 1205.1 cv
1136.54 1202.72 1123.97 1199.39 1109.29 1204.83 cv
1093.9 1210.53 1070.14 1230.09 1063.36 1239.36 cv
1061.12 1242.43 1057.62 1248.09 1054.74 1254.56 cv
1039.1 1250.73 1032.44 1220.15 1091.44 1185.02 cv
cp
1162.54 1260.06 mo
1163.45 1258.85 1169.54 1250.11 1167.2 1236.46 cv
1165.66 1227.48 1157.67 1213.78 1150.14 1207.94 cv
1150.41 1205 1150.6 1199.63 1148.89 1194.04 cv
1144.25 1178.84 1137.97 1175.62 1126 1173.03 cv
1096.38 1166.64 1065.54 1195.58 1046.1 1218.79 cv
1037.93 1228.53 1036.87 1241.47 1041.76 1249.55 cv
1044.12 1253.47 1048.02 1257.8 1052.77 1259.41 cv
1049.43 1268.58 1048.07 1278.47 1053.39 1284.67 cv
1059.71 1292.03 1067.19 1293.75 1074.55 1290.99 cv
1075.22 1298.83 1078.65 1302.16 1083.26 1304.41 cv
1088.85 1307.11 1094.57 1308.35 1099.92 1308.13 cv
1095.58 1310.27 1091.07 1311.98 1087.81 1312.92 cv
1096.24 1312.48 1104.17 1309.99 1110.33 1305.57 cv
1117.55 1302.06 1123.07 1294.94 1125.04 1284.17 cv
1125.33 1282.63 1124.31 1281.14 1122.76 1280.84 cv
1121.21 1280.54 1119.71 1281.56 1119.41 1283.12 cv
1119.48 1283 1116.2 1307.02 1091.93 1301.1 cv
1081.33 1298.51 1080.06 1295.1 1080.75 1283.72 cv
1083.03 1263.37 1109.6 1246.44 1127.84 1239.15 cv
1132.09 1237.45 1133.64 1237.28 1133.53 1237.32 cv
1137.01 1236.7 1155.41 1255.59 1160.69 1266.06 cv
1161.7 1268.1 1162.1 1269.34 1162.05 1272.15 cv
1161.75 1280.37 1154.58 1299.02 1154.58 1299.02 cv
1153.73 1301.05 1156.74 1302.39 1157.68 1300.41 cv
1161.44 1292.42 1167.77 1276.91 1166.22 1268.17 cv
1165.86 1266.18 1164.51 1263.32 1162.54 1260.06 cv
cp
f
990.14 1228.07 mo
973.651 1228.07 963.439 1219.11 960.783 1210.84 cv
959.801 1207.77 964.435 1206.27 965.433 1209.34 cv
965.529 1209.63 967.789 1216.18 975.869 1220.18 cv
984.84 1224.61 999.872 1226.64 1013.61 1218.27 cv
1016.37 1216.59 1017.28 1222.39 1014.23 1223.45 cv
1005.3 1226.53 997.253 1228.07 990.14 1228.07 cv
cp
f
1043.07 1367.54 mo
1042.95 1367.54 1042.83 1367.53 1042.71 1367.51 cv
1007.45 1362.3 981.555 1347.03 966.041 1335.14 cv
949.196 1322.23 940.795 1310.67 940.446 1310.19 cv
939.658 1309.09 939.907 1307.57 941 1306.78 cv
942.095 1305.99 943.621 1306.24 944.41 1307.33 cv
944.739 1307.79 978.048 1353.02 1043.42 1362.68 cv
1044.76 1362.88 1045.68 1364.12 1045.48 1365.45 cv
1045.3 1366.67 1044.26 1367.54 1043.07 1367.54 cv
cp
f
1009.6 1296.12 mo
1006.71 1295.93 1006.21 1300.31 1009.17 1300.66 cv
1022.64 1302.25 1060.15 1307.75 1067.63 1313.59 cv
1061.32 1307.88 1041.42 1298.17 1009.6 1296.12 cv
cp
f
1070.33 1138.79 mo
1070.33 1138.79 1037.52 1150 1040.16 1162.32 cv
1042.81 1174.63 1074.92 1167.18 1082.94 1156.86 cv
1090.97 1146.54 1078.48 1135.55 1070.33 1138.79 cv
cp
.788235 .788235 .854902 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (\702\750\762\740\753\750\751 \702\750\752\762\756\760\756\742\750\767) ()
%%Title: (Cartoon character hands gestures set.eps)
%%CreationDate: 6/30/2020 9:58 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6fok>cZS4AjT38i09="$`QB:Gp#mo\,O9,P5=[YlV];mT6Zh`cnDT69p@*IaJcJ4A<fg"X^6[s#2&X!,c80Z.!C*8uq.gdP'
%7(A#-DrD`m(t.JSegG(I2#0X@j+qqB)Mc?TnnUAULg(P`#(QQo?mlX^S<a5fSK<jH^OcqcSDeE4\9oPpp(gSS`\]*LLXU@"S<+F*
%eRX,<1JJ;tJif@^*hQ-Ih_jX)ef06S;PcW+:JC7?8PLp/j7,1dlrB+UP?nfaroIVC`Mod_)"t8eI3#cHCDo#7>)(qfl_.'f$8/`*
%L&o0qS\etIbsGSn(3#Q;COU*Z6\8nuN$69qZXqfF7F%eJ25[jX$GkKlF?[MXS>ArumI\6L%U[<G$qPh"*rpP+K_.Y6c4J`V.-u)2
%I?CbR(CE/#iJ::io<T8.B@\?IIj=I?UREBeol5ke>`)uo`1MPk*l$V"k!&TFc,Bg`Y%Ik>Yi/+hiCI#pqtL:VZ#1aM_,uT"Im**n
%*hnWk6_"2$5Y`)V?;XFAeI.b9.eXO2Zg?X4WR(*;S%N/7lgP#XVCW`TIaFt@mfe?&6o5JdTP9e\.KFedKN>d5et7=3YX-psZD.u$
%f`mi13^jI6=k!hh2o$(Xe1"3^J'A.geR,b5V`3N<[!"M5DGMM`#8@1<K&2#B!r`_HRlhI:-4GOQQ=p;BbgZd>j`]3YE#?,g5=83)
%"OZ^O)R.a#E86*dnor\MfR'9J`LOu,^!O;8_#qUa2Z2TBQe]8nV_M>)Rg"[SbY,8Cq;YiE<1iO:RN&o[O;+)Q^8Bb8"$\=To97Md
%II[Qt:Hh#<(\D\H!cIF0+:,-&qZ/@_YMjBo6i7D>qE[@D*<=[n*)%a`g0XI8`/(s8bMWBF-sX[G"jaJ=_>aW45K`S#HiTtX\q)6$
%gWPQ]N[s0sO"K:@M"l6@_#H\Bp^[:SV9632S,J(;a>rU:q,N'lqO1WIR\Ph<0u7H=V.":iE[X!<0VEL.a%q_'Z9f]D2];)iI#+>`
%eSOJ8cW/s`0H(@=#h#rn$CQN,@io/g<[_bf&DTV;$=cOjN8q6.rHSHi6JR2E@Gq0:-2`W)>ZW<uC]0cHaU(7/fl;<4Ym>'i%`,pB
%pRmj[4RUae\Yd/DG,]-Xlbp[MNI<,RDg4,)--*IZjWG\/If<Nd%0j-W(a=AGS=7u@*20>84jp]/Eq4KbH[TZ9^f#et^a0^tY(Rc3
%E3IA!@V5aU$Z860$k-1P?TNKD06ookScc[]!8.QPUZY.>_'Th)87D*%dJI)M]E3AjPdru/#5.Rt?cjY?;BDk_V_DF&J^n73MA/_0
%P/@HdMu=[U0SUL"_g!VLr(D=SPD%QdTqu`!E`@R`BVWah2,IWOBQAM&fImT3:_fl#43$n^ROZ^]0T*ZT-m$IZ"(DHcF%pF90K<^2
%H,O7`09nUp&l*fK"WYU)@E>oE+#]W*1qXl!TEED2U&!nkCc*b,DXM-&V?!,=#5Sq7eTX_%r48q/07ebkIa8WiB^]H\cRlV8)Y5'"
%aUHsH!1HeRGJW4Q.'Nfh'LcG.R,/*.Fqd,M+hS^pBu[5m_@PcV1u,l@ZcDGk=>[/rBQQ-H"9!sK(-L+87%Y>GJBb;I#6b=I_q>P=
%R1W1&7goGW9>GtL6a@2X+@<:Q[fOZcXB1:0TEojN=Je]]e7:b[3hGa&&Uae`+OIia6/b&)Bb]Rra'kb4'*3fZ.pTNBo?_"lZ_4l;
%i!f;Jm?HP#g.I<(j856BV`V+'PqGPdGm]%.!6e:e=9?5jjLj5%Rk:N1*eXEGUBj:3n@ik1OY):ff$SZjBGM'^5#H846151A\@f6p
%7cEuKJtf*.J;D'3C!7X+0lP[UG^Gq,&<'b_ncq9+`(XmQM%hXsg)"tL^udO3a>m"(^a2:^AIZ4(KNdGglJVolmmWWgU`%n`HHD8t
%3D$QK*5Zal7AF8XhsCMbAat<uG&l[S%[iM2GF5P's5_=n>e*4`M$"(e[f#3L,j=^WbTR*]NmsC_O;fQSmc;Q^I(>FoGOjij^>([@
%jo"#XQU=+%BRDhujeVG(n4@DKouZ++`O;&Lq[L1Y1aKfE^OooZdnDuas$j5\fgo_P&:D6MP79-lXkMP<2VlJA8Q-Y7eQfm*1ehAa
%Zncf[D)W[jSj&&,kT@5<h+*UfrB1L.[,l;sX.1.<BUhq&%7e(^lRZpD\]Q;HHA't!4gnhapQ;c=,1;oE-Rc5c*c>=ILQLXa0;np&
%_co84%3Z>Y8L/Zj%9WU,?RW%G:We=gpiZoO#EW7c0IfH8BEjs"@(#gOhXGT],FJ@<:<r@"&6qG?U^dWK]"js*2#7l:."C[4G75U&
%ETeIJ#Al61ed)1S2F`<EAkWpk-tN@#_eAR5[E@557qqV^kWb\_"qK3>ph/>@a0Ws/BG(;2/W>sR3T4L6TRF'\$4]Z/&.oEOK/T+;
%.,oH`8*Pq`K+A+jh[t[D,LD/^751JccCjMQ+-fn)L&9tYMEN]\8J<K5paP2ERVpq-dX*N**As?*ifK<nC$hQH[-p!s^N:0f/>',O
%UHGG*+!kasS`TI(WS#:Rj<RIYpn%i(@#(Aq'L:Tm6]^4N/Yqj+a5h4aP]]o,T3.a;[3abFB!b@L@k>BkDt[I7Z4Lt7RQXf<q:Iup
%n($\LWVHf@n;/:U%aYYFM6V[LA)BRsrLsq+6cJ.4]`'6>oGcl/+r.s8qXR,.D`OE^rPeFbqcr&LS-Ad!$fd@/ld47p)oZ8Kdcu:7
%jQ'6^5EFPb<;1T6]U,Bj4:'"JMrHbf!t(956\MKD[6.mDFU9HiFnc7gha2I/&_QAnU_Nqd#JV4A6J0<!N3LtDT="(oq^*;I?&ah6
%p4Zie@BXBhr&,YMZaRsgoR)8`E;13G)E'fPPr$BEEsR-&8)`^B29Wb'NNXDNfBijM?VrB&-/_'^`.QZ=#ViaId8=7ubi:lu*;ASZ
%2'HtlndVE*o,&#;5iT&$?hF\eO5jC9#fqDdW^!l@2F,KQ)A&)==t808IhR\^3X-9Y7DXT[gD:n:I*%Hu[N2nKb>-.l'1RKA+d0e(
%iV%s4K";O:[Hd[Q`F(3:')6ku3?r/B@K>`e(=Rt0nq79)!V"s3&cs$G;,2DrT_='DKsQ4Y_?BQ/"FMdOb4Mc#pOs>?q&T?h0L<KN
%?n_r8Uu3BiL!kXAi>=oO9FmWbi9Rc_E*@n^e[*&'`"ZqAgOI`Z^;7X%NpnJ2jWGP2hKR+15saX8_AB+DPXC>S,&u2-YOui4dQj%,
%]hZ*d4DkCdMphJt\L8lI*/j)Bnluk3e+-%M;3711n8hI@L%=SYVd'oMA59Z`Vd,J$6ee,O;%Ch%fogmV4`aJ^,iZZ+W:,t/JqD4O
%=Oa6RPRYh4+EC>@GjO?irHHCQ5saX8<rH+fdMual%FSMLYe'NgQcFN!*`@aEBdSl/E/N\DLgN3#I?*5iSR7a6FgCA%0V'kW&07PF
%6AbK.:AWZ@JS!a,ji]`W138Uo]?%D<8Zj4ui$?oLEpY.(N^Bo1-ue9YY'hsE%>U-nP%lADp<T%>-Y)OJ)/CV!G*6V?BW3?6&aJ^k
%J,@S`Jj=q6mOKC0#2j25mCnNGVe(NHK$uJ9/L(kR"PfFG6386aF;$*Y:B8![C[</7Ni**O#<liqYb.ILe3"cj02qY1<%R],]#.`/
%Ss\-3nH?Y*>6FlD^j#9t%,B3WUQ!rGF>1iq+aH*`71QX+3#0Db_M"gs;>,[n2`qk0T#61X[\NKB@o;rO'J\q6"(J/*WbBdbc#J]a
%+tY5Els;i:>u#c-1t1Z,E"2OYG5X&^.dS@mB`)P,psIIa-`6DU`tlY1=-P3fk[WF;6<l7#0#r;!FAC9"&?%7HjO>R=fffR*Ar5>@
%8caTQhcM=n,b,8K['uD'!Y.hL8g58QHh9<1E'P#Nj#tOl'HE@cYs^SHNlHZ5Gb'Xf">cM+%#Tp,.c%V(;E63Iq25_ir"_oq(cNX^
%SD0f1#!,c\Sb@P/qnIoss1=&=#7lf\^X`<:].i1RYh'm_>bn8\hnL7ue"/4RghG+/[-)eioA/H-0MZu/^VJJdmJ3@IHk0Z/kHsEa
%LW09&p3[G^r1Y"W!#Q8!e?dLji-Vfe&8X:70Nc\HL7A:`5=8R8)c,f.]:\k/6N4\>`<e7=0`]#:K*R;Y?mpH]J>\GAA>i`^Jj+/,
%GN]s%?O#CY.3W2CMNFs7)M]CXj.p4%8E'=p#1ah:"5X;<,\+S$j90+)']+n5'K/nF/NAI0p)5tZdU&jHfqHF3:9TgD`Qq<LZW$eg
%gW%Qk#[;3A"T1TFSdAg!-FCYr3+7:LdflN=Z9aVC>=.a<9Tpc)LV4$(MS8/LA3!/Tb$-boanD=p)D_Ho^c)b&I$<Ij4i_obZDE"Q
%jhRHGRh=3cO807dbKWQNk7+(/R/:A'>b[c#>X*69]^.lP_M;:(^^D6<@H0#=^rn1rEXKIL!\^Ieb:2q$$G;l10;lV/h[k%cT*b%9
%npCooJCNR!Sth;gICGBnDg0FD:-k1EaCq3/l*q7n5WKtFFP+N?i,In89q^E`k_Dm*-__Wq<rBB2:&Mk0H0iXRB,VV\(iMVf`rd)j
%-foRi7`qDTa7!s[duIbV8O4E369,t?GWLE?H_%sZ_n;R9?TOalZnF?9a.-)X)I\'bpX;cMraePYVs.0G^N[<Jf2^r$;hZ3>3BP*9
%,5VXa.V42)`EFZL.-UaE%Y#Jpni6DE:(@IbcG7sqiI+,AF_kj-cJnUpoDq-2]AM'T34,+LXtRs^H"c*\6hC*/L@#uW44-R@gZ%2c
%V=-N1'P'Zm=rPltE,Y%=+6G_9nI`N__8bF?+KuuGrOYSk(C^Zb8*&j\`\E(C35uPT32\aU5oRPtD\0rS_;Q*K3*8uNf[fsLNcBqd
%*88W,iY\RQ`f\1or].\JK-=f2IJ80P!JU1`CiW)[./E#\F'In6C47faotEDTB0R9?:5#B?\epFi.K"UFc[%!gJ-:=.\=jm`1L!Q=
%J2)O@3qPcF]J$'mA;_UuSl0f7'^pQkD.8*MRg==Y9*ui>GVl<LTcis_`W!>-BF%11%Oc@TJdDgn5>2XF`kmfc.[]"$\-,)LS^%\-
%_s@BK%6>LKUc^f<@tVK:V:2\8hu)-"?PW?M0<";J!`[Au#6do$T.&X's7/#m2rR:o[C[0!SH>W90oYRcn:cP>.H*qXmN+b-H`[?2
%8laWdPk9[HKEn+>Kn@29:AA;,R:XFIS`"\&^MbMA+Znj$M<Ak?Le'X5?JdDOkN'g'ki%^YpU@>pP;d^Vk"ad''Ut:Fp\0#U#R9J6
%Rl_#m^:-&q%F`5M:5#AWNmsUe_!L.-S_Uc>4*P`.,\W_'\W],LIGDBKGB2l.O?'jmLZZn<P%9&5@49"ei-dV@k8SYeBLmMhIh':\
%39&s8^<at>IbfP`#E6s5]E[ffc]pJ\O*NcfiX!kqfHYFo7sKI,!?(b@7SeP+c+T*!g7;WbED48U,3N'h@"(S-6G#)GF+P%$k2H$Q
%GDInX5FQ_JLsN=WUHE)"UKg504"'/)j?1oqF0Z;L.+N#)aN_s'P&88<^-%)($$nlHYTDZd@;(sW#^g!\L2a.!s5)*23FgrFNoL".
%T@as'^Q4J6,q&TucQ-cK;2Cn;JHMK,:6qS/V$QqY^jZV"jS/$_NF"r$KCCfakTkt'edt"G^C\<=!nb2C&g)^__u:pY$`*17($**u
%@7Bf0cK+e$k#7RRF_MS-6e;5e#Jph!.^&nLf%^:/F5Pg1q'MED:+mPM)X@C>(gS?"K.jM*aPQDR;#8A_k5La31OLPQf8lG\U6AIH
%$]UmE:%[NLC%6!6W/[NMK(=K5mWUE*:.ESZf_l10\Zld+E&&Q_^=Wh0(`=jkl\f`O+#XTW@X,OU.?&k2dP4*5*.7Y$!Bojrpf\9)
%#\Gp4O^:t*<8-lS-0n;3VL]>:0'#Sa*j@mk.EB=[;@ZtmU>U"Sb&KqTjJ3n/?_O!3j72HT@uMP&?8d&,7aJ9#*QKrX^N:/[aV!G"
%%%m"]p?h<r_!L;kDo[#HdFQ3^Nn@r*nq2dr(haE<^l5%Mi?!uJs"!h\F_*YClrTG5[0/UHQ$)RgWrS`g<Dr7F=A#gZ4>jOSG1^9`
%HQVhK?*(bI?P0cn20AJ'A2k-:nq0.P_snaBanU!UVS/X$s-r:^pUU-]plL>n9[==;Q$g1X],g7aK,4i5.fjZqqcfWrI,%9r*gE"L
%+/M!2)qQ+\,!r4T4LS73oEOu4'A.L2SB;Mp*oe>t2T#sS7@Du,Le`7R#TFR2_DeFP7hPBbV+H+jlSX`$N-m!"F+uMhc$*g,_MQP2
%c"<R90?hjk9b(T;**<j/VQ^q$5^AR1!V606H24A:a'fpY7q"o/>dn'5q@rdfRiOEK/N&rd4IhK'lRBgDf;)OJU(Qbe&gTiEjDfBa
%Zi96$8F3_a][XJ;B+<2pHPVZp^RiH#`(YF=a1j7im(G)sY;'11cT:r\*&+$bTBtR+1pruHRMn*%L,c$/;gg@>D)X?-h$c30&493d
%o:Tr`S@HAtU,S7GmBUDqr."b[io0e:e.fn-0i/d^Khi`[qDB>'S,ETlHF\EsY9/4H]9f7Z(-E.u#0X8,,Cc>j^YkP;56?#DJ5gk"
%S9#"HKO(l8@QL.>.j2<u%R67^:@R]m#-Tl"LGKW`HN?me?mlWrqq*Q>Y8<kmN4;#:5QBAA$9k[fOh1DrJ!IjZ2fS/.5R:(YoD%\'
%oRDC\9t1s(++5gW2B<e.lh^!S;@NR$^]+'_c+j:F^])!_rp-cfnaHMNYQ+C`5QCS0s8B\S%n>nRJ]SX#e+WTT?k]&=E"7js(Ob*$
%a!Q&&AgfQh&#]Vn\GHq;;LINF^D]6q.[b5.j1kBDW78]:c#BaCjrZE=j).Qlr(G)dr1ul/NVEjoh)N%S`imMu,*q+34nnjZ<u[7!
%m*4,-BpY@*VZ%s:S<[>Zl@Hu(9D0-"i07e-#*@-WE@ih/re3R*<WfiS0I^OM.k>95]Md.,=#445MioDEFAsh86cX#5d@K/KMN2O2
%K)dU<Yr/Ve)@\:tH1[o$OgFGp,(Q/E]eR7o6mm.'92PLO+P7uPn83X/PB?mWi0bA+>dE!)+=[No8uDAG;,iNL6O/Sb"H9*!XULG^
%hE)tK/ek%pTo0'[HPd/%na%i@L7B<8q"pm=)Po0%pH]f,efd)PrZ1=%[6;RsmiKgL>0?KqpB0@B,EV!YK]mh+1%'/dYM.OFZ&&h1
%8?Yg$#I/`/nc>EG76h=LA]j?f"Ktb\5B;d?a6iMDh#=DmDU&">7WBi$H2OB'3,MC0B1MI_5]?c[-V]b=piK(3fG@P8^sjfB\36)#
%%VG=+K/"ZS)9G=ng"1]qL+NF*gd-m/MDJ?V(g13"R)l01U[Rf:&gX%^5dQeX!]E3XnU?sth[%pOheYXD.D-['hC_LC/iIG'o>QAh
%VTDH&L28JVRmfG,On09@@k"XZJ&>jMHt0^B4;!W$j9?]Bq[J^U0eBHNc,Bg`6u-Mi99u76'C9?@UW,s<rUk[>oj<4IkJ.&o?iTZJ
%s7=ilrq.B5r]`6t_Z0Sdrr?F+kC<O+J,aF*QqVlj,C4lr9>V$`>L*qq7]O#3j:4\MiG^'@&P,32Hqf":-C`f;\?RsM?6_^n^$XWP
%$6a=!rGdlt:6k#W`H4\1lLVj,90&;C_Q^sb;I2t4?Z:kb*:*@NAE>k@@e<dV3B\`-.3(5hQ6Ile'Xms#iT.3<q+Ekk6EPMj<RRZY
%%&mrM1kS`FT=D8Y<6=1J//_VISrp]@\R76]MHnBU@0rBm?js1=NW:"-fn>B!k1CZO1c-pm9\.nSC[hEk0V3lboc"n%aohc"0ZR^a
%;=Iru0J9(1g0<MJnG9h,`RZkP0Y.ECm#](c6=hZ$[0fD-!s)ao):TlN_cBmu(q'LLa5@:#_S-cK1@UdLB"qbrCJ?FBBIXr8:?0iB
%\>G8c_.[k;K#,%:KOB7$<^$o($75kYD_]jCZ.X)I%<5*pS?Fn`/Nr2:aTESln/5U>[UVcO=A^S7#P"nSoOu4K/Dk-038h4K,9n)b
%"8)gR#>Dbk&T?%^=g!nl:;PuLTY)fUQKg`_=qFI/WdQ<AHkRu0kMF"t"8fa)?q?u"(;.2HVlcWV26ZcWiK2K4=]jX5h$SZtpbJnl
%h\>f_nF^R+%%T(O&n/Nsi@+t8$.@qn_ho/@+n4@iPAk0qpX[tH_8Eh*@m)q3)c!h/ZRSu_Xur8VkpW"F5WBDMW3Ais]UDhCf@0.f
%*^Ghj*)"S76H@6H#bAdZ'B+7<,Qe1n!4-aa8<N(J^49'+I&2pA)/C:po8oiWR*WU+VD[]uT;MT,:<b3g.gSN[0*@l+\6<9:enD)Y
%Dtl^ie[RJhQ,!ALBgU$_%F%`1G\tQ@";8YMI1)Y]0a:/lcok-hZF!.q/&51WYQUV0&jZmKg+`4(]3^plStOR"'W.C\;l0D$10Mc7
%)aHqJ9Q4&;c(G&2CrR#)5S]5IU^$u)pSP1gG$;\1i/Vq&ql;TI]HSN*k5JbQ9\M>hA;SN2jgNh7-Yc?#fj*oEJm0l&Jf0HjYYEMq
%%I"6!;hiVOps5:qMd5fk]h&Fe!u.dS*5@&U!mM$&D1UbF,'%Tgb^ldJiSZqNWZ;-TUqOhnhZ/Yr2ZuioaqP3'F]XU=1*E>9:P#X*
%_&r$t]YS1_4T^!W'X+TS%Rgq>o6NsC1D)M'pAsgPo)s8N!_O3TgkJ-\ca/8Wed1HO.%u6gAmc;=0K=gb(d1oZ8B@J]V(6ee)-'P\
%+*^Q=J!FVor/Ws+dG'C(IAV_maOsJaKH^H8BjP5Z1!AN`#]Z/U#PV0G]OnXtGuiLklr.@f0!q6^_:K#tF[6Bl^7,#?_?t.c:&Q?N
%@!4WF5.<`n%KWim(93J(Bb+U!rZI[\"/,iO6=0a["X6.5*>+OOqZ)6"GBnJ%$DgrUmqiF0CL2aaJOW8i0[=8UB?eg_/`5hS+F9*E
%qKQ?O1QC^`AAn5/<3HA.]6'0.g#Z$PCNuIR9Ec4.ZUNq9GW!9Th;U$m'I\'DU#o$7c+3O9L!#$b0`qT*L)9&JO[.fSXn*I>-*fMc
%8mq%o+q=bZRM`n\DMd\6dlhE-mdWhUlV`/>SQHq-Y0ksS=qH!!\[XO0l,<[A-^Y`GJRTT1,0BTqV)7cL6P)%oD'WeN)6;-[*-EN-
%?IRW9%OJaDaKBRoF&7E,/03@I*:+T59I-?%$:^)5Go%Sah?$1JH^UUJP0JDT#ORY;a]ddSA$QLom"3LQ)8Y_f+&mcD/sG,>Cd;_<
%B(@iHHdt1Dne#tDFBM.T5YRtG<ZVLW9/':\1NjpqSr$Lr7YAA\jd`KuCaBXcP/4dc0X@U2#6\?&CR<:p;urlm:>e;;7?*-k,I3C5
%Yae3/p#eC./.4B!_kL%1@'emeF+aV%b[U+P'uANhq,M37!IrjU.G^IhH9YCHR02a!2G>VM&-E>"@;&R?9/'cfClUaj*`*;sq/AB<
%i\Td.8Ze0c0H+PrW\Q79`hi)/(5</Ii-9uaek=*K%EMtq_Y3L#Pi]akDoJDnTdRA[W(3!AD(nfQ&jWmAK;/RKa]nXr^2b$bBXJ.O
%UHo@oc3^_@d@hF$?JBuZ5q".[#X65+0eF7L!q^da#f+<>aK;5RN,eP=>GN>G1oCQ=VOK2lUDMb:Re4_H((JVra,B#u"@0O$e1td&
%:-3+`&//lH.6p17!J\%kn.5^*Wb8c:[>>-sLTSIAo#s?\kn+-,40D%)#_b&g=tp->>LPsJ4UG4]:A4]BGDbE)m-s)O-qYC]pB20q
%LDulnJ@p1B"LR7PFq)M]!k3[]Kr<cX%(K_T1KX[@SG1MY%LYS'9g9$5?_Eh[OpAHu+M_rk&Ms\"2H\1LC<XNqn]o(1@H9qu_ICl#
%g^_?'+>oEH'j=IH\lhR>9"@XB'+"j`?Dg;E3oI8'-+*L/bX_^:X=8N;7Sjr;19B,tr_tbeerV.5g1l=_Au=?MfVSqalkX\_/V9=S
%NM>PO1nH"?Cl!<&D@3DUAEaP.$CnNa`V]EL?.$k!g'=i6es9U(8\SI9cGKsu>m5E.L[6daToW[>hqBR#V/&V)_)nR'F#*sYqd#ZF
%Oatn24,!Z6BL.@N*bR1."=ZsYo-cLf9S&HSZjaBoY0DP`fV^i.%TmB[KY7t_iH"E3^,,p%"%Hd-e,?8f;Et=_$EOH(T?1m]MqCm!
%4_6#Rj]!-CKmR5Xbt6kP`<6<RZPU%ULd"QI_jSkJ'g'mD-+M<m(.M=+l`KjbnHV6li7%bq8]QRuNUL"?=dO--!ep<@T;fY=I=?ZP
%.aJ7Kbjq__%.p>DmO:'9@,i\U?X,j/kK^TX:jQ=YD2eL2EEO_Mgo3rkk;Yp;D'+gg]kn(;=jr^92B'CYm'a]aq6;cE/6Gu,UblF)
%?fA4-ff\&:TCjq=YK!f.6kFO,7AeqE+2TWfK*q'"LX;nP5een4li>[$an4<5;A]BA/)<ZqKB3Xh<+BQ6fK;VZ[s/^$+Y4p;HN^^d
%#,?,H;!/a'DJR&QL..E8k4]HOe'Q`cE3c^9#0s*"1K+!.AN9geiD$K%)t^I/P]CNABsqI>8TW47)ZE;\1im&KCWMnJfS&`(3t/:>
%+\'[4`/K%<,@De/#'@Lm?j?,P0I1J5LMI/RdYVZb)#)f]R*l0#BL;@$g_^qFRtCa.Am&1.X;g2Gk5,7."De2M3EQfJTJ_Y\(tMVI
%'f^H['qjY07Ei5D4JF9@DXf[;I)NR,@'q6'GS;19X@6.P?8RVJ:g\&EDlX'oQCn[0AkVE/M^<&+,,W3hX-$kZ`$JfN*61JcCsM-`
%&\+k$\&27W]M#aS8r]@']b*\.JQ_gGN%:]e'>]QXKZiD-fbuZ$(UR!G2FtWn96]7Y<PX/+!^(UHh0B<1+/pm'o()`MUX-$4rX,pa
%84Ar"<0&68(fSD&i[YloCU^L#*,@t'6*Gg(Ij_5cR[;M9AL4;_VWqqqJ^=[$`']l'4htrOcBhpV'HZ&$aeQXO>>ee?J`&En_3[e$
%<:t-MOl#4q$+WgH1jio!HB\XtDc*WL\KrWa=kU<D!Y9,d=^*.*(p>>pF;p(tLSu\#>)P#''6;)L+a&kn*d/itG;\[iBP5o?DG*=p
%ap&!hPANTl1("%)(B\`b4^(Ok1Q7\,j9$lA$-8tt^hqb8.M@^5]qO!hkP6RTNTH`?)i`S`"M:clJOQRk[eS<@IU6oM&.!(`TF%kD
%b\=m,,)f@Z.3M)eZur7MG9U&Y[mJEjYI\9'H<67*l8Fi>[7d?L]S&UC`SMc(.9Stk7>T2h&5:AMOfk@J<QQSR5,])00c=pXegU3B
%as@81.NGnO;F*7'`KV"9UmT.1J2kti<Y"<@SP9bj=#SUOPY0n"(5MQEls9W[h=tYF^Q"^lfU]_B1Y*T2,ZU4lU;ND-SCcK>V@8#9
%l*K;j0c/>0PLkLVc$p>-5+-.WC=*FNF5C*Q!5**\gJ)><Z9u8$//`eS>*J.C3Lurr?5MfP)67MO,ug:(%uXN>jLH@NAVbT*QZY>`
%_i;C1rHln".%<.`6Os>Iqt?QR5</#/.9WKGV%tkm-%bt^53kGF9tsCr\"K5W^g6BN[WWFD$plmSO&)`u`d+?7Wt6o[S3.nVT9E.+
%3ONGcL.0s(kRTp;/A:VXJ/,ABkM&gZP+:;r#O)ha)20+o,)X#OZTV+W4aDKb]&ah3K;LFX_\Wr51VRKprK9)+#euq,=q:Li)oNcJ
%?\!#<De<3,f*biO1F%AsG+LJaN4/ATrRI4XR'-#uHsob)PkCeRYD8+r2o:k"<(C3F*k)Lb;8h.'P^"YOdhBWQa[+UO(9)&lp^Rn?
%,\,qu%s/JDh)m&`Z^tlGMq;F@d.Ab^KL.;;i(Hq\P/fJ@H<*c6Z=Wk::bH:q6ao7'5>#Hk(mni0/T,aanan*VQuY1A<t38Fl!/_-
%ZUY)d33-l[0rRm$1?=A\r20K2olg#SCqGOl!MGY_>4li<*eUr<Wu30_,!E@;*B\u2oW)lUZbD`J@HYYCf(MAFDM%At$el!r!kNAq
%FX99L_j8B9oA@i3Eto0KA'_i/Xa0BK-,@?@DHe<IZ[9"p_`6Q#D>ZNIJ%L):B6,q>csAjU=EXe>dcK!jT%?@!R,^mHL&9P=!GsmP
%@EArmd=jg[&:Ef?g=\DhG2TC5k:k,%Q4A)AYKi'Z:*S40opA_=XB/'&]fsL=WR17M*^%r%aPFO9/65a0Qrh5.0B71jiJEaJ/gp%X
%bRRge5"ef#/nV@7oW_V<Q=.n/Rp=!D]1Mngb5!;ONNW6-g?f&*9Aok:"i1UNmC"hhH')!'N4P,C92]bn$_%4R`,+st3M2jeddD,u
%$9ef7JnlbHm#oImS'e(dAS/2=:!%2Y8AC\n4%]ma[@p9@G7l>RW><_aSi7VOQHUc0I)pHdkLM1Z;0FnTLrWO@i@(uU8%"HDPW^SD
%SNC0LE62.Ng!X(1j.u`7X5VY,[$%H(UhfeMTH&-%.c#P;e">L'P#Q$7$L(,9I_0J[aAh11l!dj=QOEq;"3,oDZ\>Xb#CTmK6Xf"r
%&#-Pok'3_A4n-_A']uuE,[u]-0-rH3Q"Y3"+_W(@MGD3%_e[YdMJKk6Ggn\VCV"529NJL=b7E]GYJV_1dsU)VTkZ/5Sc1IrH7`c8
%7,4<q)Anj!_,S$9%[/j=&sgjtYO4Y7k;IPPBgn/0c;%\lo>Y21%SZdEP3\+bNQWBqKegJ(0l;:p<Iq61Ro7MQga[uh_MUSmRf&lA
%aQcH!mTZn6<$9ST!1dX^A?9FDmqn+VKij>f6-AgD;@1Tq^15QN=@@Z>T&F'k"hKl/9,<$XA!,mc4Dk=;[6Wm@m9UbDo'-uAn[gS]
%+s-B]G>g)?Eg@l)X$/pH$UNM"8u:amTB?7kp+D9JcoU4FgU3h#4Xn"6E5!CF$T/X4+KYS':"L+p'PgE=pZ4Ht1MY6V?H_"p``'rX
%POMcXE4RFb`k0V+O56>:=C"RMDT!'*T^4Q21CYX@L4,6`)/N<d=7C*tI=0R4#$srD9r6,Uq,"khD0e8So,IlnLCtNB_^jD??YKdg
%\Sd5h#'MD4,In_A@eE-J"bFR*Y[_,I!O2Y7V7=?,9KAX%YTSMNn61cfD;>ZUL6P;LcuQh*5F4cj9t%tCAKQfG].>-BCMIn*E-*'C
%B>`BPM?kf"UoSCYL"NJ>0VLPBaHId8$.+ZB1:W)^^"/1LLp3Zf;^BZJ[Jn9+[Hb?-*X([r4J<'A``&EDDU@aZ'jb.Kl^p;;ag)-Q
%Da<7G$El>%83*$W7Zh"s%TdfW/L_<>@h""TEcdQt=jYENN,]0$/$_R^D-VmPP?C,nhNd`ES=B0Q'_%)qC(kCFAUu!Z;DLll[MiUb
%,t9jpjfuq6Zt.o[-+@7nW_C<.*O5[@jf7j(S2=c=>HQ</R$!pQSnR;f*nX=JK40h;c@4fN@"iAEGiKbDEW5+\'k&@F9/Qsl$8=Fi
%F,Ble[;RP$I+%$mK5M$N63iSu?k*MpQGo-J4PsT$en!"\d+WM!GK$CrF.<PQ%"Y5tFeaV/OJ/B*^_o!p/)(3PRjS7WRS#VS!]Hb6
%;:42,`?)&TP](qMB"\=%8iG7K!8W=MZ9+:lfE_Cljl5)LlmCQ);pAJ23n7\3e"!Q*15kTro#Z\r^@XFSQF2(Zoh]sN^Sg@bFG$u;
%GcPU0U()'?Tlh^%<FCB2@_M)>.eH\XB$6G3<N^mPT_Mba<Go"5%F't$g+Y/+Fe%H._J1b6<;D`!j]XXo>mkeiJi,QSXp&Vn'Y8b5
%/(q`Rh/X*e7po6XhD:ZVmdo]be\*7t<s`snoTn'e$Ba?gn[ha`T7+?=A;I^f.lNb5L;<GhH2q(\YG"e!:VtL>en,S6iO1)Zl_Ydl
%o<!Eoa!58'"V)0uTu1oeol0"c]E/2<DT[oSpDFd0Le%::&sGrKWf-uQ47d6+)9Oep4>_r^'S'M<H5L4lEkK`iW*glC5)1l/Z28hf
%1l;t1Gc]^'Z#:a%C1N9)1'"/b/cXNr7'_ODciA=X3Nq1AnCOK'?>1ue&g)kk[+qtIf;n8rg/\2O4.l1LqDiFBZL08C#n]pg]pp%^
%9'\!lIsJKfo=<Q6eSBt7_b1b)\"C2P_kCDESA&_`!B0]$90Nok\2U4d/mC:1XJN\EZ0$>[kRNRgh1iOFl-@nPZnsc$I2Kl4ac)gu
%;-TdAkq)Yrfa4P'=\4Zi2IQ;=#4'5IKi+8)o[k,7Y&CBC#4?/S3cRNXEX<'OY`=W,Vbj8bYO7i<TItqVGj`5M?//iVb9#B2A?9gT
%""r_,.rN"kC)-S`?uFtg2gMNbYk,Y*6JT6CifN[7ljYAl/k5JbSa"31&@%mt(C[[uVK8<=VjiWNS",)'RPuqJ`<M7?>H3+2h1HcC
%'6jF)kl\gP3``Oi)X;kCZq6i/..N:0"km98@ps//bLe0L6E75"[l9[0B"NN)[<3>p7KSqH&2J@ad[7uDft`6lQFMFQDDm=_%1omN
%'eJBe[528`$Ki`J/2+<SB&A`0?G;D#3ia:Nj_#GpRL!$B0n1R-XQqL)>a!Ti]12S=.jQRgO04S(oA]C#*e9^:S"A1E:p#SuO\:28
%^@48cE]<6Qbo.Q-<7mZ:+@?=Yo^CaLo_+i3%>rtM14#9'2T<dVcGbid@2p2#nT4SUYfJ^Td-!NigC2k_V?c8Q+dU+1odX`e"SGd0
%*a\GM/+&dCh1+X#;JcN\GB&r7\7a.@5s#GV`&Tn^>GM>Be75Z5QrkV7'HbR>)TG%R7W]g-Fa90c=-ISd7N@o85;sr=7q@`s1gSF)
%i[$\eZ[Q\DF!Io83;jP8!PYO:J_BU9SaXKd/nqNG`;:7moMD$)^ZaYB)fWM,WGm&FFF&g'G5`DIAn\*Mce][f1E!GgmWlCoP'>a%
%9'*oU?TQW!WI"W4B)E367-jThfKA0H7#m%4k6?Hk_H3O5&W-aKpA<\?9ooTMefB#ijYM.#S8)[k:O3Z)LYZ;64->KQY9rV3$&-V.
%0<r,.n_W(H=?P8?WnC.]D_d-?c4KLaSW)\?=R[MZ=3+WYDD"t%@rSDc6K^c*0jEp#)eo>SQe@c)(VLS4'DGM`>e[.+MGJMP2j!il
%F96Wd"Cm_'e0$j&5Pmgq\MF>H,f7-1MDGKGCBL)[]_?Yg3AYb"PFq$LY(sR?/Eb"gDB$o*q2X=a!Z9X_E\D?)Nt#<2P-i$c\nS2_
%F;(e0I#k7MgSbjlbXH6rDNt`In[q`\7.Tp3P6.'bp%_;H);'tk&r[=_ZhAQM'kZOH)]>Pom8PL^*(Kk0kp\kRm8a@@H3&Z4Pf5A`
%[o[/\nC-)M(ZXS%@Lfl(dZ^*R.+8Bl*h/O;g4-<<0#jO]-6uiAqbP_!g%iR01G2r7pEW69(LSpg6N(#@!E+Ge^o%DY`'\(k7ar+&
%?KNj6%45)cp[eX&`[dDSCk!A.Mfq4ufZZVEf>ke:2!.1]q)SigQL&ATK+l#.9CaYrLm0:?Y*C\/Wisot4uJbmfGLWABcmf!%Dh7>
%`q>Ru<6ed>%HkE>3V#2V^mpI_R_%U^hO9!>BY/ldHn(6g)WlTe$(Dbi7+%f=!RuC46G_s2<_>Cik`W$CF8M\OT23%d%[d#o2m9XC
%4i#CWL(?_c?j6@4_0Wa"$ek8VbneS*%CJPVbO)L/6*c3bdik#9Q_pb'kil!;cSfO?]OC45Eon,Z-@P+`s*@Q5ee.\c[_(1O^f78/
%c_S@k@e/=5[)dFnTo9-lA:=SV3T&t.duRFVF8@q1VRt/NVKep/Ems^eFqVRtG2+Tle#K:YQ9e``%?ILDLQ6L'7?6Y6TkgL5A6J>-
%3JFI@?kp/#A9SUCI!N&#X70(B'V<3mBuUM]0N64\!u=G!Z1\L9e]HOl_.5.`XH1X1baSmlah6/5%g)(<DZH@uEl.6I`pcOfL>U#Z
%QEQ"P$=aeehL*PM>Pn5cS0h4soDTkNXqW(sR:]Uql:DM)9N&"\I)%b,hOnbRT'F12!WsoTSA27nk??cIh;%kPYu'eehFP$ifA94*
%';2Y-.7"&!QC`[O:4i;nRN\DA("B#A0[Q)aorEE73F<[Ci<\]5jgo!MYm%:I]RA(6Y9dJ#C,63=p57<%2T`r"*LL_2O9ZnB9s=UV
%E.nX2ciFe_[(ZW`]QC\^d]>-NUJ,lWj'n%HrJNLOKn)NCE8=ZYWAtC*WA?J)^V)Lffi%j-ad1364PW^aEB?sq#rZ?HVAs(sBpW+l
%iV':1?!ERMDKuVVde=pZfi(u'%a^WWWCJA,b6u<qH7YRZQGjIU@(,^]dE@mE,6.N!SO-*CXnLm!KFAU9dfO@d=$/tZK7!M%FN'e2
%4#"tQ6)MN;o::`e-16M4Yn+[0d+2%c`R]W&8iGqhpae3C0G=:cb&9%t&^P=5PmS=@#3I'/6a)1!-#(Pn/mBbh^M!*.(YsDc303"J
%&(L;\%OB/[.i@[)NMqoUB-Y4h.MhUrk1PkmRddb17k_rd(LG`FrItO'ek*n1$p(a3$4l+h;m+kMh.DEC,9`1[.j;?c?Rs+?M(F*Z
%EpRn`lj(%cR2J/Z^ZSOTj?-V@(Sj$Z(_"-*,0apWK8m3<_UT$bqf6rL@8P+K6CKGr$`s;-*pP4+'m;QZ0PXKn,oB.Z`^?^'>'/l4
%M\Ne:Gm2D'P9ZQhV.r8j[Op``m+fFH/WqH95hNI[mJ]-aKTh@BUK>$K^ljIu2S"8n3u!KG*h]Xu.F"(F3n5LVYJJ/hALqr)+dpfV
%o4lSMSCW:)^!h*pQ_bMF`_Q^_>2n@Ac?A[G-<PGJ@c>$WIq8fGC)JHsIl0N>A2+S4\Ke9g;HLgF?k?TDJR*OsZX[0m<4u@F#'/7>
%n@I"kJL,Y[cPnuYi*B\ImFedgi"k=f!REpFS+f4+eI[!n2&)<4^&j%ZQ8^u9BA!=]Ch!QAZ@Qq#nu'AZWn]3XSF`(HjhVR9ZN*ZJ
%0]dTgh+P7aoX,o-HT@D\fPdK^CfV"QF/23hM]6ue$qGRVgd;U1#/+bZ*\=,.GM34!7dAZ>ia+:lqHf)3BGnF]X[sXU[]b3u>g&TD
%L4"!Pnsb.7FaN8pQ>QJKYj2U:QKr\\I5W\9epG5?T'D8Rp,gW_3u>lWT0p`QMdqlaB0mWsRJ)1VmW)\a154oCUZ5PJR8^A$m.i[_
%R[)Tum.9`"$f_;j8^b"_%>^$6+"Th>*8iBR;KI+nTfQPY3]XUfaA"?j-AK@Fj8QladlPp[dB&D"7>A8c(i0eUKUDID#jnAnXrEk<
%pRZN"3G,A8%qmb"%r`D`3oCEOG7-+[C@M#t>N3]'QHor"`6m)fEYquDAPYK+Q_\I<W]F@T9bRk&KZ?03RM'-kS(GVL>](WGb_,!7
%U^(]BRug4$Kt3h=;Sb@O>FiC1XlN2/(R(5G-T'lM#nA7eQ8t7C@h!h1SO.a7$i:C:/LCl\TAV0?YsU&46#teAL^@B4@A-_7N\R<2
%5VtZX(b3F7.I;8H,I1AEiH_u>B4$#AW\p3E8X<P^2ReK!b3=r[5*>>G?1hYPQH'D54P^q*oMo8b;QHX3h--SgfM"d#8L?dbCJTG7
%lh?;LbLqCEq578/H-L*3<g-:Z24&G>/eb2Gl@5u:J8VaN,^!,XJ1kOLr!C$qkMZPk0jK8??+>tkiWX3f`Xr=Z,]B:3/`;Q/`;[uo
%p.Aok1WKDfqnfTGpp86H[i]onpp8$?9SKZtF7@/MK8lM$_Mu#*ph#B#T2<'69[8kCr3/L9>na<79-<q@^P%[2J9fdj_4U'j"$j.R
%B^j""@IF7"R!ONPYMi8ImPXNPL0lY(&IG8HUFsObjKOJkYlt6Y2#skaT&Y;%4Za_d>J[GbT*)dmoMmQG^9l)28@@>h6U$jFH3(_(
%caiIHoTAgfZ^$75Kr#\\:EQVZ^^SjnHL8eC/bs/<m+GmurHdL<rqWI3IRYVBjNKGh>L!P"*<*uR1n;GK!C):hnH3u4E;,:meC!S)
%X_f*P,((A80*>0JPo"Cf9Ita;;)h#;%_,GPXp5qUR3m@4\d82)/tJS#qYm1VCA'<>l'tE8B1HKU%c:W0fu,kA1Qlt56M`/+RN=ur
%p>l*6OVVoc]%K.*2qYEd"F];I`o2Z1r-?"U%gFOIQrmROg2aU$#K@QI[Tk\>)>'IOH@PqY)ODtiW*lRN;AtmsI/;<r%o82o9qN%n
%kV\*FEKs>+B"=rtYk^Z88'eSR4LJ:J0%PTRZnHqVck!p>^=gqpaOMNZW&:j-QfQ)OScfI-;)2qJ)(lWZ<>kF7-%T&"e9<t:*>DBm
%aoN/k]1_2Oad5`RC'j.Cnh^+ibKPHNobNTUX*=66>$\o<VU]9srIB0mN)k:&B&H4&r.J4ScT82io'Te!NCL!#ZZEG\5krlFIYPUf
%Fsk2q5D-G*M%(<M__AabJ5!+'C3@PZW)di_?>@g![]\0m!isrjYJUp_eeE6C[-!:gUXkTDO]lNHk1&+8D5al"]\I0@:UrEdZg4i/
%>sfg=F\`rX=q;Xj[6?`pVY)ODKA(kG]W;Rroe5$\VaG19adQ!Eanq"MkdC+Q)sac4+kFYm[ioT4;6F[fDW4$#EosW@dnsm]RsEM-
%ZoK@RVTh'VPM2a>rhM-rkB^tK=9.&)B'<n]05MD@_\aq=YIZ/LgFCbOg2$H=[J"5&VUOCap71iM'8MUFp?D!+Uj]eB4DA0W!P>de
%dqiaqGOmWXTV&/t7jQ)fa$t8M4,r+3CWX/oTRH:b^2"Uu\#@cAY_>h::Y0^.[,.`;O7'/n[`jG0kF`9f3d2$kl$T)V'Qg)X]LC#T
%n>47.Ma_8S\qCAOf-REnG?nh1D!CLD'u-pD>ajlV:W9oJhQQ`tc,nL0GKnpMFn]e#cr4\RdrejJNikGI>n:BjYE$*s%8?HdBAL34
%L63,iA%E08FY2lPDtICqoG40JX*:q&7D6`c+4^[U5+=_u`G#5GCM]Y>2W#SJfunDA?Ym:EqWdH-Y&?F.q=X-a\3kbL\!Zg6Oh"5J
%2)%X`%pN!2S%%qm]$\imR?=(!VM8`pqShC:ABt\1CbLLiR6+Gp3t#`*Ve;-icMLb=1=r+/Z6%Itd?emDeSM^GZ_j:RTA;Q'KsN/Y
%:#cY?l6"=V[E@]Lr(8Wfk"NU*d)HhT'?OXp];uoe$PTc80<pogaJ<X,o1NT1OEM.<L;N.hA>iMf(.0V59H*>Abam^(14D1Shh[ra
%Xn17#bQkh\;;9.h7anksATSigF/(sqM]&9!c_E3dUgP1`=:!b_N4$:fbh+i-j2QkT6J%%($,:J9#9Jl2m&eaHE*.!P7f(\EEo=)^
%PQ0duBo638SkSAUkr4mmXhLe)PdiF'''?ahAML3Q#/PYUBj**29[#JA!MuJ=&_EJBK?0TD(^W[Vn[C2^cK/P[jr0>Dk4Ylf1d=-3
%4`eA#YF6hQGL4R0.lrS;NV>!,N3-Lp<N?GL`=)(?']-1'V;WEg/U-=#XlYht<\-Y5%D/mX:Vm.5+o?/`3fT2HC[a@]DS7Ipa4@!R
%%(BO\8^)KVi\/mN"FIG7M<@AZ6ZsMf(<c4#jpdLp>HFdhg9RpMJaLmWS_.gqGE`Qcd0A?0/aTi!\n24i@lJW(BtH<2]!S(ka@CT;
%c4fntO4N(ST,Tt@n(!c2:V5XkLMkZa3uj!.bn5go;NB8gqlQVK)3BlJ^m!+7qK,q_N1J4U@ki@M4)O6&RPSXD:7TGR*-UADgmE#N
%2q@LU-W[c13[a%B`2,!]c<ZHBZg.tmo`8-+;1*B6UQ!OlE*[p4!Hnm]hA\+R\(R94GPeQ9A+rClbIbqk6gq`,AoHM].pp(T"!)^s
%,r:K;GW_<.QRCXqN'&E1?1V<b+g7g0acN)sZ#Se]]Fu`t2f>pH'4c"?X^kc+]m!Li_;!"7+n'bXDt7&:XdLj+\%MPmJ_+[E,EshX
%Sg.l>hck4?p?QV^E1bnR@PTikr&eN^Qg\cPs./hAn`0@V[%I&_d/i"Saoiot+^Lb&aVY*2Y.>q+Et$lUGIo^HZs(op_6E+1(sJm`
%X^Jcol3+^4o-F)P\Mo8E:]=`M@d145O+iqC?0EWo*JaJ*BarI<W,-5Ag[KKn3"K(GBn,n$&\AGbQ/l.;?Vbtm?G+^BUl@>)aAm,"
%*dP`N^rd1[gS7g/r[Ji2la/p)>nj%-p^"Aom<BBnDOa]RAB^YpjC?lEM2o!Mcdc.t[VUgUR/?U4D:Ss;PF4Ah]J8]:cEZl&jnsPr
%n/?LUgh5UQCYoc>`(%FbkN8iYT9fYoKY:3U'(Kf43H83,Q4faD)J"E;S<t6K*0/8<,&p1;?e"8h`W_[;B.p2D(.l+&"]mGonsPXm
%ZU()I:WN'kp>pRinmRSI.bDEWVJ_0uK@H@s)l69lj0s-kC,&Fak&)[IOtPtIF/il*riG_>lH?!9eO6:R0]gNO>I_eHh(AKV;#QR&
%QKq:YpA&lrb0F@0XdmS%+EH_NeWROnd\_&<FaBZ=h7h;4QtmDX?fL,3I(.DJ"`;a%0*E9RQU8f7$+hWK)g\p/]?NYWh2t=,Qu,[[
%inZ#L-r-n.@EIB/,YBMDjfNY'fZTN9+pFu_=a2UC$!_C!\([V?o&p9R<6Y#*\e9L;\Z%E*/-:JP_,SZflFn2*G[[ag[:Ms5X.u0)
%\!k:2]r<<6FJdX'-G6aqFA.$q$OoUmWF5/ani!/U]UYQXAa@WF5$$"D\@qQ*h83KJc](X.mg.B$8f(9]7Yc7tY-cN-`DnlnlE9Ca
%ZN5/h26[699s^nZDI3+p6Hu"(l_6DQ]IpZu\FI.1E&G80Qb$bbf'8iCm;Vs^]\SC4lg5iOk[%J?2u;k4@jQI"cq7VM;si64-L_ZB
%gsefMg<IF#Hb6\]>COrDD/)&?^3p8+FLTaBOh1u:TAT)%2KS5&33MrBD6ITGqs<osp\t!9)h-.C`8De"Wa7fpm8<F_R^5s84TjF7
%=Rci-*r@VH`02M(dlq=O`5C&&GFj'15!*1:icFHAg3p]LC/pnJp*B:ia+F/S](TS%6A2Gl*U!*<Y#@*&6CluhaS'B=QPQcmR:lHo
%o#UI-ZVpN(]1Cf6@LpRM$X8i6=5?ubdHKHZD]2p(g26Q#QOHQ4lEt<O@um^UY^Xq_I-Y/4gf/cLo4Yu=ATn,m`#mG&,SOr'I)Yj:
%TRM6s(lS\khpCQZQ%nstYqmBKUith2R`.`*fCWZ3),h7.J$R"KX6\so0tXMR_t5P5k`t".:U]NBHru8e,K<<)I$79Y`q8"*S"/ZE
%_NXkN#G:;LVMT$X]JZ7oGk:$baW*%[E[K,]XQOWE8UJP#OQE5*Q5k#\kB!i=Y+IXVS_#l9e!<9Yn);kdi;L*;kpW[[M,R"/o*s6T
%L'k<,0SkNP)&oL4#iZ_>`H]CYr4PYnEN(Uni8:FZP84WY'3>F^`+/oY0c9L2767t^J+ZD?0GaA^a4!W?6Xg7\!a=IYnLq==;Ktdi
%#Ibu\Y9DZ>:"SKMfkM#O`JF'#DdNJ><ReLhEOGY_hMCt[g.XOhL_RitI5?mp#O_K-lE8_SD[&^8Mm!uL3a=#A%0J__nMr;p+!Onc
%L]I0U#J^UP6sEiAm4PG^\8,E[.t2DKq[[?rQ7G2eV/'I\fs1ROrgN>Q_nIgD>Gi!J`=\S(]>!S`G&Xra8ca4m:"e]rj^]Z(-c3jo
%>A'OTnDE<*V[%G>+b/Cpa&DN"a-m@[phkIl]-.E9`o0EbIcs.`[#V@8XL7_k/VmIF?H['MSUNh>+iY1tKh2ph3K"G/^V/lTq-2*D
%f,X'<2QqiAkQZXaq&,%Hq`3*%8c"VI`]mV&_)S`nLV%Os$3J7>4^jD#i8KG-[R<Ds>gq6fU;J\KiEb6RG/9H\"LtW/=^eosqMom1
%A8?._U&b=9K84:SI[rE4"cmq2C=WR%5$nQ$lX$8>+mq=/jVq,j]tRCjn'&1+YF0:4M)i4h]g<L-_m^[5FGp-S+Z5SSoiu.*9kWNl
%Y#fB.l9$kHc^IXGYPd/]3d0]B(Zu.=#5)WffH;BqX8i1@SStF0jE_!cd(9-;C8_fRVB!28JtB%np1c'YrA>l.?W0``D]/7`iAP0l
%7+U2j$j"?NT(J3c;]@kmn@^_R-HWpsgS)K;m1h1XDJn8\]0'Tq1\H.EAU31=fk[r.\F'l5ZG!t3g6[]1L0T@sM<u$]a5W,qe:P)#
%7r>V\Y77-bmm^<h>d(L`EUT%U(#&L:3\Z0R:-f@q348MKI)LF^gT)qk%%T8RhRZsqmelZtT'_f.cr+t<HGau.b:*%@\I8,_)u3eJ
%mZ\#:L[HJ%/nGs?kj90K](Z]@AFWo0qVt@VYIUQN?I\;Y\[rc#G[R`+NF%N&aY$_`3nlTJk#-<%Nt7UEY<dSMgs<_`opU$TXNqJM
%YHStKj3i92q*nXJAUA:59KpF%.sT8#<p95(iGNch0[qY7DP`.r5!E)mZG#+^AjaOD>GE]T'X)jp]AYh(\8NkgF89.C5/VM,Goi=@
%F^EWJp3P1:kSVS\O@?YH^:gIUja4*UEh/Ptk@`ISTBkO#UfX]<^>l^"5X2I!lVlI79MZZ!]jAFtVtEU5-eiF7jF@kH&REQ+Z=t&"
%]t\aRLhU##fC5V(VbK?:EhM%J4528bCMO6ak_)!EY?dbhZ?Ro2<QrVZl89m375:rFpT$0?K"]ks1f*<%*<ppSj\?b:*2fTQOX?'-
%^/sI6-G`[iPeVq<21=pBM1q[pU9>56fW15'o`oj3`EGTn*(tB0N20MlF:!!$??dq0;6PP5II=jtAUF*@75GZuY@jp\^q)>SZ!3)<
%Q,:Wh)jds1BcMAUVYOPn=&''UFX6t?k4B[SFb3MT,>c$2^6$`"JE6.sQ"PE<FE[k)ZA%)iV'5nk3,;K<*6a&_Q8.lQhsc`gDD:GA
%/4WHr_pZ0'Om[+t4QQQ0NDfC?nSZupD8%LW*FUUuoj'#oK)1_`ps;re]P<pAGa7`@l[tS[?&iSaI9kIj()7l$(QHE*CRVjs0YKt%
%NF1FrfGf=lUPhb5G0=^@]->$bf!_qMAa\Cn\h:,Uh5>'G^:q3NZrb.<kY1O:2l8;_.c)3'Ggf`7GF(^eNq8)DV8iVR=0[;8h6PY)
%\5U&pRrqq8'quSR`mU&NnSTsZlf*eGbMEVt7tkV*XnU$P<HpW&FQ_Z7-.Yq79QJb9^7m:U],Bf-`pt[h?OPGL*!!TqX_/GC;d&PV
%`C$p`]F15gJb,7K=>R$i@sZA#rAUGAQL=rUS2W*B#2S<uekqI_"8DSm%6pBP>$c!j2Daj_(5TZF)/H8D%O3?;p^XQ@H7;62S_"Qo
%3-aQC0aJL`6LTPb]fbDH+lL!><gB^$Ssb,,H+.0-2"68cT7c`8LO'aKmok73e)d5ej:I/c@B[+\n*irCf:ZH"4eFioCk6`L:]ip1
%p'OdIRn'_bGCFMaP3[8$DP.@(ae9)hm0e:6\'>,iL+h"-6*G^3;8;OaerT<tckc+BLn&]SRm&HO/PJRG>4*,P"VcuDja(4$lE"d+
%6J!S.13>*S'RIHB<lS.+Vu:(/5`@>]=t'(O?&OhmYNK)e>d'[,`cbTE.2&&V;\XS47S6lAYBXU25Po<>!l,)b4S5Q:TH)b1@QN6N
%(Y$47jR2:W@A<f@)"HD%MiKX0qC,th"L-H-pshJALPC=;a=erBc2b_gP"Q+pIaU[KU\=@N@W(VCq2bRqh?%dnbUr"!6*pqVOGFUs
%hUk+>,)+&gOC20#G3rKoKn:HnEX)N\?6f7e=Q=_\_g49B\bMZs&Ok8Q!LS%in>p'kd?HU3I#+l<K$V;O$:9DQb88>f?T5br,BWYq
%eg5l,O$F?2]AbqeUO\:9lFY4?K7WuOS9__`9]JZ8DG5!OL`9B-@0.ERZ[5C_ma=//,7/7nK_IY`dZl]Kjf&_Spp']f4p!$!'#k9c
%#T0ih>N`5eA%/eQ9r!/kTiD[lBG4`'c6;MXUJ2u'6W1e">Ns*c`L7d9Xa.#4\,<\c:j>1d=PEnLk-)YN]/o2MYX,*LYa?Iq\:Pu(
%!78oYIYa4Q82%4^ZE0nLdM;g-HHD$,fD!Z1aZYn;+Up_a.u.EK_+%H:.?O!E\"^+DE9oSHpVE&3'd2@DhKt$&Gm]88r:4BNJ$R/O
%9:+gV7Wq)CGB)*7WRI<,RmP("8)@2^9\+rM(Z'*LGo#&jq&J#2%Ja_&TXT.n(rU/D8qbHi`<ZZmQW9D&qqQgpR>Tbo:k:<:2`ts4
%MR7A_86^J`5q@\%UIXlcp.1WUa)'++'/)W:VAXpGj]3H>K\U\N@_01*l>5`Kp1o^0IQT6fiV+f[fE6q$F0;5sX32rG+(.^mdI0d6
%_-kQF<$VfTX'_u`,o@T:L+11R/5bWZEbIdo"oq4Rc<Rt>X>?,UZ#*6/^S%OtfQEr3Lu_]c*2XI1"@Z70XZ]+:$uDG(7TEAY-Wt/<
%$]l](M/b&n<6.O/^EAir;DlF:"#tP-McGMN>a,uC<,_?F;&GKFb/"N[g"'A%+4;,ucD2MtL:*`C&W#RgVJbU;EsTH:P\D[*VOufQ
%Tot/4[:Wdb?R"mSbHt'PG-C>plq"K8#2bG/lVLqX1nf$g#gqe/e:nOBiS?6qWB:fm[9Y?Hi\'(s;b<j_mm^J[a%(T(1)IO*>Ft)k
%pG2qrReI)V2SmD;%"U#nPq"87jG!b87ah#lj!P.tTN@Rc=[K;$%=+_R\6V45)%#%,(_!tlW&t\-H,.`8$<b;JkADO'9oe4V!?cA'
%D$kT2=G/Et7gZp9]JV_LOkUm^LW>nM-G@`If-uN.K5W'Wpc8"TMR3U@H!u>Q^dLQsIgEsu>U@Pr)"E9F=EA!XY??-EqQ4`<A5Vj?
%(q,*.KUenl$;.pd!\&l`\,\eBZod7.W@kItjRnLcH'KrZ[h@Is]LBUI@^BniZ]$:+9Gc&#+.KG1dO>="@-%2?H>Ta*q'ZI\]jqnj
%,"HS\/Y\SVZ2;fjA!_GFQ_fUGer:?^U6L6YJ9c:0%6Ba*JR$$OLNl5.50(#]2XZi_.ABqI&oskq+NH!a1/*q2D=s@J![/AOnj9FW
%I1kqX2&=%=)DK(@pOak#)7mJSBKm%RR[2nRo=]f2Eb]GAD72k<,shXBr<cRQ,Z#&'5Q[W%$;$&um,WcE:D6pcJ/M2CO5%qGb1b'?
%>W2rLMd@:NLU5QiX&u9_C@ke:LJ6IU@Z+RRf1e]6)F&nF71hO>2eWi(ZJeRI_!V8YSl_`!n3\U<`B$gU3iFM80!5Y7h*llSm@'qI
%7iLCeOI6KTZdO6d%#nl]_Yl*N0I$_["g2"(:>n\Z?j7%[M%V:F3JI$[hmK7aR3,@WS>d!%ql2%rChe"tmOY'ji^)5VORT:r-%7k"
%MJ<]fn_$soT&qM6jF[o`/4I*MGiMi$Thk#rXBU6qJXpqW@Vat/7V.bcBqGLY1"a`[9/OOudjhMnjn:05S1MQiamQ<\jF'hVRb,+1
%:8&jhhf((bZV_jD_PXlDFJHmB%I$?CD#uZ];s$LQcmJS&D/QeOH$@l4O`&V*4_X6+UtbQG\p_GGJcT^fl)$':^uTopFQ6Ig*(p*A
%6gE*:/HrRAoEDk:CdT[69(oW;[1VJ_>s[IAPPEhdT!Vm08[&:GDnGLaABS4Ji"9foe_rCU<pn!a]&8l8P!"=3)f)Is>I,3Oip5l=
%&m=3\:<PfVBKpA*0*c[(;q],YF=clu53QuZjp"SP,\QBeiW6J3ZMI!UaP@b4c)Ql4U6kqu2RM^oIq1N9o7QmOZ)YJiD+uVM-(CO(
%VB5hn2Q;-.f,X'+B^$5*kXS=uPg)5@bpg<;r>P!oCJ(ZJPrT:B5Mi+qi1,I$A<a"dh6$\df`u,,g!-E6;HJm7C5m'9dJ?pECMZA1
%[f0\cElrAB(YDGH5/"#!`sq.O#J*n-@qTl7).)&Dd?'n<7K"&\,A)5';`j(1kL/9LPfg?=WMs8I#hRLqg`i)0dcg#pDC6ZrT,Yal
%IYY;U[gMXOd?#.@FpA`*VGhBC/#L-3=?D&/2_Hqq5R7q-_a7lAq*cW2;f!@W`p).&<#MV)TQbG:]]hNOQ/,'$$7.Q)4>>k;"P,$W
%@@aZ[/ROn!$X;B"rI_EM".KAJps*?6l5/r1`Yh+$6S!")LaTQ^iWjEs.=9M;WgURF[Qkap=1Z;`A!/FQK%C>^&ZErb*KRTB?q^7X
%U"1s1l>T8-3)[I,=N$On/a$>4WGF..X/*M)S56ha%s7D#ja8#\MJDs3dJ<TY54r)CLs;9No5SP@WKqJeG^R)m:VE(_#@G(;l#Ju@
%?<=O^5NGEQ5>oe)?H`(QH-43@bPBY'q0oEGn30q!Vd@Qeb-\?#kEALgE<<Sc^?=qGI%.]AR/P54;j<0%)Q*Ej5?m@%.9@^uh5D^K
%Lk_`]-FMnc:36Q4&ZKXu:TJ),.0lY,2C,V,gNY6JPRQTmlrs@kZ6)8$.S2m?1T-h>e!e`b9&-Kl^6QfMMg*G2'kuGu+Y3qI_f*8D
%X5pS!2Z+L^Ar&Hj_GIalZWVH!%Wj-3If#L;dZ'NQ&=sumej,SUYS?EtQ>LFkhW$S445]1rRG9mE#s!dscCh&%W99Kq`gSgf`!G>a
%h!Xta5@gcqmiD7#Qefb0>^id@DO:8675kR>h0gKQ[47D^WHeV.cpg%17,Xnt)-XjRaXJ!_+o4<B8Qs!3B62P"l[@[1mYDJobO=j=
%b>2j(-_%$E$:=/[pPS3MdMb[L5T@`F8hg<209qN:KL"9Id(!!%M/dbmM5YsFYJ7"Uk6H2RTTV=DXWC27N2C9H$&UBtCC1m41t4-8
%KjFBJ)ndZ>V-G7C;p2gD3&O&[VNG2!9M&Zh(K+8`QH]53dLuB[ER[q,:.1[@C)utH[Q8VGD4:orj3Ac:CMd:4NnV8ogT.QdD12aO
%Rd6@-<tJ*>E-56VD*+k.)poqm46aA(LH(?pW*$cdC?D\!,%.bpES8P#IJ(1b+0,K"[^7d?D&L9mpVd5!?KDs50NYs_AcCVl-k6L*
%T$F\5#8Q"G-7CbjO:%Ic;>hmZiH4NbZF<]9Z@/$"DH)Zf;$t*J44Iqs&kV2T4@S.+R3LD.Fli==j?*Kodaf-dMAiFX&4G1RPFH$U
%_)eN#>Z'Td,73U7)1"p^P^9$p8-&TjSZ")@>t6].3drG<Xi+]?7;Mq*,[(#MFrD9u&7\!=,CD9h)HO)Q^4m0LIcDmk&oh#/A+Ch&
%8XQHX<XQ<7oL?OHci6G0g0T]<2Crk?`jlu#R?eS_2bKU;&A9NB0R=rU2P/(Ef0jP)B2PQ=.E[2Q]d\G&EY<''quubOKuR)'LE4&L
%DL;#197tu"&,5>P%D29RH1udlD,dNfIV`!EX!Q0/JjJq\6VLH^.;;@flp[C`M[epn[aJ886i)T-^^T,>[8$ZmNgNo/_EX1d(dtP3
%-lo*melDK89h>HJU?55ra'->H.I[@-Kk5)CZ)BNPYa]JUI\/gtCgLQ!H$79V<LPD>H9r`XMB\k@B8Th\DH'%^Ek8[(:RV[D&8]Fj
%)&ci<^3/t^b.J2`"sK3."-n/S]2;p=RE'LBg%s@gQ$K;c*hTOX>M"+UMXs#:]:r,i-^Qp)]qM!<F#Qg9Y+4p</+X<?k>tXFXj+\C
%f81VLk5@P/1Z_Q#H#dutL0MF(1@L"n0`#AVd\lhnpk$(1./\ks%WuteYk>+4k(Kjb2YBt@#]<2/eB;]_B0J>-bA;L(R0K)(S;WGn
%b-MQ15AO/0,RG*HqO8KEqO3!kQl_sb?12mL.Vkru3^;^+g9)mUclfYe(*daqD4(gNom!7qBE&MbT!bu!l@Z^^E^<7Kg/k+;hp9up
%pdnC)&felagh*R!^>u5&^2u*AV&g%V)1bhQQ]W].H[A+.8cRO?kK0ZpGJ$k[\`CE`AY<h*f#.T+Mg[DB"\[cADRX;cGc+4e(bnFU
%TrLf@q;>f6,$@UkOf`Hu5`mUplcKDI2KGJ??(9S%.[#4+s,&"'fZKNpahkWs0.E'<%=Pr](:LMG,cc%6p%C/HgC5f@PQJ[YcE/Nh
%iq;Ms=c[dl@B^bMHTtGn-`bh4^*ld&DSEJ+n&P:KHP?_bUIBG87/Q8D4B150P=9a]re3J9cP5JX-<Y`#-r8Z.'PnH!l7:u@RGCWQ
%cU`(/2E"TZ0Cb8!Rj:'ZCr5;b9cr"+dQ(f0H&&,m3c+1^+\a--7->qulpbjLR:'gp:elhq0D@UEe4#^)gB0do'qF=#%dQ^V$m1^U
%=(/UP`4\[eY)o'gcNF%Kd6rC^R+u)?XM2HjjWeE[Q[CmBa<b,N.?e[WK^ROf^h4a0<&.G^[`b)GZ^8e0>o!.gL":XNS.(U@a=SL.
%&f68$'Yp8T+-g2F(VYbb,XFt@fj1[\Y6j7?JmJO(X5R;V.[AiGW>5<X\pWB]>UYc@]67AgfFP]Q*)l.q<P@%gi.qYbQ+l0.C84kD
%9$?Y\gUUB=Hkb/*rSZO2BN?Xqo/IJ3[@P@89#Z6F^&C1)GZ$0f]73d1J=EPRqiU9S>d$AXmjY?tUV9X2+0JYsG]fq>C[Ubu+S=6\
%6p@+9@ND:OY;R4)XBWDgp)D?G;)oDR#E9lal$o_5_m/%ejd-DdPZOa4TT#/I>f$6T7&jYF:4l1H;gT,6F'tJS,j.+FUj='f?UoWE
%aFeS@]cb+bqG+5<ojK#)8UPRWp5H/F?`thi)"ZJQ.poJ-V]kk!kq2)AUQS5('6D2VRk2G2<^`g_qRc5\pgu\"VH=$;>;dR7L93+4
%@4dsC,\;b=jm<Ci@hRJsfj0e"<Q69j3.GPr'_!\-@p8'GMMa($VQ`j6L`9P1T.fPpX6L@fl<dHA-Pmk/g&bV`fI'bN-eS(fWkprb
%IF#)Jlr+Uh?X)1W\SsKJ@@s'.,0/'&/F4#f%X_9K6je<1@@pe)T<,9m>[a7pGJ-UGr49a/\Z3C:0(,&@p@/onW2ad$gA?#HI<&>9
%Jsaea(&#bo0Gj0Vd_\2%mFABmm#rC;1,SWWKmdu_-qq&FU;B+)WkL%he40lCjI5r8Y8pj%?J(%E=o?CY5&!rWn\:#rlGhhd6piBh
%gOX%1.I<8!lJoAC^9Xt=Y,^rGr!NWl;qNJLJ5!r)B++S>KNW0#-s!Es]Wb2WY5[rEl%s/I0'ne&lBA%8HpqJ9gaoRO4MIo$:PeMG
%WXmMO<29e/rK#)jr^R@njA>[r4i)WG_ERLW<.)V+.RgXP+&QY=p8s!ok0u:JWjM.NSnJjIOD)u4qmL&hS:YTrnP_,%^A9F1kjOD]
%qA)<Fi]5"jP2tDIPZ1dTh:drN"A%YIG2gr+?,s>C#Z+jcLK\W-q6&S6"Fjr[D7'_Ha0_fS90#.F[kY/R7QkE7-U5R&dtO\n97lNE
%ZcHBd$Z+r`TnL[6H24(iKJ%c-q<-5t#15W)or.`X5P-AEVdBA3?8lWfs$JE(;L8/rNqq$DIJMb2aY="jn,M,o:+,Z(5Ik//>'A(a
%0E56j:Y#4>8[k>#^\eW<CqFuSe"Jn]`O3`/d5N.BF0$Ju2m%.o[TMV^b%K0&QOF>mMd&ANe#/Si\4_!(>LW>O\u$R4Z;ST<X)]_2
%Bd"GL'8\V$\T-@2(+#q/-!Wb<+Vit/Pr*KNVDh)IRc%&Il<1ek)b,P$FMklh@%l;?"S>ttX[$Ym\^+rg<hM=7,]`RJG#es!9d/Z%
%YM`Z,R^Aba(](G>n2aB7F<WW=S>!@F4!_T#4e+a&mu[IqC>Y=6%tiE(i:9qiD[;hqZ2<*V&\AdjJFT?>[f;u5p[!cI=ge=FhmN4i
%+H((d.nsTtJhTOJ)rqUj832oq"R*M/?fngnllB6r]BP&6De@SE\p*C(dTr+b1@1$WXp,gId=G(`gs("PZ]A;;k3/8'n$W(U(O5N1
%"[+;:'1e)H0'h;rp;=sS'_8WC_\4fFC$mC!HT4@-q7+_):$$ihFGZB[VGKqqn$I`QS[Q?gSh`0[1'ZHBDjZ::#)PSD6(RaiS5+Lg
%L'KBSO=Z9o;^`Dr''QuhcR3cU]DDML3Jb^K<#`O>?i?G0pMhC*s)Q%fE9k8Ymc36>J)dKmVs+$0AUF-Zr]ALblKS1)Fc$BT@p%N=
%<:skh^EF*51&ClDBa^`Q("&(f>'JuGJA-NR_KeVpp3eY83]/ZgHh7+kb"jsmajVT%mJH$i:YUL82P_;&^\eZ3+S$QA9d".VT$iu+
%U5KOC`lMn@#EO;[WU-Z4lg-q)S2gCP]*Jm86B7[dIqa)2k<<4@mEV*eLE.B!5/&!eOfH1NXtqm$h*<i=j@$#F93#"R\6[fj!@p:4
%g[in+Bqs6ua4!MgSjRmrSX[&P6M\7@CsSHCk#)X]Uj@ME;"Eme`lkuB3IW1&'XPLY.uesL5;HS]9T?:Z6/7kVGBtZE]pnAB2n?TU
%m=>kAQC^!\hX1%3<OE$Xea^"<1rF,f&=cSRm94"F?i[-jY&JdFD%F!`+Be?\W>EjtBhb6<Ap,!L,jn]<9tu+TF[G0GD-_S$rlqP#
%=MF`CrTrD.-gTA#Sij^_o><nVT5HjB4N!M(2F!HCYFSft5t#p9a/7D%FJK&r^](bAXW<gTLM*5t5A^(1Fge0Z[.\gX.l2+D/N7E`
%9&ROX&!tMU[hbIPr1GUZE;!Q0Gj]F(M;+FWp1A:?j-e/!G48^SSpg:5l`DWBlIL'd4uPS8C/$WG,Y.9r+.SaCGd4i!d#RP&>tLB(
%Ze&Q6+-7^+2ma%O:3RJJJmk.<I-8Yi!H/E[cb')?*sQ<=]cZgrS**-$^$4tbpZUtE!H3s%*N>XdDggF6er8^(P4>++KAX8FnSGQ'
%B[>Y@Mp7l79'DoCX34e@bF@)[;7fkfnAsV,r2%pU5)2kEo^cak,rfJpgTDJ#d>[hl&Z0>2m&TisAg7@6ARGC@B/jUR<-79P#]8D#
%%aV?DEMiBM5KXbXqO#(#_/ifG$_3]$.l9%sIb!EPq"4ZV9ogB@1uMEl<%Wq&;$!$(Ct4_Z!,b`1VoObsg_r19mMIYA-ra22W]b*?
%*.msq"MbU(?qnOKaL$8$@,oRiY<`ZV3&%RFF6`4!50:M63<TGMVphic7MkCEG]R`9PBC`4g,E<,\FT,n,K(U`a_r->X'<a6W3O/*
%V.1W+rG:O\b[pool$"'u,N.Y^['>MF%Ip?59HsK7DM'"p:=a]b'[g>5<7fZ.nM,B3;QHZJ6*H>_3fa>2l&O7gjj&;g.<N6`8P=AB
%F*o)#^_d)ms+]`E@lXs@2Z(Du`iYTWl$dWeHR_C1M[/&JiY1M.agtdg/^nlj-&[er`8gL#^*h\P!;#I;Z.\lHAlGOo[a`8n8hgb"
%ZPus5FVIih@p4MK"@bpSlu8rHY'rGkU"n)Ad%lDQ:7RYqHil'Ne5TYASRG;5h?Ni/M+tC@AF[%`:=(@oAoHJr<)5S.RqSlt4!k"i
%k,'.4!?GsDGMSb)S(<eB4OE(.X3k=e]K&8Mii)[/S_%rLPf2EMoZp%o<7T#a8K8A^*mkK];G,rIq1qb?E9q4reS)0Oe8"'/`)6+<
%l[(EaeF](8j#.hB.m6Bu8K9T0E>2&l84qm?q2!(Fn:mhdY39tRf@A]Y0I%`&;BGgkAqe8=oJ+HtUGXQl3j)l1A==6FAom9FDH>Bn
%LAeTM'b7ID-f(kC/@XHWRh\\@=+gBoRMC"'[=>;]@=JGqe?''FoP.-6KW8)52*;kbWmsZ[*k$-jhJS,IO=;PlGW6Zeg#UMXD0S$^
%EO-=o5i&#.<ND6#*Ze\=C*F)tLNbhM)C+/2'PSE?5iiY<4RAuj\%3Tg`s>Gjn??d,qK+fh3_;ZkpmB,g*iQ=_*Y.X^3-FNcT"3h=
%.=Ib^2EVtN!3!)h5f:LuB`]N2@?5>O3-)arko(Ud>`524Sc/b?Jqf&_,f5"nDlB6c:;b!.VqK\93D%-+5tEKmFuW*Q@&/O4_o:NS
%Yj:<f*feXGnC/?O"1oRKouUE";8^<1:[*Mq3a'A<ISXZto&2m<0cD*n^cEjjn8NVq9Qo9b^>\$iPX7I<_:)07n??Oa41ZFB5F])X
%cZ'C)LNbiHZI[$KGX!-IYFdj.4`3%NVR?&d=NX)4DMR7nJH62jLT:VBB%0Bk*qjm%iisa_I`'(^:DoTn1/>a)iS>!!71.(.\_%kP
%m8/)^"<&<kmrhgf2lCP<3,X&t`:C[t],cpUduJ3gGY1tae:r`'odN"O_o(Hh%S&HtO(ihuAtQr(2E^>R8p@h_!JrPk2a$HiHlK6p
%cq"TVLR[+Ibp42K%e"RcS;B=RWrC@_LJr&LSkmo+E4g3i-Z41]PoSHl&t:pj/oFJ&_is6BNnNo@aA^<Nm8G7@l@t&rr88Hk;ZgE&
%h=,BZ.e0ETGW=Iff#_`'dI=AI)I(B%lR17YeF7FeFe=6-Vf-f>gq)sbSgSB"fPf5."^I)8n8M@]o99[p7tW4]]&@(Y`n8]+Yk=G`
%2EYdsDVo>eD#fsP2*;kMUt^ddT!I>6n;'m;VOaaG@HYS?rL#%bCq:N+%Za:W*E1C"jG&H-],aX\XeF3&4KR_q5=me(fZ12^ZJ7rN
%]G`1K'Ee$dfdN+gYMK-);]V$2K4CT4hLDQ7LLd#>atB^BD/$PnY$M"V`dkBFQes[T-.Y7:I^\sI=FRIjRO<Nu_dL0)G]6J#I[Ld&
%F*hNXp&/sNo#ks:IKWeZ1["13]@A<ApLfe9?iP0?i6,t&H`qjIRiX_^T3_:JGO`]A)o^Ckql=@Zs1&_RhX#Wqo$`AZF7JgnN=5J%
%r-n!^J(oEXq1dX`pGQA:mPGDcr8!k1_i;^oSmDBgjBd*$jltWMs82WYhI#GPXNnBL^X##j$pXBn9Acqcr4.$"G5q=6lM(+,Q2PZO
%k/I;b(XLdfS)O9PYA`6cqt&q9C\RGFhBeaH;baGYHhuh!9Om&;b"VX,p[a(hp>S]LH/m20@e6eZgVqEViUOb#LGX?s(gl4X*1hQp
%4s'Q]Y9,[o&t^d]?!_j)Y]nQa3W\^<jb(H05LG$8Sa@Lam`9Ucr9E_I[(?.u(Kfg`?`gY#]?NP^bk_(bQ+OO&m2't7(4:5_i4tqR
%)7nBPZTAut*hIfZlKP]tqZk;(RgZ(ir9*G@:G\W)hKle/=.T/nprhIu+R\)M1F-U62kN8s?_#mJ,\%@7G&$W`\uq/Hmbq?m*F&E7
%<I2)2!#6:$D_nPMXgs5'hEKY8:ObL[-oQ6TX9X)bo1>BX#u;Acb9J[T<qkuiF>*EiS[j,b$X2`4)nYG0Y^1fF>W@%eg\q%or<@*s
%3boMF<QMK$I^a@nm`Y]5\GG7Kh8@c)04):ufQdC9$U;b]++A,NWH_:R!8%/B61'4QQB,X/FEi;2*.$9s0%N7T=aH]OK;s@q[@1`;
%Z>cLA^Z="IMu6QXh!5(<FfeMjD0'uDUV%E)Tj,LQqVld&CR_Y7[r.VQMdP>m;nY!-^Z@\UURgNh(>Ae-G@@uVLSa]/]W:apIou,b
%c*+P$c+f[T0AX;2)`\E&kM+%Kc$l`YI"/F"&"h[UjrYLX!bo*gXVBG:4D2*g2D+o?15EO<XMg.?0'sXT[BD[8VH=Vf5rRk7hSY,X
%QKlZ_B0PpcLNa^8#_DdAlf4^eHhbu^Yo*EeN4d['g?VOgJFVoFmTa7^-Whp<hr6Z;CY$_kr7:6?%DKj=Lc/SrHT1]Ng6]&>i5YM9
%2R]#"=;$T[dAHPMh'0Va9R$C(nu.W9pUo3me+(Ll7I-)pg!r`2X3WD'ril*m](9_1l0A6U#_uC9GWl(EoDRJ146>8cbHLSq4LHd;
%(*38'%5+1SrUK;bo+pZu"ZLnOfOMSpn<qMb:HN3\0C^FCpa>\0du@FP$fYg2I/E*L/cK;,V&r4uJBo8Y=lSi/CVDqF^%TZE,DR'g
%no+*geQMibkM4eAHl1aab3!e0ar?pXYQ++FeJI>4Dm&5t^&Dg]OM;<g>%`)f[(a1ojhdk?q\PlA?J0:IpS8GZI/,00]DBj-NmL+<
%pI[M9*kbn"'L?f@>]iEiG./90\8C@uT.S)O*F%1SN*=[:YC:;9?iTHiiR=&Bf3c,>4"gsR%fWSsbOB22<,+(64b$mMpY5/d18D,Z
%Yh&76PmqSsffQt/0U[?2iQRQ_qph*M2\&p8>l,N#R?dTYk@^sdIXcG$qXlE?Q-ZPajVMR4L\j$VXKLts_+4HllUtHKc`DN(pYa9'
%Vh`?G:Zn/cGsRuhb.k)slh$[E3M29Y@J9LA427-3+s7tMZRmNXjEqbpH2W^6(/""3booIF#M^F!<W:\NfhhZnEFn8ako2\U+u@G7
%IEPu)*]9DEUp#\#qk+eZF-eh'pX@CK(>Q["f<4o[rpWTf;[J5n<m<Mdn87;Xf<-`F`k%U#+s3uer!"1MTksC*omCQB_me/lm<!^B
%DGg1iGHU]!Y0aU@5>W,"Y7PFIDcUX::"\O\U(5*6-GSEc:BA?4pPnWSp,BfiNAB)9_mcd5#.&_75D$139$8.8NVY\%,Hc`HRmM.7
%rH!,GmDF9bFXmT:pqCe/`eXG(n+5.((OiMo>!KX.G\c?YNP3@_Im#Y*jKI[/c#hOSN7ptg*e.@?Hi*0\jZfBVQ>O-akG%Ikhs?NU
%Fh*-9edZ;S)!ZDh]N+.?X^'TTrT98K>CXEaFR@nRNNItCc-#M*j]-TNqQ1iH%l`+TRiD/=\Fm&rgrDq3@INCE$>o(\W,FhG\?YPr
%eX+gacX.fgm.+IDppU%[ccha@pX\B:)`p+t)]PtESbYTH:gOh8W,@"^kM%ld='oiJ,br(W.?/7q;6Dhr='f^W5C.*G0&Q[%\@(I/
%(G+;)[6GI>\kFV+S0C#>_Gi/fOUG$&^2N>gY4C`AV7Ve"chG01pbk52BY7DR^O5E8YA:*0p>N3hI-9;]S+W70YC9](\o*"YYj5Cc
%a2XI_P0L*BSb^AVmHA#sD;D_SBcLd:\bGUY!a'(fm'6(mo68ZV\dU^Yb1bIl$O83.0>9h[op).R#MYa:(Uq\m559NeY3^d&\,P!S
%_oKESLGNj%Xr!_Un#sq-]_#ljj6jD8[Gc,B4kC.8s*T'_H?Hd4qque8V:.(O`p-@(FHB][#3oP=2gJ-4e_AW,RIum<(1-t-Y\Q:p
%o$f0kQB&+udf/Ug]IRgkak`6DU[*,)\,=I$E74D,2`Ag\Q*_-I(H2i\?$[m\jSlQVhk.Z2,9M2:X=PImqSEtjfP(5-6FjnMY5KIU
%bi.)^c68_V[C18=gVs+Ml](2hiE4=tjNM66"j:]XZ+?.3HJ!i22-ju5Er1!^h3me^IcJAMY#d3Y3H!fmfTu5tiqIoRDUeFT;VF]&
%c;5:KI@]Cip@6,u<-ppH#n!'&XXBtD$`_FUPW%fMO0rA@bm8)+5]3@#RP*,(STMXDFa?YASJF_F>3hc:dLPTCd2`qb0EB#7h#1;g
%Amr0RJq%[^/=)e"p"-bM)s,;lRuJdO9?S.?_RY"`ricOeG%U:$b9o*(F"@1<ilk;*H8dYSp%u.bV>Wo&nFZjT^TNl2]0Ys#53ML2
%<rC*OcgL2<B="BI/*>-rU,ZB__#ME,LF[:%f=h3gqXj@9Zg5),LYHhnZY.3MhJ>"hK>1XRYl*V\rdj8ADc6>0#JGG@D;De[rd8YG
%q44Rqj;ac:CjZL!^5Sjt>^^a<i*3,EU2pFg>jf=u?b-*sbPUtPisuB1IpLn13:^:CC.6T)E!hkN"Jq!9Y*1[:;.Z60Ae^MN`027P
%iD?2eg[b`.[F+Z(0uW?Vh#_<->#Z<Y6i?'\9#[_A]kOU._f,PYK7.A2h=k8Nj)+LC1uD_2NOerBmiNb8Pc%5Db*5C4g999"ZNmU<
%DoHX,5Adl^@laWPr9!#8it?B#ABV#V&N/J%k02i^:Ufk00sgZPf*b+Yq<Oe3QQ]*FbfkM1/']\0J%%^hoDXrE=h:04ruH@e<WGeh
%'^U%::#!X6eNl;0Rs*GbCIHb[S:>&3_oB0NrSPd?jSb.K`t5XC(]W+K9o$);iN!29=C0Hhc,+:gT3Iq\is(`kr5-;3+!0H,3!#j=
%>6!p*YHq'.5KZ1V^-B#;77nM#jGn`3Pb:O]B.'K89$^FBnI]FEPW$fM45jE*25ak6Vk^W((s==oC^cmnlDj_eZC93:_.#mEA2Oe`
%pj33]`:Mm":5!e,`7g2?;/X%VZ$h+EnQ3!$])1^jk5+`S:S,#io?tVN=.;]u=1?&%q^[.ZrH3DGi9ePiQ`lnAEW,7%59&q?k;Vbi
%e*GQX$(Zdj`X!pO_PpOq$$nH-m23YND/5@Q_<R)dbh7hUdc5,q;d)rj1qMft7S\AM-L\>/GX).@PH\q['E1gX>,Sr[)T&Db)97/N
%Z<)8IdjAX?r;3)?IeI&sJ!rBs5Ag,LlNS>A&+Jo&Q6?A-AqIIM\[Zjjp8*)If6,Q9FUkqJ^DAYsc[T(WE\IClkAi"]"3)X2GtkgJ
%GlGtQdq=0F)p*NMT/PTQaA8-\7WmV^AMt?;f=oPCSf<s9>JSIZiqgjI7&*Mki(Yj!Uge2b"`$@YYBf*LfC7dq*kS*Rk4P7_+V.qa
%>&+d2jP^K4f1b=gLG(VKLeiNA_bYLsn),XtYu99Y%XBlomF6nRI),e1NH<1o+a.sU@44[MR1]K6Gai</6.FTMR-WBlo;hhZhpQm"
%r82][hn%d+U:I`P*a9"RT58nTc+`!AmI-cpFQLf+Q;1Pb4oOSJqoZ1M^Vc[jo`ICbZ*E#G55=a>iU8\HIc4:P]57usS%6-/UD_:%
%f$V$a)nt-GUL!@R2`oh+*4E=_\"<+XT97TnA6Xl/;k2_,qhsRkNuJfh)J77=GFo6[Df^2?kP'?FqfZQPi*f'<K%\q)n`!K.5fU[o
%`i7XkBR]'^r/N2m$_-^B#1<u'rp9#\`8liqfmHXMs*2bh!KH*ETi$5p07SIp+&b=T5AYOeFdd0<c-)NIb8Uf;5Idus\g>a:5G!6"
%7Z9i]'+"c#hAhT&e,ISLXY[PXmdTn'R^Cba.\1ENVk!rTQ9X\0=Ku_4E;n#(#PAID+5CmP+#'I.D=rY:#>"StrU<B7Hf@cs-N&/f
%TXbA7%CHse^VK>eYUbcHBCe=R>^t+?X"GFD(L#]Wds`k@-=lAoIikh_gP>S?gmG_&gkW#@NAH&K)hAj59Nr:\1U_W!/al(&a0b<Q
%mXok=LuG*!3LtHkq,'Y/XI]Z-9'^al)c7[RN.);aIS%ch9XQ`E)uUXj>gdmRL0ok)]P0Q>kKM2)dk%;c/F*Q5]:MB^_,B"I/>T*P
%2P2-TW,\8[fQ6<3EorK)FOd?#%Y$s34NF?o<<r!;[ZflGmeLZ\D>$/d('MOId8$8\RY:7=-@*$aA(20[D5YVZ&&;p@k0a-d(3pBR
%OmA@JmFMl95MuD>ct7@J:./9lUXCJ\@)+R%j>ga0LWR=Aelcgk5P`rJQFGcIdCC#!(7S*<2!;LL[ek+j;VI5GRHn=8@rLej&5!n,
%>3B(R2NUO%BuB)\NtID[O=j-ed6_$$2OjdWTsV?rPW&(X7MF3+(Y@P,b0MIHhfV+mIOm+=jiu!:B/Ia%KTkWZK'bmNeBOA!Vp3W1
%U.7c#O$K:(RFqEdKJ\[o]ta<7Qu4L!V_Tp]:9WTHHNf2[f$*-+\OC,G+Kn<l)/Gj=>D()P7CSpM:Mi[VS*uiWRLao!Gth(`RDmLE
%Y;*VP'+hpLdA00)PUg>bOIdFXrL)@:e),Mn]L3eT?J(PK`Et:C6I":hb.leUbPJW]Sm=Bd#$J4tD\]DH,pouR;Q(I)SZ,>c2-dc)
%d.W7'e@'..9<CF#,WFO_DZ.DC]DQr^m55DJo5F*'F5Z32q:8[FX)G-m[f)oeeOXqJb:kS#k08LT5.s,Wq[X#0k$s$$0=Rc>[8NY]
%IU7OPoMNo^g-&MCb%J5/O'1p1bjNnZ=ET[jl(KfCf5KWp*guqc8'e7T*fn[_ou^DaNhVs0q4(KsjDYT)gCeAH\a(c4RmFp32nh47
%c`]OfrTinJSQdmG=qNpZ&LcMOI'lWLXWg7ob.4Y!/)rjmk:)J[?>Vk0DEE@?nD)mF\$+fSeL,jlIGK/@l!]-#Qr\ZLq=`.HPr^er
%SZQW%WG>`#qXpkVB`(3]YZu[bL7@mGH)e$>-GRX>5JE]+:SuDFI)0(,TD6MdIrbCENQXP<r;%m-o)11^L0lOahgJK]ItD^q2PUfE
%]4SM;/)1&Yol'$aV>0bnDl/VNG0n,#-g*E(e(hR#bJj'o$Z5\W+(g!reX\@88ZdJ_]t%Akm[AX[BYDr&R!X@3I4P>6^OQprehhk+
%gHToNZbr/G=p,j%HF3M,q=`P=6Ccfcgpm)@Aq"jo_\[YA0*UL-g2g>uHpC<b.kM8d1egnKNZjgZ$PQ+\Up"iAVWMF;1jM!s1,Tjp
%P,:7Y>!kY42(+cgq0u_?qG/r%Bc'dYkpi-:HMR*'ms>9M%_dDk\j*kfoq0E+s&i[AA^%LZ:HpcKp@b*Gr?"Pq5Bm/*f\8WZ^,3O9
%qIK!EXm"C2G(4tpS'K<C%kYY#b&bi\`:d(S*POsR)XDmLS):["5/+V7r`?@QXW-smB=G#Fp'4h3U0:VT4LY%HlPBR!)D_bN/j2Ks
%Cjfop\6"h+qpft+F4.c05@.VuqQTe%H=;_-mFUn,hATu*[AtBN(Ot8U]lGJ@?Ai#h?8OQi^2hOY%c4iJemE935M`u`H?GR]crj"Q
%==/0sTLhX&rGe""]/-GJf6_/5^\[99RHr`@mbsf2*;6J?[bIKUPLM%m'FNWZIm^-t;CJgYFlGGNQU6gA1NAt[9;0G4J)WLXQU7BP
%oL\6\Fm\M&c74dT/gTIm(IK:t:X;9W%:%q#ehcr7?7c-"HA9/rQ2-d>$k:n7rqMiQ$sh+^2ZZ'OjE^lM0oU\V"KI00Vah+pZ*AA"
%e\!tj-i->_Y<@)*pXe9S/#J^*5Dm'+m*+S72q(5M=6+Go^3k(q(FZDsoC;@']&$5h[SVuN?HhamQQ)?nO7qPYXR*UtVAtre\]R=T
%Sp>RSa[?YbRT)"h6QNik/M+Xtp&0[n[=Va=/JqXF2)R1*qL0[HG`K,`C9U)D)UUBDF2Zj]f0CA$XlZ._3mFt0>=GGfJ"ckZSQY5c
%B!L"gd&bqWT2hDho=m$e?<a*e![m!fhrLcdDNk:l1tkS)rE:`&DdW<CoNH(J"gW;mFhV2@r<8@F1-8VE\CLO(1kRkD2h,,M8_hq`
%RC0-0>aIs*C[9sQqQh'u[guR&8#[ld:AsS!8*`-I93L^3]V_"ob.tfeNh'<W4k#?>54=>%QA9N[*Eh58(;Fa/4_%pfh"?Z8+R3ds
%[Tu2K1M<jr^KCe=J'N7,@1U\#DP$;&EYWq6r,UCF?G:fsg3golfoF3YU?LXIPn#_/>[F]P0#'<=NNOqoPdFgDa.Sk/AN"Z*mGWD2
%^,Lg)_g6g^%K8JX?SKM'/iK&\USbTGf[[8B[mQhTD--Y@515/`iPE\qs4O(?jn@^5C#X=.@%GTP\^7bkY7L!?H4q,oXuBeVeL(@9
%l@!=sFmK3&dMrq=SNk`7$.mdXs(i3Pb4TR>Z>1lW=Ma?T6)N&CJ]f8@EVfpGRoLD?gGT]'B0H;@cq.&$T/"sd)'_8:/YYEfJ&5hT
%+0[Hg>1D3s@rFgh5CUI@W615q-D+`jNT'UN,]N*:Q;9T!@PiJJctA^X*[%X(p5Hu$;=F=29>7?H<H$U5ShU7XZa`!Q)5EeE@N/Up
%CBctt@j0[SBT-mS/]\1-5W@t<n[,+"=EH]6MM[\[4i<5_Rp?i+)_S^(f$=V7>PILRbfr4b*M6Q-Dgh'/^:jFuIr=jJg%i14d3rka
%\s>iu5])b:rJ[RO?CBn5.Zr>QkjC*b7jTX'\t;iiFs5ZMW(C]5/>O88'&Ae\Clc>S>OLdi[0:uu_)6-m*`2QA5e:[)DFV0]_F_*@
%l123W<Ak&E7>HsGFs?#r.aLB8RL8;bRg4qqJ7tI2aguN6qQoR$pU/%K2kOEkoP3DO9MtT6[_i!F[@PXQs!F,=jc38$O,iXOT^@Y?
%2)e]NjMnf)=0aXF_;9XL6=51G.c5/m>-)L)WkJB)n-_mG2JB4K.<n=7#"@r1E:tIp!n#<UY:ViJcl/"QC&Q2;rqc>-:Q+Pe6NJU=
%7NL?f[-HAR:USAfDYq?*q.=X$471"((S@+-ESG:l:Gp>YI_PY[o5@(PQ^5qQqU2I$X'SkKoBr#Yjkfn%Q$^IeCHB&p[lOK("iRJp
%BNE_;N;J;i(Uq7e$ancsbir.oj6Wgk\B2EM0RrNqcOf=,LguH30+Z"(GkbZLR>kPfbOG6d)0oihV-M:<iG6&Qn&[M-L8PDrThm<V
%]7%0MaSerMVS2b=WtoIUltrH0*,DmS6r,ho,dZ95)u.L'c^XdWq;ID$!2IlrNfR)N\[ca#n*0\N:KM2oK"E[1djJ;,]48Uj5ML2f
%D=>!Co!rU4nW+3f?>bcoI=/Jn^%EIS(?XZ5>BBAaCQj0D+5`@8d]HEmlf4#-J,87$!4l-T^>C"'O\>':+MYWqc<pVF\u:+)fCH4p
%/2(>EH`\omqoQ;FiSBH@Y>p0=h"uN6[@2"u_?oKC\,PVE>(#tJd<t74l%Q<$H<6K'Ad'?t*E3"1WE&_;2dc*M^Ko0-r6b,\q71:-
%X63,gmVRE_G<Ta"dL5LSX5`it"V2\&6?_#qVj2GomJm4C_>b<u#7hC^L!(9PchACUTA!eH143D_T'RKrq8JEipG_e0J).lOoA@66
%WW/?"rEg`J_gb>JVlPLN(XjFXG<\k$B9jX20'B,#_J"A4]R"P(rcRu!ld,O#KE"\Rin2G$GG!\pT>!.aT7/Gc^-"P/;_$YIa5p*<
%N4-I@7,Lf=VjLf05;3$AF'/BpT-*!`U,`rErGi,f-BGk<07LMb5Q*0Ds"eMLl$Lm_h\O\5VW<f!jZ,b'N>PT]?8A[(drM"FOsr4i
%X@%3dLT3+;T_5^aJ``<u)S#-D#>F77o^_%USaY%64'sXHHG$_6['Tf.qqe/B0>;lrqNA=!p=B4-45[f%R[[W4Ecgens)ZMaf7"e-
%mi=Ohmk=LijDPb8SueQ4]^tCRT>T6XO+541T7?Q!aWL.,`JN_XT'0Ct0e6GHJ+@7=o^]-_URmP%gAcKkFm&Xs5<GJIG4q!:g7iVh
%:QN4ESJu<>pq:usApX9mc_#Vtp\j:C\,Z8M\9GgQO%2t<.SPeR^9G$>p%+NF'+mS0oN6i-BKF#^p("P&#HLr:\mYBNQSmsR^Yf"d
%ceaj=4*]ApSV*ITL\3Jc^>(U![P)Lbm!nlGGAr&pa52=OGB18Zp&>E]Et.*5.JdcSTe%ZrAC2eT<s>h`U/BSN4Ljd6BMp6&RGj<%
%6%4#lg038#;8*,Zk=sV`_4#*69#Dp<VO+qK)W(=2g4iM^PG\Ark@/8',#m%^LIN/50K>JW0LK2AQd.K%51o^H.IW@"]BNUK[jW3;
%4-:)NN2B4]l_8/oWV"ZjpkGk@Qu)6hG0)jXXbA3@OQDkPfU/mV?WEB=7E8M6hu86j/JTQJD)rrXTIhRlL(DDKHAb7SI?8U@mmW<]
%gQ3Fte'IPMlPnE4I)?34;C3MRQ-;jVaSO8&KsMUgN?ZM=YZ!tG<qd^r3BT=,1AOBWD'^9gB33Zokq]&(Be8sR*c0":AH/Y6cq=,G
%m@sjBX$\3El/OHseXr"7?c.)9eZb<0,2'e%TuZK[fIEDRS:R+#Trmk3k5Si\f5Z,%4@r;A&ZQP>jUXd_QL[Bm9Q9\#oZ1ek3T#Wm
%n?QUo_^06nZt'fT@59F&+791@X%:f:QSL-/W[L5'Ck+uJ*.c@)i8jZb>R3>Re$(!(kp!6(iMTs!jM(meh=K&gKij;h(-+-O<7#b+
%Xu)PsjMB[U_`>]!&$BBZ3m>^gjuST'Po<Za'-A3aa[[:Cgf?N(AF>/fEB"aQ6"iXL8#B`YNi_EO3iVpf;u_-?Ra9/Q;u[0QZZFSK
%?Y"o]i0=.+B%:iU0Q!T3PO'RHl3a5+kFtXPr`fV#fMjWb1(O[cJmUL0ADKQr*)$\%,ch2<@j@;^O]%R(P=oC+.*H2EF)jCB!h%0l
%$Ts[s2\4L@XN!_<6UH`Pl>i]+kq]"No,5a6ER/0ZKM*#"+)s+4]!@D*_YpjO$d$P&/7iIG.J[7bKF!2!QdQ2@M,jH9Hu-_DYPg+=
%=#K'1ad&#:bL,7#KkPmgP67gq0;8j0""RHog(Lb,Z#X!P2+!Zo#obbK'4\";/EBpp3EE;O/4i#Q6mO-4'J*V;6r44^$'Pq/>ZT!>
%0^2JQZh&4RCao!Vi]`Ut%Tga]_h&4?X':b)QRTs')_Fu`PqH/s7@p&\<+[04@`\jp,$pWg%c',uqhI6YoN:Y=@`j?Sbbl%`lX^bH
%3FNSI#\JG3%(u>mIW/75(6+?c9&@L[:^L]A.)\7-.es9<,04PZj;_a_E3fs2SG,ep7,BR09is[fnrr)Ci!FG^``h2DDiMD0\>@Q(
%85>%,E)\KdBSFqDhKk,+L^_t?k_):DPiWTQRD92`(X#R($/7ouB1V$WTUe3!s+S.DVGS$KZS'>ql4%i(WH<#E5uU7^eN2#R3G[+4
%6>V^,+ln8AG\S[$4N`AMk)cVtPY+aU:9'+BNOUmL-n&#91gl=`Q(,ZOMErSr.D$c$L4AVsiH&9bY*A$FLk%+1bHrLL<u/G5q1/+B
%Yu-bD<S1gq6Z^bB_YZ#:Jg0m"ceJKoh.MZ^-18,"T5f.1?,m$(Q(d7])_pE;_ba=g#2;dj.[$6P4;rTI-==p.jE%0aZ-B?5gqq0)
%HVQa1[?6H)?Gtk)5Di#<7EADL1RtWs:U9e`"?+V.j?1:m/#Z\ag<Q_`"3sk3XV2^$=i_NfY7s*pXdluIU'k$]&+!oM77+(?jGah(
%/Z/lg-6(!`DFCG^31V%enYmtI8h\':QL\Yj53.ECb)Q`^$M1@383!W.?Dq!t(6>N,#uh/WVPu6PWZk2])d5,%IoTNU3J+Yml=?/9
%V=H;[Pc63ZQk0t7&H7]B0\?pE.^Gl^<\!3#b1V'6Nm,LSD$AEVBH7hX*?`DF7I!W6/cfiQ*[7tBqb?=U(K+q^iIMR5M'O>4/6XSK
%@ZBl/Ljgio/qS>Cbd,=>-7WXB'henTj]c*_n"L7qZ=G@!AKd6N1?'pEL1)m'K;`_sAMsQN.cLW5?1(pY$W?1b2`8"DE@&+.'OBK$
%T/cpiJFK_!C.An`At%0_rCJUdQu[6*J9&tigi,L>A4=:Q.qH8'2GOc(6:TX^*.jLZ<7WAd:`5o,3@$Vk=Rgr/]*Z>CaB;gbZ7[>A
%(tp>q2pne46?=U6];!$*.=h;Og*Gg2S:&->W&^[X-S(It7+2QjJd1!IqbHejlm2tU,!":$4/M!\^VG1"eK?kCFU'X6-u\0O<'Z`Y
%$>9]9,PFYTIT`f:#sq5#l6p[AN'g#]\$%n/=Wq@G%.9+&\uHK/@H'0N'=1$_arHt-UaU1\Tq9,=dCX.!CP]G7UJZ3Il[uL_Xq;XS
%k?$b!U9!hi.68s*)2M:1CBD\E+^C,%>-$GabZ]\"&gS,[iUc)\6\LlkeWptF#]qK,B,pOm@7%7Jd(,6o]L4q_kfmeHDVP=%3tXB:
%nnE_"d(-(ie%Kibg^M7^_!!=pabWJ!]@PI!jd#[.4V9jZdI0YX+:=W$*X_R3/cr1>-k)%;L5`*+/rV+Zq[+7LS:lu^S1m,2Sg'CU
%h<1=Y<;qu5>?,>fg^gjEpV`;Z9pL-e&4=t8jHu)@3ohMlL&I:Y=q4PAi988d0F$161+Je97k@miMZ#+o_BLT)*;Qbt7`3r]S.^d_
%AGsLc*Q9neQRKhoG?pm@@Gt&i3g=HG'ho3^OZ4hf]#cdH@-G^d8n*0DpK=]f`Gd&?N!"fTA?l02m"6a^)R,T-_SS%m6bpQL80j2!
%(*W@FJ9(e_1fU\nKtODae=-NJ+@c]/VjsS3+Lf:&/!?eN"\o=0,tiE%7J*(D9Eo7J,&+(@aepU7*q6\>.f=C\)=L=F94WSSjrRO/
%&8E,9;C3']_QjLf87SAW,fhN>C!!p-=+tB6LFcD*Xt*VF0t=C+!['#4p.;:MdJK\:`i*:09aj`8<63Zg#gk)tg3'(R-o.R'DS"/Y
%#OdM.V(RLAEc\=Y>[(WH6#K\DZ]t"%B_8r'ZI#>?%P1\\['>$MjLTn/V'7:J6>$kWPf]aM+Ig0-Xf%"#_@bD.PR3.BeZVGeZ=NX1
%YI['oW5',_Sdpsdc]"?Z&DV4!""4rq4#M^![4^t<67/Q7O<T'Wo`tN=3kd9f\G;<A9M;T`.esS1)30S`CX&SA$`D0l#&YE9RkMXF
%KFct)L!8[G,DCKjr:7d[+3>3?/tq%LIPIc3_3dd&@g/1+"E0DN)SW'4s$NA/>RZX^egs7m#u^uG6K')%[t`rj(>`TfUcDW)BrQ2G
%9j!3<$NmET"InJ?g9,2aCnJ^;jhX9^UDc2_ZAT88:>E9(R&f^mMCMN&<?lu+gG8Z5j`#k]Kj&Jg,08=CBr6\J-Kc[V+!`/lTqWt^
%,,$p3`@UQ.#+eh$;:uDB+;dP8"-XO\"/Ja[)j2GenjEC#ne9;4/4\oN8X:edT83+a%hGm87"lE$6J.jUGq?8m\7_5e-ghoAShQ^`
%Z9`Lj_Kqlo?rQ:D-IK_m#N8RELS>eg';2Rfd'orGk=tRP1cs@^&Fjj0b6!Cj+hHt3[Psa,Y_e$X`I^o&8lRI4>](iO3CLe.8j$2I
%?;nJIAJ:gIj"&!4$i#;38gI-Zl)d<YPd(&":C.[iRGiOkH_JYe"4&ME\^e"'E-rBY>E*YIi!_q7V:R:N@6Q<[[.RFe6Noc8`[1Dd
%A)_*GB\.:MTi<%(^+9(^6A!`TWkq,3L5k$e+D+\/.V.M[J2Jm(Y8APCb$mJ1E9aief`hjAJFHjLkgTl-^tmET9BI]r++1)->*>#j
%D3<RZ9iJf[UW('Y0+-QXOR7*cRX93lXj%K#Ti,We;j)R5GmgB\.GP23JnM.mmMui@,!QQ!@tb%18J%JB?Q2:OCN4MjZBt3K1:dO&
%'q;35(k`8($`t.U#rERg^-&VJTKjFj`o&EA_R:>q&BTMM5\CeCd3?"$[pHB:<@;6RN<eDqV@7cH4iF/[;m_gVTRl^20O&OR<-Rs'
%:>ua%F`ArU&e]naVe$Je[_$aA7P[#"'<$R-0)QiT-(<&73les5V2!Sl"E-H5"@ZK">pQgK0h6:J5gnXUH?`H5>4X:c"@BVW9Fn#7
%>[.L9@L6?Y6_Bp:@b)[EL%q1aqJPPk[orN!KWtfD#qTS)*"Gph>SZP21D'Js@PBX=.bf6F?8srlflEGdnkmCI^tiE[3"R.D^qo$g
%_uc0?.Wj[;;@,:V$mVp.lYV?`<fq=k=I-O*&XEMd12qLRg#@___$!T2n:=9d_HMZ,)8&OS4Et(OZ%sE;Nn(SHC`Tc46+<EuN0i>H
%D_8O=-*,6]US.l5DG(R<1Z%7*5:L?*>aVPOP6mIC%#q>i2/%@i]"n7Y2MUuD0-$30_qCA:1e+qVj+/2Ni50#`ODJ>S_)b.Ff+Rl`
%n*Z?@1pdGFY:g@;L'L(UGZ83@K!.s\SQqj&ZG_9E!Z.nb_iSYcoe:??X/#[*/ukIe5T=U*_Vq$(k"%5=oAQR+&POtqq7PsAL,-:b
%[_/iF;H6#f1./pi%3bcts*c4OL`0i'`A.I^5l"rd%aN4aaLPkU"<'[R#o=5]8qTB-Yc9#-g;kfq-!Xfom"FY+H&*M(0aTjWpKcq;
%an_K!b$_]a77L$A[kPTUod\;_`$Mfs+hZm+,6J[d<R/tR76%q<s5;V;+tLH-Mj.3A\Kdgq!'Q)+0F1#U^;NQ]Ef\;]"7DsiK`G!8
%W$@R%[j,PnA;QsY,,];hejDr".ZESb:f)cr1RiED@e'7+a&R_fB:g8`Q<YE-=.%i;\Ue^Fit,WmGT<Fp-$&QQ!l;F9WthlA=c&2s
%S>Al>f8;15T"KCK*#pdMai_FfM`Lb@YnWC2lsrjk;D0!lF>?XY4l>n<(bud:;\nD8FXBK,.Dm;4RVQs.#uE?qQR+g.*`tB^AP@9i
%="_+hl#-]sO\MPh9@Ps+\7@Uo$'l=.UY:cB.Mrr#C.1o=<(\C"i="]3og2FSl`oMP]`cpFMM>"JacbUs1bi4aL`fOuiPUr((Vi1q
%UK]_2q&ra89`[kf/a<CW"hN7la:gUb%:^Pf5AHpQWLoDN%*@1=S'(7\a@>b"6jjiL+VeT9-kiN5-g8Tig*m71^dou'#K'QG)GbF!
%;ug3UHSb4:SA8#g&e6<#LSg+eT*Ja<WGWA\bK7t.].n]+2h9Z0:4NZj5pJ-P`*o4.SVRmiZ=jA,ol7KGA&pJK'Ds`?9c+'<N=$gj
%eal)#4qYfn;hc5.\Uei[mUl!$8M>l*&\)>-r!9;dG`!J#NY"<T6F7Qc)O26F7#pPuQG=N^%8Zm/UgE0n"ag:N^7r7N,-V@S$"US9
%r<%G1.(nW8n7+4I]S,c9DLe_qF\H%RglNN]`3j$!a[i.A#"Etq\;$[Q.WZ>e5)m^Hm/t:8Eg0$?c!uB."S3:D?ac&?(qM>qVlDdQ
%h'T/e,fUn!.DZlh7rV$)?_8:adP+IP@.Ek(WR+;4$L6.S*iWIP/4$^)?\M+M.MDpqVKf3#m0I5'U&eHo<9,a4:]kMJ(qKt/.PTKY
%8%Gkb/0/.:;L:>'&N9tQKRMpk*@3N?<<)>Ic\\.cnAXZ1+bnnu97LIVW!4,A"f[QF.q+T0^k>D_4%&[XU:p[['TimB\D;6:++fa<
%63W>`+q+V=(h*DT/"+\+8r5G,50c`q8l[OtihUf'3?<e8_<47U#ZV%kG0_qM[<Dr]!PehUL1j46oXJo128C*B,W^JF3sO_qJqVV]
%75bA^\#^bf,UcY9HZKb)f:WFH9oe!C@H<<,"8E6,!q0AF!:PHq)iT\9'-aO7W\@".7iHqDM'Y:O7^sU9'&c?SUqf?r9!eVX,qKs]
%$O*f6I<sa\fn]p43o,?a;ii@8(,9#B=+QV*6+&\W61\h",?I?W6]jZ8;%_(c3Su`\@'Om)]0t]\ZSUOhe5H?u0UC/>("qLF.gcFt
%2QdVX%)$.=4P8AXilM:B6A6D"c0/a+5/Wg=:;^@8%f4>FQQ!V<J=O_b1NY!j@VCIqpBdlW.9fB".[O!Wh'HTFWU]Oei3G0G=p;F5
%)#W(<0Yf3M/Asd]U+:<;b=>K;BLRWh6;3)!D"p4#-o1:!q.>#bFB"e"6=?7,,@u31OZkO1U(tH;?g7<iD\]24a?C#AE'E/)%-N9M
%H)IAa5uWH8nqBN*$AU?^oYoZ#MTuPOn<4%S:79q"",ZD[1@t&VM]kHu&7`'rS&5XRi)g&6CLXY9W3eDHh%CHqRdS)*<6HrR^5T^r
%Y(X6;c1C5@6EF6u@FudH45"557='fcLe1n`^l,0.PqcmB(E%Z('m\YLkhRG*1@'H<!_3`o/!LP/&<<[rO9#Qc@)*5u&`+u>rB3OA
%P0(uZmV;!LIPAMAi"=fD"P8s]@g4*#rAoso6k%EWD$q^Q9I<K]?\`+P28No@?D[Lq>JN9nV>>;Mck_3nWDnnB7!ITl0:Cn2LLZ8_
%1PG<A"IY_+i51eF8nk"BQ2o9tS!TA;l"gpP0\4onO,AOc'SJ%a"#$@R'?H!/>0<$A:-5cA'(R;[>Z=%/IkAi36[uA8F@\(dr_,u_
%LoK4k]lRQHM2@`P1'c-ZB:KU3:^L-aYn6+u'b)O()'neHZ%sEAfbMsU%KJ=%)3u\Z92L?U!*<i`P=NR*.%;hsim1&^].B^c$)W<O
%#T+%'UHT?n,B='[_Y6T<>>45,PdO96!u8ORfYM<S8AA7Djg/]$i03"4fgIArQ(rB2^8@0i,UukU(7?W:-X0NdErn)/^!gdq.,9;e
%\]P(SGlYl/Z1@CU77Z+1*jQ(=QKjECNHt`DW=5%]?&+5W(e]i]b_@U0T(@/MZNcin#gbtW\n<Mm*>!c@O+eft7GgppHU`sQlmt_a
%B>GQS(4_AkCCh4]'B-3(7%b5hW_i1U4He$PN2"Nc5t'(t:g>:tm=JhCPb]L8"<.>;1)ABeWBPh8KMKCg/DeiL_'Pia6*,3;cO=jf
%:;.#k3M!oGi5+(D.#_MNIm/*c!u?\VmYWKA0H?K>&g@+&8bj_=]aPX^82t%`)S%=JXstWrTqGm/NafXL!@)5mp_5E:!#1=\#3[8K
%>mQ(uc*<MK@qktj8YdE[U8ZdN3!Q]!l7XP)l:OPPY:=8D(FDXl)/(E=GaqlbN?Vl!*0Mim:+ZL+$>=%d4de8HI,M_cR2VA4>m:/1
%;ofkq<5c3H<Vr;+*nf3PefSnH*:=9/hBi+=&K%0u#q!1Y-+@/47HJ:q0\AKE2/KnKd:uKV/Y`I<&&fC4D9f(D!]4mlP$qV<AD>91
%j^slm"^EX>aOMH9e*m-$U5]G#JJUc?BiPYe^kVI5,n-iL!HD$6oPi%mL*GU"b]!V;o`.m,L3o'9,R4EK6GJAp*e67@!-etC[Ou/=
%%a#UYao;/E6"3I:_?P-sb,Yr8)tf(CNJj$:PuGjIJc]c0S*4qK.q'H?ep7Dsn0Wg_Tc3U,]KLq(i4N->V\"JJ<4*Wu&@5)d/!t`Y
%U22M(5\R%;L)bc.oI$Pg?A@11$aU@11l=Rt&beYZ;FsW?5blea+=o^F2Y@ng()V0D4$F!g1VlBm*OC=P/e/Ic7uC^`S$XX9o[Yd&
%Oq]05O"pe]ZIe$,RX3Mrp4#4fR&\B*;?_)Y7_Njo!LHBT<%8E:KebQsXHb;N8^"=LQ\(kE=YoUu;An"*=omGR:L(o0_Je3Fq#KiF
%_.?JtCSqG'4]WStKi*=a9mn4QjnfeKJYD<0kT3frVP)dOaN>@^XeR^Q&_*Irn2.1r9,0V^L!P>?V39,*4Umlhb3B%]Db#iurcUf^
%1hNbD5j)=,<QJeSr.O-]prlnRJHXn<dAIC?Bk'!-+O`k(A"W/G#)GEAoPFn%.fbt%4i..n4>$j6+8+^jZC#Wl7J<!)LNP.FBC$O8
%pd#s"X@K9BTE9R?"tQ7H<9'.Z&PL\D#"@Wq,!F>8Zlp<R2o@/5GUWg3$XpaMSImm4K\17%iu9HN'qtA%1X>Hg+_"Osl53/nN[#ZL
%<FJ[G'&/V_9BBi2M:.[GK`]r'$1:2YhI&<>6Ut$Q:]n>m<807>P<8QtSh6o7bJ3=_s3WP2@4l@Q.`BXgbp\9$3uo%Ba8c`Q5j_W_
%C/PB*,)L/1E$%5,9]-JUD6s!aILtFZl4MNQ'h'T%$Slp:(s3n>T?ule\PGcHjo'rJ[A5#k_6@[kEkT_KQio5VPsV-?.g$/<3P_'i
%==RueE0_^:6B+JOWD]`mP3Gtg*sTXd\P1CKb/0YAZ.@LV3/-KS"=pV5p3hsh.f+#]KE8eD:Uo&1KEWV5.:CS:mnXQ+QTR8V@^jEh
%>Dg3&0_,Q<b#2ms-c2<QJqcfnnB.-+"([KJk<qL*N)Z58T:k!GG;q,uAZ8L,^bj/\9:dAE+$-VM3!)7GAIV,Ea,J4<\n7/k[m;^:
%?O#(glDo3<kR/2%an6g>aldS@4m$?UaJmFVZir"UKQJ^M!5uWhrc6H*/,_5BEfb+ZB#Z*+&P.a@<ou4*g@,Cj.IId^<HUF@6%7lC
%=Y7RC4i@plfiVgnM)h^!Au8m]6<].=28BB=--THIpfK4pO8'oY/k".H.HQp8F<\6VKdLU-]u,'c0Jf=\!K3dnU<!lK2au5V\HFT2
%]UE(^eU6bMLtOSeRMWpQHkk<^>gWBkK*7?44c'=OSSY<6]Ms)HJRgr3oE$^U7UHD^]3t-@cc-GY]2Rb3].LUgcsd]N4JcX6:i<1u
%eT;\4mJ6Gd_jpc0qOd,)&!>-X/2i&rK5i77""C(13bREb,%=(IJHMr]jh_up*J;e`&0M(/X"8A%]PXNb,5@Ar)pC6J0dpk'FmX,E
%5!\H2T"XPaQW3H*blTFlRB4%T[%%:b\7]?&R/4[=+:aLLjKcXb-h?.gH)r]nf7=im,3M9%?"iZhpAt0kI0(#skt2<MP(h(_@sqWG
%;@%OJ*p=-,DasB!HPJg7o)+"D.s4AHrGT9SAOhAZ%:i4u$58GgWJ*X1h&qaGD7sqt:j5ofjgC%uDR3CLG+%u;KiBEG]:_a,=Fu8(
%5.-3cda(rJdY8EF?=#OJTZYXsO$OAb-D*Khf(o^+LL(N575l;/5tY;LU,*Ckh_ktYSF\*AQGDoEXKP<ratCC6-bHKt'5FmIaJ_qo
%7Ck@tcs/o?6$D^;6W23-`Ai@p4g@GHC@*/f]rHRtI*l;R!49JcYRZL>OM6G\'eCMjh6tT@`*)2KS.,?tJEkKkb&sX@mN@1N*%"HM
%jNuJc:9'iE6o.k\FVh#/A]7p9R=g2.eVE@MNL>@r/nRikiJ+#\[)Drpj[A#gBR[cHWlZ:V]$%*Aa]["u!l`tMBSSR@Yn[-@8/J<5
%isN>JgokH\W6H05`*sY'V[(_!d9?X]YD5j#k?sQuN8fr7ZO$2\n/Rg30Hni7q&g:52hl(;LJrnU:"4]dl3!92Afehs0h#p34,gVq
%F!e(E>0B<"E856'!P-fg@ALE(24PS8+??cq=h,akcI!GmlK]l[#V7SNUfiC<?4LjVjm,WbSpL6a&kH!O6qo&E#_R.rR:a6mN4?0"
%Y0r!UW]OV=4:*_EA<G-]N+dUkAMK'g"):la'OmS3NsPPj4:IG$7',F#7!'o*c7pg!ErmARPdVj?oi$U&J.=M,BX9>W5Xe9*7KTrN
%^b:Ip%YW7;A]\eFlB)Y$59$."<Gb:3bctaO-uo)LK8TmFTF!lt-HcO.10DtOWr;mQ`Wpm-E6/:CBmZ_f4+SN/@<=,9SoR46+B^gY
%>D-f8gC^\s7+>?qJ3im:(gfV$3JiHP#[u<5!1ttn&L9gELQ<V!&!1BTQr5Yi?dk'urX9#5Y`eW12b/$GZ]#0*I1.8Be1q\gYL):k
%B7TtjoacN!-nLK!%>`-13f@QeTn+6X?^)l?9Zq4g)FHjt*%*)Dk%Dfs'3#ErH4.gD('9,@Mk3jR0t>%5\@OA)k7IRA/7\bLJK]"s
%A"XG0"GRZ*;rV;'AmPrITi0oOYY3nC!kTg8KebuZG+p!S%1+s*`L\Q[/dJHnaAu0)j8_J9104G[#mgXtL",nTIcpY-e<gaj'4Kjn
%Qkg]1TH+Dn%.`to6nASQ'BU2eh;66OK-QjG5_-aO$E"E"!Xs&:`P.8Z*gDCg"(8]r:*SHqLC"U/_(>+.H&!@b$XH$d_)sj*#4[.p
%<-FqqjhJ6'"M]<f=X98O<1s^P49`b^l81Mc#m!('Y$XFJRKN+4?nqK@H7W)8HucG6`%7G`F9#l<OM=00LjU`3_l0JA@Gf-/TqF]u
%@>9k`[%V%NN4JY?5tV.""O15JLeq2c`S_('<oYV3aoLiQ\e=6mW4)gt)%M`8R5dG>dlq:7(?hn$i@9O+`0ICl(n0\\MtA]LNOkYd
%_0OlSYGV,$4^#X:R"?:=lc;SHE+0DA@%dSfUJhOV';idO"4T0C>%b[5#RU`R7642<1?1AkU&G-6?,BM3*YVjbBJgD:@?BBcT#]uY
%>&(!qDr_Mc,.dB-;dU'@:-cq._RdkldYSWq,/CIYFs1f9`+a!6NLUKY"^+f&ZHOX)i,HP"Yq?T]=7EL]IMB3oN)%SfiKau3A?FME
%On+M,HU?O#U5rR/S]<A@i[Sf1jCYJl_`DXB1>$!#N.=eW\"6sm\TNf/%otEQOO+:7;Rq`-VDe"HM[YXq@DnmJ&Mcq>=9sik[R_7"
%cXdHFJEU)B"/h(Th*V)7fJR2*iE?sk3!:qm+_^j9h.>NP=H+0?do[V-><_BVk(Rb3+i]eIMD5?T!-g'5aIEIs4oc]1ZAck[CbdUF
%HN]-;DRij>6Ac=0*s(?,-n/3&8e%d+(7FtarmWXUVLSaC:TG\U8V&@BY[+#CDq7jD5t)fV=IBj8eH;12`#%^n.^)9KT%V(G]>$F9
%-[tNsIcrtkKQ7/DBkYi.VZMhs)=sr-!Sj5XAg?U_.97Q8T/09!q1icC5)3-/ZpBr3ed/4`aub[$4Wm<]Z3oO[Yk<Z<2l4qe3\`[0
%T\>)4kD5K]g]UG+=:bK=*!]]q:tJBP4Y`#qC*Z%U_$El)VMk5n&%bBLRa[HgeNjhR2t/^;3goc^4u@7/(bJZZ+TBLL<TPL\'%R%7
%dir`4;].UAaG+=V*)DZjj+%DGC?2+;3#Gt`-l!^I*`uIoCI2i1-C%u$(JlVY*)+9;bTdRcek_UUS4YI<B.9s\HY04]"ZT!cln;F"
%!a'$nA748p_H!iF'#J&/Ekof,1P!sk0V+jT1@pY9O.sYq#\E-4S>QR9?^AEW`R+4jM1APn!KkuaJYBYVU3/t"Z:BnQ&k\!/+P9kF
%8CV[k.HNat!1dP35:P>[\rffMJJShdI8HSHg%9;'ScCHFJAY(+.Y66,g1&25#<"lF=+I"g@sRmClQT%>pE5m*lbtUm54/RE_O(pk
%_P_q$ML^gZJSP?JJ@/BC,LD0-4fP=GJc(47+1Nb))^>!%[UaSQXmXjgKK3lTTrkinN>nq1]758lrctl'%sJa;T,8e`0G6DLX.,7P
%OdQI<44lA_2upa_W/VLI!$Q35_@EP[Sl!Be%E'sU,eOB8?m&,5'R2-(Ec>X+\KOD#9GYW/4ORVhKEiV?<p7YH"HH(_6r4h?.H1^=
%m2VdtTfID!0k]JV!HU+L>73WR%5G;:h>j_tRdRIQ.0Irt5`^`2Fmn>XUjt1e:BW_Iar-@KJ*;9I'*;PlCLe_NFpe^XO=fR9Pr-ll
%FZL6qaIu&X'N\0@,m2,=^-Ut\#s%oSb+eL53C9$lXE:_:=s%6o5o3Z(NlTs;c.s.k,q,P5]1kg"Z?"k82_8#<9caCJj8sjk_ukqY
%<:5Q-EN2X)Sf:AT#_718a?(eTE"_4]TMg+.T`1cmRuLksJHnQ_>WEga@Mt8*:#3+%N[*LV`pa?Y4H<5QEi80#r/h4]U.>N_gqi8A
%Oh+.@aS@n3<K<<4@#dCFX,6N+&;>f@Vtit;"XXOn#,0!i6\nC2D1X7bW9X`<(n;WG'dSg4(aj/mJ4!b`0r#97:;-p"&Ur]%2A'\o
%(<EM+0L7ueW2(W.ZCYobqAk]E$>1,r"0-O#;CC0Fng/gg=OOc1>6A:5Ygd15p*"ZP.5V$KP'[Y3JVo3c3p6'gW7i1].]%mmOYl'"
%m8+)%UaIIH9pj-r!W'TA"/ZMLVaFE:(j3Gu>F?bA/KDoJJOiu]+CcTE6?h'sqA_ecFJBCIDq'/f]OG!)(5c?]1<+oW7u\;H`:nB.
%,!:4`!DEuV&%Q4rB)+PTa\]:)160H"2GI@YE[@uY%Z.n7_YFqi[PGS5O[O=d<*=./cA`/J9pS/boT7#6$?B^KX:G"gCH>oM)3Yr2
%;31dmM!,"-rliP2/09m2_Z$=]`(aQ:$MZc%"+]r%:cNhjMh0oae>,@'ApAU+(:c;5e>^lZC8cm&r-Na$!gH9T6u\_9iglh[XesR;
%":hiQjLI)FcTlM:k@<=@0M6"#<:KB?+Yu"'&:T6g70uR%^;.eQ8LV:'V]Z!YcCe19!leACY]OI).Pf4=WhPf]/5W$Dj[cPp=_`+5
%`>mMfCee`j#*oh9LiDqcBIItu.1<3aS@%K.>u<X5][+$F3!S%:#M(F8PjkX@BUaF"<h7h2"qcoI&Jj-=V040,&NMk>e^Oci."3lY
%nt1f0\'d*C=?8d/W[__64%,W*Tkf`-V7Q70I\?!?jge<h%Pud$H9:)?6Erc@U8^.W!K[nOdM>tbq./#,;FLRtOe/]1//W017K?AU
%l[mVE6k2L-$$7m]>1+sDLsL=4,tc;l'hB%LkZXI]!8\H6%UuJXJ@Gr1$g#a0B%iP5*p9ml!QZ$&3=(6;Uk9WDbO\`4G^(=pDTZO(
%6kgcS#HF&TD%s,Y9,(\_3-dp.XPcj]d.8e#f6XONE&ogqetT!=l?eiI8m2k2k?Zd-J4g+3&TC"OBitKE8Jk'=`['K$Z.E/[&4qW_
%@2VPo@-E?(i*K=m1%:'F/%Ys]NJ@0/-+`:pK^(uWM64(Kb%m?-m9ml.'(rU>ApG4oCS\SJGG[_BBqu'WC%tQukXd)AGc+kXpn)7l
%5fY==R+;3f=0-Zai,A+$rBiLWr>Wg$X(%f!3[N9E7dX!YMhjhq:Ff+)q(ZkPYU7b)"!2\tTY^/OJlrjRoLpZgj60*r=u`,h(k6)B
%+S?:V8UBTC\17TXQ#PJ\?e[uDBE_&%+E]if<&r;,'8p"C`koQI;DVXI*RmU%-7hF]&:(%<8VYs9r-[t?FLk<68q]T7COnDJ5oi@A
%l6/NFF#)FX.SFZ='J+EFCVe.Z"P;RN&RmCj4LA'DZsP?aKmDU46"1-G@eX[CA\FV^RMI2IAN94-V3[+@+NA7N(/-<]!]tuZV<\E?
%?ZJ]&/[ZouW@8`p]>6l8M=@s=U,iIDo0CEt,1gghjom+D'ot-E*!th-^^@"41jUN-Bs1c,Pn2sO5p7P-&=s"V7A-i,TX3L3Cr>5Y
%4l8G=lF6BcB.]V_Ybm57%Zm#2.c:L^&].pEhGfZT;cH.#-<m\\5cHWa.V+5h-j4)l<_R93OtGj;2$[9T*q_t%,.BKs&PhWM]c447
%.>nh"NWJ\h2&60r_B&g9$\+7L<f:52!097#0fns'6+mOL)PPM7]X6HJC`_(+BJ;gSTNhc&?Q_Y3A7\WsA-!DR:b*#2T3;jc!TgB@
%+?$=A&obI'N\0!)+9^1UdrqK!nQS$d&J(oV<U8TP7:I=\,<-7-(meE9%aTr*.V8dEH3D[tWF/<B_5]+W$0>"-!j&0oN?]<tVdKW]
%G>7ML_a<oR.2I]BeG"K4"a^3Qp_%=2<.o7b]8e@lobYA1mBE%8`S.)lA/trJ]TPD4RgAfnS+/EgIV4qH"<7kG#.Pe::SA[SYQcLM
%b;TT8jIsa.Xf#Fa,=%S^FaC+a27Q,gRE^$M/huZ_+kDOQeZ+oph.Tg-6KEgmUfa:jn1&]S:0>2PRR]fuUOf`bG^:LY&5!;H&Z8J8
%M+o+7cY,_@_Cu),6&Vj)U(=?Z\ROA_0RR4DPCfG5&<4A%rF`uPZ$.D=/s'3E\2?q!_+mAC(+gtkHoO'VbGTG5j["RV3>1Y?dcZ`l
%Nu6[_phq$4UT[Va!O?]Ir<WKc$<eN<5!7<tW`0j(-R&VG7+;2ECAMbnG/&Il?01dZ6g@rS!`lqBg-L9Z4SB?mGF3d!6ik@Hd/`<Z
%dDE^^RNhstR#pR/*i(-AkW!C-Y-Z@IF/SFGeAS3<&98OaS!4/:]t>+,Y4Sm.h!,*/Zn1_&c)nhVi-.GFfs3jViX\2QR<5/2C,7VS
%!pl$SKEM+:C6&BP%$]7NbDF/4D'&?V\H)*N2MIuJC"&j!P-7SkZ$E6%&CggA2-EHdSu[I(Zg_fp7QRYS&K4+N?psXH>!b8$6ST&V
%Hbe=fEsU&COUmE+JP!,3)6SV'?k=GN5IB9qfUX^-#$)GbWr2sdU1!V4MH`!Q$LBU$C/`'sZ=sAjBk2Bab>PTd%k91%k/(20X5&-E
%1&hq#YAT:"qIR?EPcAA7(4[b$EeNkJ1(?oI99,Z#85K?BA?SOD+@a3MnHP=NahD;Y!0P0H;9>=RT49s:[R#OrNsMF&jd<1TR!VNJ
%Au.#Bf4^36Mb1kl!aDDn&T#q&APFTCM0,Nn=[=_HWtT3XgV=j`CrtkHS%&mlLgo=K0NjnQ*CGK$+`P&oVnu[X^^5jG@6be%3WLd0
%!#65#ph4'(X9MIO20Dnq]p>fhS>qn>7`-9TglOg*B^6dJ."hUkaW+\<Pd&)?os+$$p)j)6XcX)7<Y*WSK+(&fE4Tb&T1VGO!(qr;
%`G3()mq/D.39")H)hE%\j(0'rPoPH"+e)V`"6&+tnkh.n#Ta<#$=jqATqN,BED;5sdK]ikMn!h(f2mKOJh'<7'7rHqljVZ)@SKl,
%X9-0Y$[0M\.S9+m(i=)>Js6Jl:!bA4?:^g1[e65?8+<7PTd6bS$Gp1^BJq`lK6LaS<2u>eOiM;JJ<WIuT6%!E:mP7c(3qs:mu#f7
%&?IEdc0Ia[-K#RlR3=rN<3TnS7#b2VlOl?Z!2;hXp8ke/V#W"HH$G3*_d29`-;/K=Z,6s#[QmDn)To;%g%bqJU]<@\#:q@9<V!4J
%:C'd_!\b.@4J!FH_j0G6`3p>HJIC2k%HIR4-LaeW3f?8FP3mkiK'\-"AOk#b<Pd6i?l@dU9*:hq:sU=M`1A=\Ld=AIK''#*fIV+8
%*NSD@NJ*b.<q/`%)n4O^/h-o4]ekSA!d;h]]VF6_q%I:!$XkC4@`qXiLM/lgei06Y@X?B<KUFXtOUG.FKb',[.ajp?Qk[F2FI#:4
%-59^3G7!)Y(i*u`;?^o=R1[,!&5%'2_*2?`cmHU%dcK1n6WVFo`b?R'P-D/4at]hd>;dB'LU+J2',tPW9`mmX*@R,?Y5"T4oG+&l
%<)=85KC>*\Va-oI[]XTM#h7bT:fEY8^erU!l7-P6`85e)7^+D%G$IA-_3.-MZ;b6m,46$L_?_C$Cb^Ok!pBrDF>Aal78V'8:"C!9
%/O3)gp8[a^e^^%-)k)d'2Sg-Ah"O=n+<3B%=1hqTd&<LfQO>)Be0eH9$?b.Sl_Mcg^eH#7GfZH,=!sl%o-9P5_4]<jH%2C]WmN#C
%M76#/-CBa?@m0dEogjk.W!B$="00GCkt$khG41'dCS?^7MC@#Rnj$dhZjN,C&m:f?/<Sm5$W6=Z/qefRnlR<u(UA\52Zsd=UF73[
%A,lu.;*(q+&6pKr;\<c]0BR:r@.&gaTj%VE#QbSErGk">HU5S=G*()fL)^Ffd3r=3.^@'3J5T=E>)Pm#[`rNC#8fNRCW30BJ;9hM
%DMbH[;DGJ.)l#\Cr2Icg-CSRIm%>3F`RH)o3kMf'aIZe2,IG(qk">NCAtmdG"INJOUILmjCU=4%7QE4h6IA^40\aGo-3hF\Qp8Ko
%eAD'ld59.JA#"rL?X5*73%G]#qnlV3JQNMo]W5<)/thu^8[U60>OD\>NJg?!,1f^V<gUCKCa!Q)013du4Jki=K@$eT#og(Hf!1s]
%LU@-p9SO2q6gkkm.[3B,mi.l!5#)[nm'SKe3<TJ2l`!3`B$V#"'=3c`4#&&kr`7ZNEd2hH=cH<dLpG+CR'di-PNr;aMer]Mb4gQh
%2)XMY_Y<.k]=*c/"<A=^W"kHeeedo`<J.7K=BZdKZjFs5fE+HB;9=ap0sn]/au@nO\1amf]bWQC;aH%k%oK<4Jt";W4"_9s2l=_Y
%K`NAPY%.gj-oqC/2hR$bMd!2!3jiuaW"RcI@c,!g_86>J5WaaZ&A3ra[]b_@UIt2m>CBL,,W6P*G<&iY_V'UF6,%sZi+n?:BL&83
%>r7pTo'E0&5jRpE8o'WqmhP-$OLG8-=L*rg-ENa#M/]O`]F!,+1a:0135?d9.e(Y?6#84Z`U:=9b@+qKQ>"T!$pNfPqaf[_VFOG4
%&'#NL-dY:l,uj@rgVs74=h>++--bkYVP=A2dFFeD=pYI%5t0"h<5^9:=c=r0Ig9rsO,f<8)m1&B^_agNo^H-JiYhmZ89U;3\/(;!
%?pFISc\B-8J;o=C!"EU@0gJm^MOrN%@V+Jg=UN8EpFcE:Z!k"e(%'G$R]1TSL]VX4&$Zd2/<k`kc=jOdnc67JJ_5.Rld':c&I_RH
%_in2l+)$<?S]K1ZSZnNF.<eCC<E=jJ9X"s.70a)a)unk"@H5qYSQ4DS[$Z\7G:#d2/Nl?5!(Y?fS@gbb7$^><`V8_VM.e_m#6=LO
%KOi+/$qf99mhK$7*5Qdk&mS?O#4'&`#Oc-KZH"hd>jr&ccEK1EbbGUK>igX'-lrg%SjpHI$F!EFL@\rp%Fh\8%tPQXKOft!.mg^I
%D,1ON!Zg>U_S5"`.G/M=3KWn&69Sjl:s?R;?-2H`A<dugSLN(I?0UIDPY.e+G:mQnbHi(M<O]7f-0@^jWYC'[+Eoa7`!%iWW$.j'
%"5a\_.74OIn:g4Z(Ef_"M'_eerLlD*>7q]FJoF=)QB7:MG$W:%$L\4;"9d`?4Q_&56^]Tfd&2I-E!VD965sf?%L$q#&AdhB1'bRm
%fGCIA3-t%Io!%%&`@;Oa%3^Q)K)5IWGV"/kO;HIVa;d;'HJk.m=YH7M-^S*W+iff32Bs'<T[0t%1q6%@&5E$tf=4^5XgC=uYu!^a
%"i=XJ7^86TC3leg2UQiDn7!p60cBaZXrFda(jfE$2"J&t#a0tQ;QsGOp(6kOYbe)S$,;'jW!9%aph>=jS&a&\<Sh>@AR5!lX2P5^
%'g+Ih'?fnk`&M0&X-/l<.&\Cm(cC>B[6[Pm4b=!X4nDJHa1rVoCVc8gO@'E;OCSM^JGkap!EEWX4KG84RD<O">jjNK,n,?W9<6F"
%$s]=R6sr0U;G2q1<l!Hm,/e.0@4``%O)B+n`QsJZTR]/rmoVIJaXdU#^&a[:INlrqW@'Je19rloegQ&q^YbR\3t0>#T:'ZMs*[^+
%e1.2iYpW-/V>f[C$uUmL/R!.^*DKr@"_NNLT0LK@Y_2WVY$C=i(7m:c9rW7?/_^hhqIVlfHs1FjNGaAl<l7KtQK^+p_IXT-&1Csj
%39O2ELA`I64"3u,;X@=71/d4%+j_/^6Up69KH,t:C.6+)BSJ-E\ZIDG(pm9[':!%XMF1YN!q8T5D9.uoje3-&B,3)p!b7IB,4`ZH
%a>@"#gLe_oiUEFu2KJa%UHR$%c$c_=!=Z=Gb:+=emYMkXOX'%gW98p)3)7>pKF`8DZJ2]o;<@,_,/ogJJleA=pCO(KYrK=\&u\cG
%U\LS68hl.p<sit:a!`"-<qILQ(,iNj;'h4W7AetTLBA=k9EMO#`%B/=Z+3H&!n(Y!^f%I(rA+J6_12r)JPe%/40oB^RSV:9i4$a$
%E7P1EUue>jf;V`S+p^[&1P88_=A'([/YJ(jY\9I$<-jO$de9Y5N$N$)#-4(-J5jhr"Yj@N5V8PXkXZ&Ya%KO^R0>^r,5XQ#cBe,N
%:er;cRDML,8Q*fEFCY]21+l"n`]l>T;ADH_/nKU#^pY+39n6D&YY.>l'Z?gOMmII6)AW^96t!6-)h9?MQKs5$`e*2QK:UP,Oli:Z
%I)3)'U&dn!`I:\,an)[@aqrb6_3TjN80j3(=iEbsC*Zm8dhG7b&\qScHM)?jIX(^AIPj!@@!eBNGZfg(PtmM^D4ich<FGYQ=M#?&
%9P?Z;nk?U87ncZFpACT7^4NWr]PQ=6.[J`RVe_8YBnGl./FGnmXg2]?<WVOD`EXpUMDMD>b!gMC9o!X8k$n%@#Z_KYe3oUV9h]<E
%#rhXI]ILa(!+NouF$l?,\h=a_%JNt9[?r#ZX!/qWTO,3$q'm4")2Y"$?5]2%JF[ATX;#^(_-LUA,>6C)D)UE@Od=;Hjp@G.lD,fC
%Qt=0Mjo@%nbO(am/o@>:4'88Kkl^FbJu^UK%b=OXB8aB,C5boCK6iq`h5Sb7$>i5>:ofauXM1"i30?!9QAkM[H`,FL`hI)-6!EFI
%9+Z</Oh6JT9/4W0*779\V1dlo-$!->\!K0N*5U9os7o:Q.ESN`@1Zi7H1DQ>P@4R1*e9U"nOBX8ZW;\l=Xt<MX:XM$/AB2CHT5?7
%MhNn,dU8bL\hMb?`6=u9N7B-#Lnc`2TVX;E],ST*>QV>_.Fs`aOdGQ&aF7O3BjG.13UFSsEZbD&/Bb+@jR="G]%UC3>DP7PKg!B:
%Zt?SE`bH%qEl?N4<)J_p'Kn_<W5G=WMOF9sW5umA1Ft""BCn:o-It%BKmX:5e;Gf`Ybol]lFiB^256/Iq=4JFJWl&hgiX<;+qClA
%&VgcS5I*CR`X>-tVnKl;TS9ctK6>ZN:a.-!<IU3!8W-ut)N7^2fMsdpMdo&_0EH`%*3,e_p2*Yk"ectP?`@l+BQ0H,=_2#!0Z)XJ
%!tIGXY4HKngb'W-mN<N[63(=dXU\N8gsg9dT1r^6'TZ!?!JM=mY=r`H!l&2#QC7qPNu+/l)V(j05XZ1j><#aInI'I@E!!ds%DUDU
%VFf*g)+BX"OjVTL0b1''mI4^%H<aW61E(Gu;#@cn=^J=nK$/*:mG:aGQ)Yf(5XJ/cTrM!LB8/;U&o4,*cs&atA_(CFg`cNf!(-$$
%M6Y7,W?HN?pCa;qq%2G"fo`p6>s18cUWuhj0>_7a4OYMM3T,-%-%DbEWfeH+(rXJ%=URDnRj/d#*g.L3+#+812$8RqnDPA8RdhBG
%6=!d7\]icbpN4$6l@U4O@LEErR[WG&Tk.5`,.(4q;6(,bfK?U,q*I]E0&L#^Plk6?"n7qUMF7sFbFj$e!\0T"'.Q'+1'i^9Z_W"L
%.b'1bA!d'Z@/IGuNpYO0f,qDb)=%!1MnjuYD1r`o6Q&!A(R=hjU%6_(eO]e$"/3E6ASo9J@Ptd>Z^HZP`E#<;-Fapd!hqW9=!pC$
%o;#"5:).*a:n#ZqF]&2eNL9mD6*jbL?,35ak74q1L6,*N@W3kP=;2WJ<YS]%jMG"\_m=j!QD-8cg8t:@^qud]0cIHn(`Ii73Ml=Y
%RgDJ)ZYiD125BmKa&&feEetaT5$;G]Tt(RD.B+qKR98ep=;b/)[B\:>CaO^2FYVH\@f^$Smjbjgi-7Yr0k-iAHYoP/@*':c]!r[(
%&9E:UCY085LAO=_(F*0-n!V9TXYEF@R?%3H@6=FEhL>0q8mo-=EuCL"g;AYk'N5VMC6+cQ;fee<b!L(*%#dgHArJiFQU[;UiPhD5
%/3sf1Kj0EWWEPbKAdl-0W3V;9aSZ#T)*kX9K4e`9*74b:#H3.2;^T,,^fm^(ON6<b4SrP)b1]HJ&fDn.M+*f;.F-V@Nm2PT-pdYS
%P#"K#/Ta/`l)6K59sYWd",u<A#t825c[ls3k6q5UR4;Z=P^,1=R9@]gO#=hkBNW%[!<=^#:DjLVJj-8.5?6uSgWd#NB_c8D75Ei#
%@;Q87AotsY1!:Rp>c%+Qehm+elR=0FFM`7jWj9ZL_?20h$&l@6XR/kt6l(Z'"2b\8:L87/S+oi47"Q8hl,m,u'?h!&%p8?C]THiW
%YCZeA7HW+jFj'EO;S*b^1<(5lrHQ.t2pD%^NaB]cLRp.r7BFI&R=V&JFjU-s;\#J[/2Ku+M@\Gr.j9H,Z/mrdk3K'e@26N5pTA)p
%h)%90L"GhD&%)_.%MR7'/lIT[&hc<2X?)Yr6Il?H3sa[*C7Y.&l@;]9(kE/T@uF@,?t9)I3)@Zk\pZ0a%9q))"@,m#T*j!^9LU#)
%Sdr=t=EZN/*\$2g;n6utPUj=QWGnS"/MlOrpiE7'"*8S;Tu_8O9RL-h<!Tg]g,0`a?:usQFWm'@l8.P7QD1IG,iGsOaFEEmEiNWc
%:.MZ"'-[QJ-BqHfYe*YU=3*jF^0%Y_C/P34!+le)VjTc8[:NmVR7jK^,W.-=NCA!qp)\-`hrr.Q$sr?jmt<&-O$Wpim7tLgZRj)h
%6R@i&%A^%(^$%`&\YS%?ZBY]NU<fh3.Wq^21"ts"@i.dS^25/%1Fj`7/ps/#3O-G;Ea1F8ltPjE654_"4.9XnG0#Q`2-faW,EUNr
%CtDQPkdSVo\eT6IW/(Zmg)SC:.*$]l/EWc<pLo8slNR1`+8*9[YQ9.TTFCs+5\DpPQ<+W<Ma=#e.s;Z*QW2U&H1=YgF^9&+g`>hD
%IV(!l'a"XDe4$G:5)lb(?))k-?='gd3B5rV3\QT=Ct'S.:VAX,o7N][/0U#$*/ls5FH`1tZHg/kh.Dq'>co$)]$H'/*u`p,<hl$a
%]2qhEO$%/=7T#ro^.7APTTN`H)Dj4FDU4Bl90[*bTG+Sb]NcqYlUBGm>:37`7]@L))F@;.ZSK.b=EMZ_g/CF&4T"!A:cf'Zi2HOS
%An"W>P24i4.;5jtjk2If;QDm#Md^fF3b4FXc%/?HaY?fLft0k!g96lp67T6LCLj=Y?kXD>`gdTWN=P#Ip7\^1As'.4=,PT=c1\7*
%l3*ZgGLgWY/;&+`FQq92?osNVB%@h/U%t5,M:p>7NC<t=Kn`hH.k`b.S-=*gT)m-3&^@A]RVZ7IB(7>^.[OgEl<b('SQb.u(D0E>
%=g"C26cM7cc$R<B'WS35^@kM^YfL!P<IN`s.&P3JJ_HiYac!\Y/),-qN@h6^AoEnjlnADI]ZL:)A(-OO;/+&SQ^bAKZ@7tg^&_e?
%MM%C`/[_61'/sA+-?'k7iK8[;2iMLJOj,%gH8&QNk0^`#6cuO@)8aM?$HfsH2DbuRGt*qupp5phg^1U:Q.%/'D%=fA_=n2:@AuT$
%)rRG%`'kA<F;M+]!gGiZ99BRK2lNKn$g%Ff"l(BrFJgsrmRa?AXV"Y!``$l\)cOQl/kafR'l70I9:[1:RU"[B#3DS5gsBbc:0Uh<
%:l&$*T+(UNKI?Di.^Wo_f9d#.,:F$r2)\KeU*#!aL%mla*U!N.d61C4J<_#[\6J=S`4[9=(3PHH4nBDod/hfbXVI/&QE;R(SY0-M
%Q@scB)KXh68qi(Jp>2Q9e#\.uF3Ye9+N4V8'!YbX#ocj[@$OUSolQL.LdfD;?mdJ'b0F^7+^iL1DX\=dWWk3]B?"Is:*a6]UE\r"
%1P'4HoZ(nXTgb5F/[$i)BGHr;H2i1P?n5s3!#+WEdrK(n?&E&GJ>iY(=r=C9Y-+<V-dtKnDeZB\PB@4jP(),gK+/Rrg4hYbh&i:X
%UNjFc2.^d1=]PO*e#9phbQp+o_X-oGWqEHAN0"EtEkKCL@N7),MAfT1p6Od%PhGAq]lek#G3UV9)L,COom!-^Ke-_Wh%4'e9sDM.
%"%WF*Nh(DE;HSZXaA$-u4lHa$?_O]bG+O4)K-j?1,J!b%e_bZa-ueAU<DKQkgOMnpq?P0O&c#lcZk7>"$oh1P/IZl2=B;$M]SLs@
%g_']-HE!Lm1'`C><Bh%A'oBqjXOtdt??4/nI@+pt&I>ZY$.qUGLsfm*<TOo."_(R29SEOI6+^?p.%'^kMl+SgSl(c/+%1p=#]:Dp
%%#Q`O&=R2O.l#MsY*TJI'Vp?9AmR:V=IQPD4;SpDJ^"7:k;9_]5snDZ\Q!RJ/Lf<uguM7sgAD#Oe.o>B@V]i%+IK`t"tP9OmJhe?
%`J,](9LDedqAfSkbh"DRO5\iLBolu7L-sd<NC-+op:3t_%_%n<4Ob!Jg<rV%Ta_!8<;7=RWpgJH)k>kce93$5i$S1%$!Hpfcd<0@
%JeJHBKI>Kj#g&dFP6P$MXN<g.k>KR=eU[iL)H`8(lR^U]UFO>/i9/YKkB-"!#1He_3e1*/>/R]?<O/;2nZnMq&h)9<Qa1Z(^&O+?
%*uc$Q<J2%l8/pmGT0E!EV[f3'2,6:C3nJm)RmOC;9`#YATUImLL(RLle9hqP?^^061)K%!+I<Og&-*ok!/?.n4%senq*KcfbSAVo
%;3rL7@DRG5=7t_2fc$We:rXJ-3ilW\bHT@$<L733X&51O4Vd8nV@9JdTpumZWhi0j;4c=q\3LbN=4N=.-2)./)+V#tT[pniei!Y3
%*&M]h)PmOdVD[XUBjXu(B%#\,?@*Ke:S;_T=3)s.409m**"opr<?Z1L<hG"-]c:TLk<R;8>AZdDno>n3(MoRR<G,j?-`U\L#MBA/
%V]Ls)'VZ)e!Wan:@#!)Hc%/tT$cFt/g"T.W%p#;tFiutcBQ3[=d.WSq-I@D=<H\OXmg=p)WL$cD3`JH"a#]$e2/E]51A9CU8QY*m
%Yg\$_dV%/2FFFkZ4\0fO0^X!WY/mgqV,GMr4XcO%Qa#o%YbW;q=;&/eVT<U>n]3o7][i\rHC(sd>1NlKg(j8fRE9t26L%*Z#uqM2
%pi5`a6uC2t!_s(F73U.<F&CC1><AW:epjP6AFq*IRI[;<0N<r!5[?nq5Y]$OL^9cHL`&6B@^4$PWq'l/PHW*b1m1t+JJH;f[a<sJ
%.N&eo-T]3@gm"]o[&YJk<DR=WO@:)24N)&0RMO<52q//&/<d5fU9`.k+,6@cEaQ7>K7P)5J26ip[TR1Aq^kZ79rj0sPo]bYkD1J#
%KUDX*/qQDXlK(:u;7\uKErb`uAuAmg6thFNi0iTk!-:^q\+(lR!X%CB"?\tPANZ0u]gKS3eP1Tjd<sd#3jBT>Kf]_l'N@+nPo6^X
%[01<ISN_k,&.k3hGt'2Jm(fh\53";-]:?mB3jp`'O]$h/aL$F2/Q\Z]%;5_BJHd[$@9<e=HL<<gopGqT9p@Z_`%!PSP*gMlB"bX$
%RjYAtTt.%hm'QimU#M\>,n_=&aWPu7;0q;&ZW\dhV=\9XC9ddFm:)8jV?3qt]9l$A@`DkSSd_9DIcSq4W-UD!hqn%ZiVl>uFCq:R
%@[!Oqk[fb=9e15o17Yb[L5S1V9(RKc)\#l49/Eo92NJ(/+]/XD,^M@ppQWl<M5n*`2o=8;pb<(DZaK*r5ROO&c*niqUDi>n9,VRl
%hbBPk`c*\'ck$YX!*J'9.4W?pjtI0PYM*J!a=_e)iL-dS7k;_s,'@YB&[A+R[ab^20WQesoeUoJjgc"]Y:(.jV%6\4-==4rEhfpG
%q@Bq^4&Q,F-]%CDnsHDu8-Y+^AnqmTB.QG+c?^%UN0DNb[8AS(Pe!2mU)fXfT9["B(smH1&CGU&89kE`5H0gW?WEjrg;4kD:Ko?M
%%'V(^?pK=%fqFoJChilM@1$.&'MY)8VM#kX1r/;Y9'eAEAZ?#>TrU&8:&,3=DLN-,94R7RJ0_tP2#;kK=68`,!!Ud"@U'rjYI*$N
%JQ$.p*u4g$:Kp3!NE.3hD').`Z_Do(QC(.3[O@WS,^7[X3LNu=EK_!$!(`e;R24GF)qL^kYCsfP(!6#j.tnn9i&#ASokKFt[?["J
%&W=tWNZ;;nV()@+)LY#F3#aop$_5a)TOt_0+o@Xq6bD]uVa/\m+;0V-L._=T0hE^&_i]Mr2:gMn=C*6;ZpPD#0j2irKS=uM@Pd?l
%on@4!<2oB/V:\Tsa+Z;'_$k3_-!MR&,h26Pfu$Wn95Tn'=&#Yk!hX6^0F4f)Y-'jgXsf3Sm9g0ak/8B&_&'hV$b>U;BH(-ulq2,K
%p(*Igll#)!C:gCp<l"'E/X/XA^4q+pC6T=#"l^4gA+]GnQ-dnW@A./rGRr^I@dlDCNc68"e:Qq9rXIH1SllhCj:tQu!`g+2fRL2<
%Y%]jEBE,92"Mk@/+;X=\`X\FE)9cf1]39iZ0Ql5'`qj\KSYO=.G:AOJ_W[P`Z;W\,#7-Ddk?o#/"@SqI$PBY$$*dZ5RmO-85G?+j
%=_7l\H:]g-'rh[Ze>[1N^"?r::7Zt8df6AZZe:K%9!\&;J9_B;H5R1dldu0&;ITb7+<W7h#.P9a.:OQQ2'_`a-1L<`hfnEVAlSuG
%8QO,%g(g.j)=H,FO4gdJk=CcY4IT48-LI5tW*2gm>]&Z)F(ZuFf+t'T0RNG4G^PQ:s5l,%5IOV?Pb\30bOhWE-KJRb/5@n.<W\"C
%dPW&b(g<>FkO>Afo0FJ`"??$_T@<R^3aoiFPN1^&,.-n2r.`(#^8&a\b6AWJAhPY<#A&!*FS>\Uq%SAcVrML9V3h%8*#,-p1J"_H
%%/R>24:8]f=<"TZh4hnm/<n2E8G9i(#hP.R-SRKKPZ%q#/oJMdY_cLGpSK^V:deDXo;Oc%447<OR=dP#3LU%qU3Up1ZPNpt$%)N[
%ZBla!_bK4S0]Yk_-`51(gO)VT(dmCPVluC'p7)9)d4Ir+?jXHs9>VW$!?P6XaOS1iGaoS*EeE;s^`9(6\J-`WY4OONE0591J>fJJ
%rgMdqa.d2+>accC^V#WRO0pIn5K2SJP@LfM^\8M9F"-O\LcX2rHE9ORGY*iG7JsaNSC:s@dQsjN8`t=RIPn?gZRo%p=_->a8S0M8
%L%Tp6o9ZAH%bq&?*mQW'BOC$Z'tM5p]MtScT<c_4p+Z:IXTcr'T\3)I&ZjkQ\X/ZJ#XKua%1ue?;Y8mD/nMBWCa5EqF%`rM;fFUd
%C]@Ji/n]8:4lT,U='lnbk:AD-"I#^(n<g0^4Pn0&2s5,Rp#nOo#u&%=)$O6$*;BR8lEdRcS:@tXDUrk:jbgjn]Ju67Cca38<[78_
%`O8bHgBu3o<N(K$[)RC),J4.,pP]=HQ^REuUCs.8%#R.QMeed`O9-U:O-O2sbToWYp[>Dc#'GptRb8A9kt8Q>O`SlA;Nqb"lOWt(
%>CZd!6:pTFKWkX:csaR_k6M:DC?aK:P`c`8Yf6o"CYrhhp52R)BD4]$j-Hf2^O(b_1]R!Mo!gVV!MQaP:.+*,"a8?oHEhk2<:l$4
%KADU<Y2ppYpA<M8=MKU3J4dfqaiLs^+X-C7M:$Zl@sCK`U9%,D8ksU>&=iLm5[)]WG1?&/f9e3henqYcXj^Y)Hk&1&I4`$ncQ4Qs
%X$,g>s09Kiq,:s(p+TVUPc4=o6_``_pm;j+WQYD^D![^q4UX[R/ch2S?.rP;>dqXQju$-TpZrGPZRaA\i(KeX]\k.rq"b"\k%J&C
%:;:Mob"V;<?dn"T@tRi>*-^;_X3j,jB^UK\Gf,MY4%_SON]>4A(j8hnG)bb,D:?pF<UI".]b@3Cl.o@Ph,\*FD"-n-41P:8P-mO[
%EOmZ7:t<GK2'SqkQio5N*3nKsg.R.9M=]dW^HIlQHSMWi`02Dmg=#.tKc*lR)PrYFoF`'0HS4uZI?'gY:VT<[png=hk:"j,L`Km)
%^0,*&EgioY+[]3nD,3M=am!pWV2l[cfUHJ$4l3,Eh!.D)GA;]^LadXu"G`gNWVUUJ;1l!dF5H^u=5LB!%TE"b4lX"*)96TSE5EM_
%::F_b^P1&c"Qb[`a<JMXOPK.9D*/l>R1c8p_3+]W0u"GbPJ-:BKPmU^k_-.8-FRXEYJ)m@UH?4@3S-kKonL-?&Z[GC=43Xs/t8fl
%24q&sK_@qNT4E=kRmn0]?Cn(j0"cDLC,]mrkESl`r7aLa76GR)VbnbR\B)n<fng9Y;.\#HF.EOJ=U_o5QcG?lKVE&=%(CcY@<@VP
%F(@T1n5&CIG;hI]Uf<:*T:0OjSTBZr1s4QE6ZdH::1NU9N8I/LaH9<X(dMNT-f-bBh*f3a6LZ2K9u.@$=\cT-5,`P%%)8Uk6I"6t
%OJC(SQ54d@-puJD+sR-b7u?5Cb*F4#[=o6FXE5^*Q`,(GP(+f=S\qOH6OK:U.pjmCL".V60YPibjP?bQEeMbC.&N_jJ6UY#m^c%s
%IsKoU@m,6%S"B08W_D(mrN/4Bk-[[112X`$[Veb*k;F2KcN<>>4(Ya4MS,16Ql/.uY3rG3B.aX!gGHLjO7He09q1XWK_4"$>Oo<]
%=Mi>0gksC5SFbGqOXn)?M.)HW%d9M!_3A/0oc,l_6&pu=@,g0YTYqj8\!5Y3d)Vajj!=5R)bq0#nf'\$j2q0Ea7_RI`P^Or\.r]l
%G=54F)Vkj5DMWFB_,h5Hb#@=I7:`!bJ%"$moX;UY[t8P%O.dnrj=-bZ&m&+0;X"T9<e2Ch,)!En+[A&h[9BGp$6+s2RZ23Y2?+8R
%k+<kE;/c\iWnLQ'Jkef!b\&[[rZ7mR$R<:q_]\&Fh9o)ae6CLKGP$-fR:Vq&Qkl;514dnor=(YFA$6h^!;@N16l/Eq(cAF"-ql/J
%`L[;?$I6)\7E+GE:+(kPGFSO]qtj$i0clEQna;$OCX>ZAqnDd0jo&-rQhW0q@-?SKlAk"2B^TEs[);9TRP&F%\b_pXPV&$5URk:3
%0R/_c%ff)HKQ@7Od>0g(eQ##4LIqgp1l:]F%M[<FI?!8FNBH2e/E>iL%TKW-Xd0WtKoin=5uXVZ$pSjaHDC=FV;l[kB0dLC<?u]P
%$sdXjlf3me9GC1-UYIt/=&^?HjUt?ZrOfp,fh3_nZ%]d8ZghI@p2dUIA-Gj7<&XD#\--AuD)n>%<]M#?F4,C.X1A8X]F:6/D';;.
%FkH'>fQ3Lg!lRQEq^CT8I'+9,L9>]g-RK;Y)Ap0,(MnMiIm54*h!F_t[]IqQ\#.;.i(cO&S8i2/5[3;(?=N>4\b`alo(=A'pkSnD
%QSA;tD$"O3>An5cosh^"6At9:H++0aV&&ulM!iHEhl$3-auk&1Jp.a/nV?D=l?.3rQ.XQ&[2mA3DTX(G!P@5nC<d+`1(i8QM$7&V
%dY9sJkU,(5ai^\kPpV^FqSt`p<E6GB@^KY3?g:bo6h,WWU!nWa[uJ1>8k*jbb#EE^ARAqREc)`Kkc/5ET[f^Z3Rr3:PD`iI2PaB[
%Unuh@^sPd%ogV5ZW!:s^:!u<a0qg'S0<oW5mlitsS2l]r2&M_'>Y<,-)d*QALYaq%jPflj9bgbM)uOJPfB0]1P_sG`G4+T*n)ncb
%9`cXIchH5<V_9Zg"9Hbc3GpoVUrsXD%qLr^4'+>X%69BL<0i8\%7bVAVRC5tWn3a&Au<-Hpes#8%].0Lrq`&6V45/.aG?I8K%6+t
%pkW+u1n"L5<OO0#"rQ8ah2=Ip):<aOqt;m9p?:N_cL9&=BWZ.:9&'*VCQ;qdBI.:YMa&X0_tCJc?[o+?<J/WSCr2_ET9FWo"B0(&
%aG-rfZ`2,sXqDu=ebhGmHsK,u[C@2U?bW*UIsmSZ0!X0FJUFEbVj(g5.n_`.[OS.F2"hJ<Vm;6Gri-Zek.ti%(jft$gn6?t`(/Tm
%U>1uQjN*_^E;si51CTl:$KO;E#AK64j@-`(>oGR5"%tXRI!*WS%[Ar7gQ0$i+#\>VI"Q@DNTJmhXsG>?QVQoZ":?F)EKA/]<B!H8
%?&XCGPa58obs&@2O']D$>,N3\E[DZM+6/=5=p_I9Q/CF@NtN<o\`6"B$3$F!&t!_.V2TaI;dC,8=G8Y/d=WL>7u\"q_FA"p3:_9Y
%W?hJ7XU!afNF\+INY%qFbO]tb!O,HF]`gRq)(0Wsf#+Ve.8I@Fa8:3(mMs!@f=h\tO<4(9k_*c,eIj3j_GS8$OJ&Zj,Rslh0W,aE
%%fkZ:@aljrbj'YZd35+p!U*9?CJ^[.rUg95>u+_[JgKphW[E\^/86AK+>%R&f)d&c[]QGgFjI(naCjX1;;I$\)j<edN2]M=Ds05\
%]&SNR.@>N@#qtoY_ZSPS(bJ>:=,SC(Z)6SX$%#o5&"^I"_FEJ**Ess"=18FK:d;ihAr$(Q'RtufZ")A$q5egu+VbQub,<>SX8(]f
%-^*H#"NUTV+=GHg)BL?l;Ci&0Hh)'T>Qa>-hc@jbIEGE%'LRtfUYN2`N'+Sk_ULl)=G9&EZ6Y42\.X'Hd5DmM*6tFdg5^!;boG5F
%m&q`)0TW_0]lFhKN6U+AJf%'g)ZOV6Br,GtVq6**GC)S2f89'"bc"Ta<o>40&9t=;FYC-+9cjlj0IqT?N!?<[-&l8_%Zds/iBS5]
%nO-V<S<#7lef47&?im-O68A_[D08Ir&P9a:9Z5l*W:Z&i.)6KY4[]o9&OR#)bF_!ij1tKGCg#p7;hDYJK\U8!Li*q4VVrrfT.i%*
%Y`b_S1a4q`fi-@-eBX5Nj9=60#0"lMfW/n;_rk'_([Ta^^io#pja78cZ[fi-=laOuG0*+hY5#&#<]_gb$<>>T)AC:5nB`PrQdcgN
%63+TnQs+mSjua]V@eNHJ;SXlHWG>!WY?1!"9oq%a@.;RHomHrNhrZ?ehnTK9?8-84DX$7MYRU.*=*2#uM+32&nj!G$;`eru&\n#A
%=l/4S*%En@fi%)tV^rBceoaol;3`1hT[m'%]qG!Y-csadr?Ve3T&$l`=@ttt.4/j4^@Pjq<N,tq*!#RC+q=17kn"J`ClgW_.WnZ_
%-I90Tn^/"Z)@*&3&AV.\3KVt%Kq`XPYFQcjFI82n!5,Z[C9gtcVitO<obpa8TZA<rF+2(s#YDEm*=o(#U=jYh`\442@hn5+^GeTB
%YP3<UaOfE+5,J%]QYZjAj4aDtc!lOuF6Pnms&t>^Fd-\)PV1T/h%Fgbi4<9hSJR6J35jD<XgQ<OEW=a,>?%<u;n`QriNI.gV5gXd
%Y_E-_eMrXOYuPK/liB2Gb[GSk2/(@6VJXCg'_o["W+0s^,u=->>TYITJt!nPWA1jkJV9i>1"H$Pcp)1eVXcEPC2og!JuN,5jibE!
%bWBfQE^u\/+>J8$>$RG=S?391n'tci@t#dBArB^BMQ'N7F]V>$Baq/].p!@a-)C]";PZ(tXc4+)Z@@1aC;jP,jWJ"uUl0e`72Or8
%<qUitTjEL4jR,h"f$XDo2PqXPIPXeOOnD>$aJ53u^SW'H='GlZqYi5[%^,k!58g;YY&c`DPY_<D%LUaIo[S"_'U!DgX;IZ<)+N[H
%cLVuE+=?S2R<FEPe:8^<"l<,VnE/R83N/u-mAGtUcmUpn6PB(>aH,@-;8;9R71_QK3UEj]hfS4dT@I;j+E0CQj_#g&cUkI6PmfjK
%Zlc*aM*R+%/+:gLA;U7:Ss)R"o[U,8B%_hMOfumm!b#f8`hDpc<?2kHrTa,'-I"!_7<Jp9eHJ\0N7@UPH4_fbZe_^d5W0QEDOVV]
%6iEj5*B$^"DI[5Ki;9@fRDOi1q]H`00*Y]Bf\jJ8.S_qn3!2FT"R<8;CNuA=Tu'iL+5"0rnB'n-^<)WoB'H_Wf[O;cI#>jL32X<V
%M(/mRNYi$7I*E/@&Q-ppfQJo:Kl45b6a!uR=l5M,XaNb0W4`]4<Urj%595+9F150*]7&/k8Jr&r5r_m-!+B1"<S:hF,YI(D]k8so
%Mi)j^:%QKu^Ab0Kp/AUt.^TbETJ`S!`Foij(kN(]/;b!^NF79LHNs%sWQ/JB19(K$?s<nS$aOdLPcZETeUj<g/h_XGOc/;m.KNEM
%Q+0-%?L]kS.nl);bQW0sqfeUe_etW"#q,eI<a090/98ob3d%(P?.'qp]Or@0'sqtEo?.u^KQm7n9o+Q=*.#dQ87'inTA@64o[pM-
%9dc#[V,s!H;^E!nG#!6ijObP\1RYS$TR6pqSP5`MUejk?LUMb;g\Y-],cV-^X1r<AgaT43n9Kq]i0A-&94UfQWJ`dFc\%N3^eH0_
%`!>%j[DJ,I598:b8$u_hVRuY#'Xjsm)uR?S>)m'fI=D2^S@i&r;JnH=?IK>F\>/[Mo03"]-C@P<&&U@9iBL^E<Nrqi.M-EUb&Q35
%MBj2<h8?u,d]foh%EUoYM+bc-0PpD$)hLh3aaA7Si+dK!$k-";_]T#%i<;[))"<a%-6&C=3,m63f[>7oN/dqN3ocS2,a+P<HXQ6K
%7G_/-l`lI86A)A/s*J`':SgPl";,G#[nB3t[/8[!Q$qI4[u$?a_4V0C4F'"A+*K8(G]=B@?;]OY4P^*>o`F2s;HB5k=&p$6LdJtb
%@r)=_?_S^3MFrZF^+9#n7=",%+3"THm8DM&Tp0Is&HVGs6aU5_=F(usb.;phYT1qpN"k$S9Jq5U4c"`c[MZSo(43oLiA2B)]I#HR
%=6GZI:rLpAonGE6\dAc08Cc`i2_=<^e7RORRnC3.4DJ:K;4#4rcBr-._##O(]sZYUDN].L3F&Vcn()h"1c[fa/T4T:m6c%A>lt0`
%hdhHTL'C.MLP#Q+Mk\`p_O7/+@URp1=G6C.pH+!P2R"/]G?BIq4-P%1AONa4C$$=X_&L!``_Yjem'4Sfp0@@"NU8F"-Ta40TE$l0
%;g!&;@CS8sCrEr&3nWMLgd+g!71hKro!02o?g>9YYM<]>qBjOqbdi-p"lNrA5J0'']C=SkEmg0)s":J.D#rC,K<gX+;_m>l9*?_Q
%-%NA7&g.rl'nr9a-/'S`hWc)U'qNS&#ENSE)]T5-G#d,'i$8@m,o3'0dtm<u,:LVsO.+o`%rZWiIo`<V(03B.?Mflk)C8T8,q#$j
%EK):'A[&d9$:n3.@?kK:7@[Mp+D+Zs3NN*Bk@/g[Kth];A,EU'ibPFD%5V-qDPDlmVD@JlGm';<?/G?g.M4oi(PObbMcqdR<G1^>
%(qSo4:Uh)B)dHb*n-dS0Z]H%aCu5=>WloeW"gfjqH@5!_^bOSJOPjt*Z\N>*3<H.Pdk@Weg6)F^+\04OqI8n3=(1gB>/CJ!n-$:l
%'!'rr/(N/6ng_*u:9"#=@&#(bnU9V7HG-rP.N6';<:7n.boKLAEK^;?"N-2;k*^Em,L`RWUg],o`G!`kma>>LfUoqRTR)Acl#*>l
%c^GPfOs+<<B%Tu;]"=OqN:YeJ,ssAbS/0+UDdT@/=,_T=lXSnJX+iG)nNf@-k47S>55j2^q'!:[jEZSe;B2@gbIj&Kf1t!`7Gh.Y
%j+[hc@L4(D*>i=Ubn:AgEi@Qk']$mR'V\9t)S;25g!La#ed>c,_thGQ.NU_6&eTEXZS'PkB1Ho]YIH$MUoE1YV6^QF0Le1=F\/.j
%FI!/B16MW"Ito--%WV\S]oe*(e)3<eSFZs#XsQ@#_3SNJ7NBloMZ=S`G"0N&&_,%\?Nem#84f;hh\l8Y(&'4g.D2O<SVoa-4Z*O-
%]L<=3>*8TWdL"doWTHP"$NSk%WE_FAVJopj]>W>t*q\7h[uCIh%;qU3[&TTd(V=N&:+WAXViiBV'M/2YV(WnQIT=uq.lP(k-3_lg
%8-*d.COtNe(6Oq/f^URrn"(0*%gWVEV\tWmXb[(rJ3>H47S3sc#-C6"mQS&U('EBLOaVW2Igan:/'*DH'Y]@$_-FBP>eWO_H+R$Y
%l/s]`2nWKC_eMG&=J]&s``Z6+e#i\g#_6A:ZAll>SUb!s!&kaALSt,(RMpdHVH4)9Yd$88jF$nG+&3&g3`<V/nJ+o+@S8Veh()CX
%Y'9iBBP^0\LnIknFY9LA0+11#Pda9uPcA<[m4)d69T39;]<_tbI3r*7WH,N<VdqkNqs#?5N/3O?mZM=jbVn&8I[=q1L-*:H->5$q
%H;8k_2ul0je:'p3RQ@g^X7Tg+>8+<`LbWb^nkc4d;B*Gs4mu,/7ah0s_L;dCA2gb.-Q>nc:/FVkY.%%]WSJc<7:!@KI+mr/a=]G@
%2F4rgS*oa3S="B*UY`1XNlmZ3"F&X$p<Q=)[tC^^W=@<"L`F)@M6qTuKXqj[)5d/?-(B;/.XS3[<LqRPkY:<i;NFU&89Y^A0(1F+
%)hth[J?=`YnZ=jq`<!B1U'&4?0G`^?*^>4PMY5mC2AWW0e%AF^-BXXWM:.BpoPM.Z:YJ+H$..Ws:`4Y;6'_$5oqVNPmus8MO_Z8D
%3D*AA>VKtQ^`(n<l^^(+),B\^F4P<G7IV71Tq"3PgB"(QRWApF57N^O[2drbeo5M?5e52/[T#<tctD!kdH,A_jLj1k>P<5_Q`<sf
%*ar.thm?,H(:N\*=0=hU<MgfJA+9*YhZ7u(ZS93nkffq-%;u)&'#;#TpN(:Q$,&=dZ"V6&A"#@nZ9s%"TFf\C/`j7YW:`GNHS`lc
%Je,P3ps%J<agO1_f0N<B?=;^d2Sck$Vc\oA`l4JOY->;iJ]6Z5^0e;:rp196%ZTE1WET%?=#j`4HZA57-UN'`fW7iJ/'Ygq[Ok:7
%f($2Gr?ai2f5?[`:Y-<R+P'D=GprhVFbTl276d1G^?aj%;@DW]K";?%cS?7m!p"_o`WE@^m%Z8WnJG&npTLdWh^efCos,;F7^F8_
%&Y5sNZTtQ=o\*8F+;Y%7<['K+^#(X>,R!a4g$O7e`>7UC7tUSI93]9QEm%NEC2(Y:GY)sD6t[<]VXl"jf<Wm]Rq.4RP;%5)>t0SK
%-.O>XH!CapE?:OG>g^lO/*eBA_1L@c,2et;0s_EV?$i)]H[tU>7dbp%r&@NhD/oDF7k&n*0)8:/!GndBC`pc3CXki+@3$t)]KFZh
%!kqbGT,p1"c%8JglP<*XCrn"#*5+`0cu[?Lq\hgA.8.-F/QSXG;I[;ASC'j`k-AX4mUHX)jN(DRp:B-1@W@?SFugR@mHF`CYe&YG
%<3JYRLZimH8d9eTSYMAq,qZ`g*ldH,,P!DuW')b2D\p4@[T@_1bEdTCT`a!f4fmXd=M60UnWp;$E4]\m(I(8[Ak[<B@8$`PdKQdO
%khDq&YIEd%I(N!1VA&hjXCN+u<K/XQD`R-Q[],@jJCL72f:7`+qDrEqhd+YeEgkJCFMCF-N6Esn^Dj^oA?+#UJgFfNL0GrB@*8(I
%d5-=Mj.6+R\]q>8G-5P+<3NXd0%E9F'pthLI(.qnmOOE;eV`cKT:)K,IBTpqQEpGXnhu>\J:^>#n&+]o8rAk37@f8<8S8[j=7/YS
%7R'E0,\`Ll;:&]LNQAhrGj)SHW!4Jq*VNRXjYcdSD*>fJ<lS:!\t6/#LaBsZ/Q'%DiflF3(C=]AQLo]3.Sj>jU&Ss9LLEqVRbrhP
%C@,kn$(LJj75Ofdp4]s3'JUZKr*FaJh6C9mc`F&GD69=f^.H^6!Xur1:`oal[FQRY;V^QD_p89p[R,gDQcu3#\8(sD(kd1XI$T@)
%:kgMGT"^b\ZeTY_cI:*>rG^EL#tI;&%TVNdiMPVG]=+jeY^<&4G>A@2D7`T\0;%g1laC[=Et?!2-Aqia/T*RRDr:eWZ8]Ph(12OF
%MbqMs:9rtgb?XouCS>0]:3jHOfX&&W\M)ec6CYQ3ZuH_^)Ub`:od:_`YZs0UL`!JLf<Ep02eS7"ULZ?!3R4HYr+(K#>PPnboJICs
%R7<;*9;]d*KR/oBRrR,=kA"]6(a)^D*+jBhgld5dc/K'Ncg9gm*tINE<!i1;\A=JqP%\hsV+>Url6a83I?L="5bB(tU2m<56A3Ib
%D;Cg__XFHVnngu@EPKl,>PN,:O]Odd7gtZ-.J:WRidQljYDOACgD:sn:S+FH!15gI=DcjFJN)s^'5m<lY15P1=r@K5WfX.$EN:['
%V\tAf2;)DB'OCY0W<b/d:q#0Im=%'4hs>&D\A;1MWfnuRNMuY)%30b[/CT3?-,L5,kk[tc#[cI*86lRBPcg60hffTUC3dO%P]]$2
%*!qhHdTDPY`7q0SCEnU:qOZ%X<Db#"Jn?TJhWhS)Z!Hk3q_c,`("OSV]8pj@eas!tnM]aVF[g1T9d]7"moC:g7,Dpilu!]o;Xo+p
%09WCh3S`0g`\'PWN8-Q.e3;D=3mWs%,du)i`<^0T;[[:PS*XD[8tI+VQ1;2pZr\b1m^mhW0_V8N<1K4XWDQs9g$N*'EXdS?Yq+Tp
%Fd#\KS`,F9<)PmW?[*"PaDM--Fi\%eZs([]RcW2"Y<!\jDgL6k[rEbcLu-<>M?.C48\\L,:UZ+H%lcZPYZarV3W9G)55*[QP$-E%
%_W9FU*^tf@]_Lh`ca#?<\S+[r?`d:oGg7'-8-e]lS>65VYP!%]%6)@\a#97'Q#"P=(l0cYhNa/jP\uh0XQN&SR1I6CTr3V;F_#Da
%Oksl#KQsBX_WC)fac_f_Utq?5Q)'4rl=fXtY/7<PmWUW%>YAia?OEZCqEu'd:QX1#X.1Q\>bK`N;cZrR>`$h%2=nCkA_D9S6cI$n
%oOiC>jc>6aCseTfdDkU[oJpc$T5,;IjFZDICPKj;TrY>i:&l#OV)"Xk*Cd^@4a=$'>Y.i)Wg-/P>!21nCgDOjSM&?eAF8%nf%"ko
%!YK/Ph@kiKT1M58_9d)#aIXT`l@:32nPQSDDEGo(_Yc=%a]@b4Eq].uZ+B9S]2mMq"1O9OfV00s=:gU+!qk%97Ulco)Y^if$I`IU
%Ud+?.qcra9#$#.O3'dks`:FHf^KUi5kag.dfuRIYX_5I1fBac^[S]PBGRl0iihjkF!(*d>j?b)\Q5_>0F*g9qT.JWUY+8fB\W:,(
%SeU9sj$5)_#n"JsK,YqGQXZBB_h87X*p(Cmo=Lhk)IWemhlCh.$SXQ'Yc=(.5LcR[7r:$i&F'O9GOM[hZX@t/'`J$+Dm+qHe23!Z
%3q4K'9UY_u[L?rjjC_UZ=[\H?6NJ`ObqH`d-PPJ'I!Io`T$>-MZh=.,VGa.j"a/'n</W5%Heqt_O&+WobO\g5rU4IGr@4+]HhG(;
%`e)7QZAhZe0N(db['[]-1rD![;XZHLQS[jF95To.P^#3C+WSVOQmT[H'ZqBa7Fr(3Pp,r8Ne_u<GL(0t%Ku`qEl;kr(P&45\]P'0
%_G#.j&D^<-+!P7f\:!@SXcREus02s#bW0hN13.fK"Ko$o4K=W*1.""PEE''Xg7@XCks:`<nCr98$"_6oZCo61(u<AZcgL_+`s/Ap
%]kr$U"Vi&Il\nN>O@N.l`pFop'G"B6^F-HX_>Gfm)9)^%i).pin?:I!ON9<pl0RY93@c(0Nqj`L>YBOJ\6:eAEK+41S$b]Dbk0FA
%4'S_n3?s:1(g0e1%NiaC@GL/H5!Ja3&+,IBkF`T<q,F>`1*\_8jgHmr7"pGY$5>W<3b8F;i9g&YF;SIn_BP9pBRD-i-X0g$1CZ)W
%;eY[$*2kB]OM/A0mV9dHlZFe^G)s-3o%0t5D\O.O\[>f1jnrOs9N8Lic77^fMVm%IZ?'ZU7c0A%[]-m'Ul)tR]hX>=;d2I02e-SQ
%B8-W0SoZTRP:j[rWY?cd5l-Z/rNN26"5QPp&ubu@+%?XJMJ#8U]@4e42-&qioij1BgkR#0M3sG]*nf8W4aHC$T"LhIqn(mNGA@B)
%K]nOs).".s0h*9Gd$_";?8r1feF(2\":thjJfEe(h+E_Is-]X1/dgdRYJYP>C:EQ[`He4n+I.m#>u[i500e<*i1S$'[SR(R^4DGt
%Wm+QXmNiQlg/*1[RoXq$cC'U)"A*AY;1b:#m]`qTi!VF_-^O-PCB^<^4TTgLqdEe=_[Cs"L@/k)Ht%=JKo'QhQ9*C1IFf-(4C8Oe
%!=u+[IPQSF.m&7h0q0o!R`bskf9dJW/J7ZO%%fZbX@$YdC1.^,++C&8+53pl'lFW'ME+Ve8jdieOlbu=s6Z(%)D]"@#-7*(rI1]r
%APt)LDN<d.POYU<[3jc/3qcD>jScY*I]g50.c8NH1WqPR;6_a"EqA=r!#aB6rDi++9J>ce+c"WI%7WZh/-*(-b$:Ph$6>$=h7;mq
%H\%lfC$+;Db4TIb,h;L4h'60jm0o4XHNhdVS5Q,NHF<X"Fe<0D+6MTf!]dq@51L!R'iRf&K`niI0H#k'27tar=V[S]<?-$`$fGWY
%m@rN[$3q.%.)qL9'mT%<0Jk'cL3L"o_/I4;k1qmkqK8#chC^HKnUk-$,X%W/F'1XijEQ7F:Zo8H>FdOh9&EQ-T8,bR,)=4,hhm7%
%f_[)0!]#:F`<%o<*g`17Z)DlBqUPB7l_n,@9Dq[jm`EB@M@8aAI+!u1\9%u3[N%*`P>@e6kMMIBLaK2h9jK.<fECpuM't<[!)f/.
%5#n4fj@c;_\+CFgnH9_"<Y.]mf'CtiBKq"b!J_q.^M^L&JN(/F/Q-E>ki&P\:"u`L#2`!)`<;,RJ^s=S1sWa-S.360f;.8^B$f.4
%o*7qJeJU3.<`@bDrTj'ZR-qPG0&qE!%^Z/[MB7+Y)ge'r7sW0P3Vgo_4j"`hG'eE0#hKKSD#Wtl,@-^-GY-afR'WGXJTrMX[*H8V
%L+?22mqGFaCUm<d0rQu:fB22:$\/-5&9lq<S>/A9F>hgi;U#fR0r8k)SY,OZg:VoQ@uk;g0M)R-L]WbHAkuI-r[M:4-A-^R:Qj6C
%@U7gDJJQh9Oq2Y-KFHLMV_i05[H3`kh.d[ia9bT(Ae4Er'.@:[gkru(VeX+Whf7&Ye7#b"P@>TW8&+dR%k@!n73PO%G2pb/6YsmJ
%PD<cp_a/9Yp$e^uKJCRj"Fj33,_;hJ/)!XcF<UEl.Xe/3A=5pCe&"MX]Jt:+Xf?mmdauS.i?I^Ki2u7XF[hA)q4,<KE0s[pH@We"
%r5==a>GES;i.GY\--H!lcpT<@1leum@"'+++gjA,Oj=an:7;rU:[TBo-<M?:fd[3[da,L(MT<M'T.S[B\@/5qnkpdM#VAJH./O_3
%QMc'Tl6*Z.8Eps/1c-%V%mI2^ostmJHf]R#K$O_&ECX*%a.Ga'CYd"TT-ZL4S@W?o*S'NdK&.J0VGVeJoBWi3U^XmM#3:d/MWH`U
%fq,b`N?]%0o\Vo=)JK\ch0rBVG0,r?3e/_gO_UY$3VbN0Ma#j]3f=NTL1scV\7m0$@l$B+E)5?cLLVE)a]lTId<=a&=E!._pJsC_
%U6H^2qGObE#n#.Gdu?8$rUt9'[M(-A$f,$L:#ObdV]L?cUE<:SbW&F81AOm^AgXCU?c*^qDqg^!0H(trHJM)n\49e6eFc^[=8>7i
%1#&eXibfh-?[;5&^\i=`:qhA`#!at'-VHN0\I'G!hNt@H#pLhP^g#UB._$94O;=q8&g<7[^!70QWOBGrSjJ('NZLl6I]$Da?I3+X
%D%`4pr-AcLfR@(cV&n7:n^e8pIT2CVS*^?(>^Q?fJgN>7F*X6)Lb@BF@oOhI4SW9;Bo)K[Q/M[GPX`5^C8#%!<dl&l4IP<mF-;39
%BluQ&g+ga`0QmsO^(u8Y+0J1=Bh@K^S'AG:5caql7bZ$kUOaLaXP0jFEB):e!<jIVT51d&ZR"!o"ZNH5$oBSEM<4%T.QfY[:EmQb
%+>u6\i5(Z([*Y/U5TO"d1KIkn]W[Ul.:+CXWk-Xk0p11p-oYhi)L,Xm8!SU3(Jb)L5Dt7Qci-As+B75EP_EYc[n#"f%D2CM99K7J
%UM`5\%R&pOB.rY7=Et_?g.SdBf!Zmlf]Zs6mGVV7]g8jbY]!`k93X_p*'19e:pDs/0D]58Rtrp*_:fX<T_2SGS"j!HHS"ShBh`)_
%Y"2_PJo;s&]ce`Bq-68=OJW]`2lUeS=/3aZJVHd/H5q3fP<Kau8>:<m96#p]@XE;R=6>8ge(7r3X(UAX@nR+kF2]2CI?:As\$U("
%NR-F(n2_K,j;DTP9X%5R\R]BhJAhnfn!7(`#)*[r\>Z")l."r>>=2nFI"@-e1_5c`16nl64Y;@tac`-rq;#`gFf1@EpRU<[mS\i\
%of1q^4aMsqO)*9n[u=7Y+jUSZVHT[SM:aL60<_aMs3Wft2q8h<lhm_.jpjPB!Ib\V/?B_rUtU\B5lAG;JcZbmbf\A,f8S')j:aYC
%8oSa]gDnOc&S.fH9Y]jPPt8#S7_gjG)c<3_iAo20=2Pf=X2hjq5eb9Mo=EF<O2eM"?HfqK&r4O^Tt)Wn*IdT7fB3Weq8ZS-m<hQu
%_kr@Xd8]^q4Vpigd738/BD5o;@aETs^2%^1PQQAo?Vu1jq=QqXBcof@I3#2,C^>I`dST[Q=H#X=)Sp'MLh:?'"ehOEGYKN$3MR9<
%f<At%QJWs:('S)LT.Ja/fmGkS"qBG=l-qp4C%,]+"[2ZjVmW%I7>;_G-WDjm%+4BJ4!pd)S8J;6a5dJ/]jGt%)6npW_*"'*+OI0I
%FP".1I><H%iiFIo@4SC&S]Q7r'l`^*Zs7":O_6IKe!<tfehL\WqC[VIO3Qc;LpZ\,H_%>j-.U?cWLdb*CaBPG9BOP*:aBH,1QC*N
%r+h!g1(m,kL%5TTaJjV:rOOrlJn$ZAP&q+\*8/(f#:*M\^\$jT_!`l'cN(f4M,[;9;C7nGQP+m?S9[VWs8/<n$-mr?@(BE%E,`5F
%aK!T?2'p-</qc89Who^d&t.A)lF/#GqFaZ@721T]VP\URSB[9J!E*dK?]J;`,-Kh0H(I"R.#%#-ToNf71WD;tD_j@B6e<V8\=sS-
%3.Pp5qA@AaqEAsHb8ZdikpurBLJA\B['q+,`gN!]Hnr\*iGin>PhnFESARMi@Apr3Z\KJo]HgA*f'o4(#:ij9M*mfWMU>-5#-7C#
%oeZg#R\WARQO=-%a#o\oH`>9mIT-H7a$ljr$Q622le!F[Ospph]eaV+Pm8/gQBMO1V8O5G4oo05#>I-E3_*U%TKsXhn0psMNp`-'
%TQQd?mZXOY-quMB*_Y]And:<['@@Jb=E2$7StE/KIu61:+bV=qqe4u&GTF!X^qbt!0cc>R6XR,Zg>m^(7]pK,Bd*#fEGrZY'A`n#
%gnGGAHm]up't4aa3*B#f7`e1%nscpG0b%5/YG'9HA=e@k+>s)pm"'Z_4m5!_@:Wj"Q4IN<[Ce](p?P^"!%X=NG=*g4YD+4F-+-b/
%^X)8.Nfm2\et3urrgG)8?F'hkJ9kl'ilnr59fE!BX=%JWBc?0LroKXt'hSQof2jC)oeZ&/Y5_`2,lZkI",VKAHI?0?$GX.Gpc=d4
%\+:m&m8GQ1"77J=fj/3dh/oN\LREp$S'?!G'LD;Zmu=HP5S^:"DgH4SQ=*gufbAaKbn,'21:Q_:bB?6C4+LAOT:aop:EN7OI/<We
%IWn1pEQ7i=mcrd$o@u,*)Eaehpe"@#^..*XH*j*;=>m/!JRe-dml3?iM$'tJ8pYl/L,Y)1D%\N3nQB@F80oM8@*@`Z=/TqY:=jH6
%H1Cb7ldKIdg)1agiF.62Fq.f0ID%6h==lo8Fqmb$BoL'%S6he^6t5Ti\h:ZAWtWJFWjP/um)*A^2B3<rpQnKhRt6qsUrK+:0>qpr
%F6C34^#%La<%VdlL642qgT^Ci:]Qgn=)4>S7/sG:ms-"Y'OGN"$"e/d*C0G*o1ES5M[e0%dg)@$+,\eMd?8%PQ+6GSHN.6<r8pb;
%UA/U<OXmPs$d.\VIc%i7k&DM!A"8Ic7aa[+r5FrG:.3A2k2C+<HgEVu;WT)>9O6&;U6b:&<ehs]Q/_@F)F60'kRB8-OD!^G,DL#O
%kj9>r.-_%S8cgi(hT_UX!"Nj%g;XZ>B1?Bj0S'7V[2ak^&m;W*_Ggf(Z.b,.H34Ai'%TEeoL.">#LEA<Rki,uebJpYA,)@00J7\i
%eLsAjf81Q?"S"rDM:oRcV@"htYq;5;?mGgmapMuf9&XiV"jbRc(`0ng.=ZDGrse/OdF(IlU2<t/`Q3t9B<<#8+s,?'Ta?!rB36_T
%aBM3!ELTQ.&oT4=JMrd,:lM7E_Ofo2+/&FX-7GfJ,O]fn\YD`?n/#:LQ!`?\,"ustpb"kP3Rc-kd37[d`oNWO10iJW+gJQ]i(<-q
%je3D=Pp$X>)ftsO%Rc)pO`3*UE!gVZ7l?YFCX^XeN>Xq8?Je=J`#tS!6tnf1!71L[hYF5j6a\X=X:+NNEXoSu2#:O=:hN%Yral_\
%*iNlP\-AV#//1DLU2P:1Oq8@h3[c*X8Z*=NA@9mh,[h%j'@$n67TRiSUTCl5<FZ1AO#'!il+ZKlHLqPV>q0=IFD]fGli=eL45YO7
%?@ZPqM%\)04Gq2!k%6n7G1(`PKjG88KT?E;/\6TeB3HHmFeTZ5Hc&<r$.kA+H9-9M]*WM23hM`QLmo&`pG7a8/X%u6LO\A9mXH-q
%1)i"+O&A7k5EoWuctUAYEVS)JrPYq,G9n^%$r3aTZ(!1^-7!?CWAZ$i42\VT^/I18m!'[$rHcZl55+=:$,g1P0`r=%VniTA@2'9W
%,M^-rX'/HXXdIZ:9\RUF2ps%(1QCK%dL^I%&h::>cFQ9+_jnsmlo=O`DeBmV\>J?I+'$c/QXDr1X%@d\]K\n<L@*>k$6PeS9$DdP
%bYgTHh,`3N<dtgN'&b.EWb*:>#*_%_4bhFuGJ/0'FV9kUA8,a1WSO"5AAn9":-/L,e!OY`:d2K3AM%M9=DG/u2,usEN8W9..2r8[
%bME4\P#M&VO#@_4`<&#)eLbBZ8K^PS>r+Bu!Xh_,W.'7VZB@J%0s0:"mi?OZ!qOC"nEjn)hCC7AT!g%WidkR4C%`*(kM/8P(6iF3
%l$lY!6iU=bB2j.jhm+/Rhkol;rq@:meq`kA]c&[3q`'=t0NWAA@)g-nU8`B<YfJTlF90cjEotCYENNuA]R@OhA\I,Op0Ktu]+Y`C
%`gG;[7)TuK2J:'7g;';c`Ye=H]9Z?nSVhR.'G-4O)*skOUoq+<=,5OK4iU0);Sf=Nou:3\GV-,6-h&LYNH*aRcu1a!Wli:Y3_itN
%Wor4n=L:+B4s^B8CO;%Wi>%jXWI?,4GN0`7%(0M0c<,<56bd!"@149>pb;JPc*L!N<l*[:7r?gu(l7[]"##Mg;q%/"EM'qLD<r6`
%M4j[JT%6F2SR+$OjMZ)E]Hml+p7-<hW.L#$)D6?K:)1mn:#+/9U2kMd^a(+'QD!fdr8H%Dam[5\P-ItUM%u4VfuZT>_"Qh2a],&O
%;ji`:,"6%=\^$<A#sDN,k2C`;?oWH\rGGa[p1#ekH$#p>VbbDkg(og('GYn;dinl45dl`R;mjS^l/#qC.78+pF6ql[*_X'inB./O
%Ke@?K20%d==/_YeDOnX<k^d;iWTjrNP;J&f@l+PXg5=IO_C"Ep/bNX,W7ZaC_%blIf1a6D1K%<K85^fP=79qs*cCIcO;4WC<nYgV
%cr0EXZ9`E6+:<jrUn<ejY'L`)P#KU9n!=7Jp\B^X/ot8'JXWL,bkSIhYb!+*&c)uMik?0MCK:W2qVpP+I"^"p3LBahN>N$hRYFtL
%,EHi,l9J='m0!mD%r6P0'FeD=7'18:KNI=cEL6j:ORH]^@mo;\VY#-kRR=fnSJ#h,(2rEJPh9:M]Xt7&E)B473G,8'7^]cEU#@N/
%U,fQ/@Lh.EYtjqcIMP#uCibgJ3ka&$`Xunu1Hd:nS:nc@1>YOB0g"8uGc>]<^])S<IspF:Tme"!\Q#8]>(h/u8X%M8T*Us"Gk#iY
%ChG8<D!.M5D%R+%Q/.@'THt_MDAumg82_nI#3^61HXWtjR?WKul-)$Bju&*qN\X33XGI_,p\51ai5PQRD#;Xa+-cp8oOi2Q]==?D
%&cWc_O"res_IA`QTMs#Q"&0MYQGfeAS;Fk+khY9=cIRY]J`^CP(j4SD2*Y.t>Km47qmP9!Xaj%EC0PU&-6sUGcHW`QMhf`9U)m.@
%>tO\+(sigVD/3>BY+I2D5F$u37F;]VjcrX3_5'&QV;1l^ALXV6?ZYT4Ki2/Y,P!&#_7P=CBJB)H=4*I0GGANia[#6'p8`7fGj)/N
%;8L'#8sGWt/\D>n5Xtq<(A1S1ZtjP&HPY)O-D/a6VTI2/\X/?;$#B);WKr]R5XAB-S1VuT[n)\NGFsX.3>V-JeRqY#>eMTq)aVAN
%rjkMhp$L1#J^)=-q\07Y4AEen6\:@Jn?AF'XoJueSI$,9o`"+R`E&hSAMaba(/56\K0'=?57QIgJO9PDP?[XX[#<,>L:u?A3,`m,
%')`\h?9)uOMI78GqNtm>?FHcT;*N+r/$H,%.Er%VU0107Ve\ggCZRp%='f1NZgA:`)Ng2OV'qrbO("ItI1$H%[]n3nLA8TmAAcJZ
%dr8f`11hp;3LfqO"Gip8<o/\bD39@O6%Kj1-[Z&cGR_uUAOAUW6g'E])gdEML'qm-0a]^(-Uf@QdK2/]*d`qoi9b;PkM,F:UV2F<
%kA8o">Z)r,fats=NJuE"PUem?E?G9uZ+Llr0\nbVR.CSkUfK1YCUo"HQLu\C?CBF+5'pu>OA'3@.63=?b1g/G+%?h3ED!r<<5,13
%4cNKbjj!MK%dAo$R#K$D__jc=YQ3mOdijo&/4$8CHLG0=GAL-;=Nf\VGdu3:K\YX\Ne0-J*/2?JG1ZI&\rYch<f3-<cq4\A'.h6*
%h)u:9J5(_+.QW^d9:snqO"*&_;QU/b:Fp'hMg,m6/eeWG6Jq_)%W*ZT2/7-qLOhWT\C.nW@rrC3HPZZAh0(rF<32X4.H3a2A0]3'
%U)/t^,j3t#n@sEo)=MQMGf)dC^(O+kPeefcV-CKN@/AA0(5hrSXQ'UaUDA[/(NNQ!M,Q2eXKI672?2PPQ4Z,fl@@XUnW/3;.lOro
%^UFtp@E*d*=".7QnhaSH.ju27BuJYLbOhh^Wg?DoF<I_$'f,ZLi\UJe\A)VKrU=T8hk*))V;8D9IcY]G931.6dW0`\ij7"X>Sg,1
%`BqE'Am:XN8.Z88-oSEE9;RXu39IT2qOFu=G!9.6qHC8kCB%auPg81e\[u'fMuns[$<.lpUXKIWgDTYs1/LqQf_\*5!HBr:ZOr%l
%H9[4rnrief.7%2C4o-[J9<=hs1E83RdK7-8'lbkqA-lOfK![C/PUFBEqPFYVB[_f9%ua75'q[g/9^CuDX]4R;TUTM>30jM*'.,o>
%FJ:cO3;(aD52U)R(3ODEmr<7XAp%IcF9eQ90]b<iO30k,P(k;?hr?b$5Rf7m/X:f#@,)V+#6=+t0[O7eXD^aoml\mtn]K2dc$cVr
%k5%:$c):bsMoZ/XEir6OJTm[ohTN)7RJmCiFW4LMLTR^3%Eb[#aPLa9TdXA?LA;CZk%E^06Y+Wp"Y(]p=i2pV(begU<VnR%h6shI
%]nR@A*04."2TtF"IupZO2<2_=qrjULl*IkH4/s+/(#=<1iR:7_#NDAWF^-*OP$HaYdRm5]>Ge(*lX$/^k/"r@VA);#:D#)2LJjcl
%B(VeDi=arJNm]/G)@d3LEof(dDlU+]/c3Tnp9DO6mJOUM[peR1dSe.rW0`LD>S7=*N-.l-5<X"+R#*":]7:>-3[qlnSe82(Aq`gE
%Z^/SA`6>fjjk^-?gb"`'?cO-jJ!)*`&&8uP7RQl:GAJ^*&>`O\62--g>I4OSp#O*=jqDI`]6RGZH@>*>gJ_^"A4l];C%sSa`JF8`
%5$ZkGINs;IX3P"aq&?G6?!iOT)QA1aR7dZ&ReNWLa]+f<:kPY].A1Ib_4%,A@kCdH_6Rfl+O8BtK,b#ict!C7>R8H%o:auW'PNpU
%+Z)\Y.14`JFZ?tsj?YWAc(#;5A-]ElOt%91;$8ciC@DmIG0\9K56<dF26OLA.`e/^H5CUE&?4EUIACoV3=3FsaGgZTLKd;Ejc2Be
%5PO?:1EJ;%ZM.nU?m,&=S$V)t5MKZ]RKY-sZ.r,e+!pf(*C]*ee3m>+@?3G`5]IT;LU4Q`?Crd)0[LSsH$`npdAD<9T:G(:'a4'W
%+B$pu+"7<=#1APNPd:Kt<5VW$&LntPq)jYf6\I-g!MoN4>u3'*WXf6u^$m`,UM>W2j%D7kC%k5WS+[h6Kb@iAV,IG;1XHU"XAe4N
%>H)fkMP%6Qe+>rKBT7dSfU[p#=0Q)5IXQ),p!S$Ch-&W'2'AdE_4'%TO+:nXkH>eA3Y6E)U]<bF3>*T0HFB'i='B6je]p5%IM,"]
%F`@blrU%bK,<rsC)#;8GQ^>+eUfb!MfA8`dP$)pA[l"@/N93IsQY]N1OtO5'IJI;0r2p)?l)."2na0SUc/D[q]"DdLnC=AsnP[Vl
%^\u"=kJ$lMf*<T"*ojS^V(Sb?-0OcqZ(8I:[G8>Opgu&V[#_[W#KE6b(X/S83P]E(@&#'-edX_2C6$;G=.Ae<YSR(VWbnpgq_/bH
%WCA_2d_nV:.@#Y'/fT.ef5BfTfRp2i93AeM\qmqLT1W/fg.QWNl*7Xqf+@3tV<_(1s405_genl\A[4rS(G#+P0-KLmWF!!^T8A0+
%nAL7Z*^WYQ,W$\b%'u-]%*U=#=V<8YY.-q/>1c%p'r]hVh+H+W0S*&5cW>7siNTCUjAIg'[a2)@jJF;%\44B'dN*6]f&n;D,k[rt
%e_*[F4Am+d.,rAVh42&-a]#Rs[/K">ReLA9Xo"6%7XP5^-P'AtIOsR5f&H&MddTfDdq#5glOq2MXLk:=X+mV7*dCJ-@?"16]^KF"
%JFaRHKJ.VUEAcmQPEAeem5@B9[KU[^K/Cb&#''4rp6'pf\ZAN5H'j>iArL@`3t/bB@<]qH+@ea'S",ejV-R!F9+L$[lUW[NqcLj(
%4-r!d`<r?%kmV*hbnE?u9*tM.*46O-4$JF[%=_[jY(U&$l5-edGKs2jQY1;Fp3F10mUb\b`_f&9gR5L!WYT0PMe>hD4=2lj)[cta
%jL#'1U_VE"MfS5C&uE46W-Q]lgn^t4l5]4t@r8#h5ZIt^0eW-t]jiaY+Lu1mZ^2<5Dk/:,p'tKdap\rAXV(Arins"o1`%"KZ8!6X
%;V&7iZQ,39>)'B)>c_)2VTYE0j3npbAnFq_#(c^rd9YDPN\`\9UZBt\;0OjPQS$tO(Am27*cM!JN&4Y-Sti9E)"2.p`0=Q:i?m+0
%?q%<mg5ho&%RCrV&3U12h@GLh:H&-;2_9Lt&eP_#^eb\.AJN2^GYO0NEn-V7d=_iZG"F+aM/?16i,#AgM<^uAZYXiBM*:0UI64eA
%p\]WbH,F2JY]%q/-E2gX2(*rT^Y/V;5So4'Umj@bb,$t_rHK9:NA*ATj_TSlfO]p;ggH3I:H+)[YK]_GSIaddb6AdcgCVdG-=n@9
%k=emAM@-ko_;&<M5Kt\h_jdEh=h_q5HRbF9:1:]3$+SPQ:=/K-DJ/Xt!?'[=C%r5]N</+.O!Elc*5*)Y3C4h[29XVPdYpW2okFrj
%$WIO`8nGeu.uk#=T#a5;%>*P`DtA-r"c'FIK9T3\j+GGe"YsIBf8;`Y5s//(mBuKW+b>.q-"&%*^bS<@$$IDf9.@JU:CXc;F?DnY
%*!b)=dDSaBptuD[5;cmM4.k.KNiK>c[`,t;4=$.$\TDo3\JA\I]Uq-Ik^Q5+SC@Qb#-d.QPPh[RQM6:U-(6G/<uCQ"Wp(pj=\"!$
%C,ST:"-1K>2c14;mM+.([;:C2L8DUTbRu5TULGNm%MKmm@("aW5\bI&.JL>L!cb]UA8?Vfb0$Te1f_^$qWUobJEc+l>%g7a(fTLa
%B#tXeUi3AM_jW+=/DXZ3h'GA4q`o1oogu!g`#3@/*XDE#(MQUY7lEgDVHCnZG5A+A4-W(C?ff]W!X+jCO\rSIn)(7q+O5>5-aV9Q
%C#G2SB<]OL*,`3Qq7#9go^ktBr9"JLb=EPopG$+u-OE*W_DGL89]fBGA&F]@KrnD#URq?@>>WR(;[]d?nS6L!*hF/D\!"ug`PKo#
%(G5]G/R_+c>d$L9U&M]qGhX;6$8frNQR$%.atjI\5"L%i6^9$+!YZ5ECDa4/k`mDO0.l__/g"?5\X'fSQkci[*PjJeIfGGBGa6$+
%;h"<p+f7j"`BL-akaEl"FV@6:H)!nnX8^=oDF45$S_DtS/#`Q=WYl10Od?ZI(n*`rm9JP,hCgF+`9,!%k,D[Coh.%JNH^?<$pYp'
%p+ZUG-;56.3>uc"U@_n!"#@APJERU]\<.+iYSnA,c[uh);Ba8D`L`bE-@Flim*%?#=Pf>&4PCr[bU)SS*$O!*#nmt!;[%DdH]QMQ
%rP/C0^\bp`qiC&mrJ,n!Dr:Tjk9'_E]3Q6Pn=TaYO$EW1^\mnWr:K#Vrr2BcnR):nq8_t'r(m=q"n0M3H2Xr8rp_X+rlb?<kJ-ri
%h7rm^J,VZ;iCinur8A1dn=T]thuDO4"is8BOT~>
%AI9_PrivateDataEnd
